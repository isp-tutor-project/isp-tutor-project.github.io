{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/database.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/localStorageDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/firestoreDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/snackbar/index.js","webpack:///./src/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/scene.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/activity-config/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/navbar/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/app.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","STUDY3","conditionActivities","1","2","Database","dbType","this","userID","formData","activityKey","decodeJSON","varName","super","classCode","setCredentials","console","count","data","Promise","all","getTextValue","getActivityData","getCurrHypoTask","getIntialHypoData","getFinalHypoData","then","ccRes","uidRes","rqRes","chtRes","ihRes","fhRes","rqted","currHypoTaskIdx","firstPrediction","initialHypo","secondPrediction","finalHypo","getJSONValue","JSON","stringify","saveJSONValue","retVal","moduleState","selectedArea","index","selectedTopic","selectedVariable","selectedRQ","catch","err","error","getIntValue","pred1","initHypo","pred2","overwrite","resolve","reject","items","localStorage","setItem","getItem","undefined","parseInt","parseFloat","parse","firebaseConfig","apiKey","authDomain","projectId","firebase","initializeApp","store","firestore","userRef","collection","doc","update","usernum","FieldValue","increment","docRef","exists","getUserData","where","FN","LN","MON","DAY","snapshot","size","log","docs","getNextUserNum","userNum","conditionNum","conditionStr","assign","condition","completedAssignments","set","userData","assignments","activityId","includes","push","state","activityState","merge","delete","SnackBar","eleID","el","document","getElementById","text","innerHTML","classList","add","setTimeout","remove","app","sceneInfo","debug","id","k","v","entries","handleFollowEdgeButton","btnNames","btnName","show","hide","e","preventDefault","edgeName","target","dataset","edge","followEdge","getElementsByClassName","getFollowEdgeElements","addEventListener","once","sceneType","_isBogus","currentScene","defaultEnterSceneActions","customEnterActions","length","performCustomEnterSceneActions","defaultExitSceneActions","customExitActions","performCustomExitSceneActions","resizeContent","setupFollowEdgeEventHandlers","warn","customActions","showBtns","hideBtns","prev","prevBtn","next","nextBtn","action","args","VideoScene","videoStartedPlaying","videoStoppedPlaying","getDuration","event","timeStarted","Date","getTime","playedFor","timePlayed","Math","round","duration","type","video","videoId","readyState","currentActivity","activityConfig","database","homepage","activityID","activityFeatures","features","split","filter","item","getActivityConfiguration","activityData","querySelector","homeBtn","activityTitle","glossaryBtn","glossaryPopup","signOutBtn","signInText","goHome","toggleGlossary","signOutUser","homePage","calcHomePage","redirectTo","toggle","window","location","origin","url","allowRefresh","href","reload","clear","title","innerText","toUpperCase","userName","displayActivityTitle","displayUser","appData","defaultInitialState","sceneData","scenes","db","schema","getDBConnection","defaultState","snackbar","homePageBtn","sceneIdRegion","handleGoHomePage","handleNext","handlePrev","handleResize","startScene","prevScene","bogusSceneInfo","sEl","cEl","sWidth","sHeight","cWidth","cHeight","sc","offsetWidth","offsetHeight","min","style","transform","feedback","markActivityAsCompleted","top","handlePrevButton","saveAppState","handleNextButton","sceneId","getAppState","section","querySelectorAll","sceneObj","createScene","sceneState","restoreState","lookupScene","gotoStartScene","setActivityData","Scene","scene","logSceneChange","gotoScene","pre_exit","exit","post_exit","pre_enter","enter","post_enter","displaySceneId","newSceneId","edges","newScene","switchToScene","events","from","to","timestamp","now","start"],"mappings":"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","file":"rqintro.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nexport const STUDY3 = {\n    conditionActivities: {\n        1: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEoneDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ],\n        2: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEbiDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ]\n    }\n};\n\n// abstract class - interface\nexport class Database {\n    constructor(dbType) {\n        this.dbType = dbType;\n    }\n\n    setCredentials(userID) {\n        this.userID = userID;\n    }\n\n    lookupUserID(formData) {\n\n    }\n\n    loginUser(userID) {\n\n    }\n\n    registerUser(formData) {\n\n    }\n\n    getUserData() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n\n    }\n\n    setActivityData(activityKey, object) {\n\n    }\n\n    getRQData() {\n\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getInitialHypoData() {\n\n    }\n\n    getFinalHypoData() {\n\n    }\n\n    saveValue(varName, value) {\n\n    }\n\n    saveJSONValue(varName, object) {\n\n    }\n\n    getBoolValue(varName) {\n\n    }\n\n    getIntValue(varName) {\n\n    }\n\n    getFloatValue(varName) {\n\n    }\n\n    getTextValue(varName) {\n\n    }\n\n    getJSONValue(varName) {\n\n    }\n\n};\n\n\n","\nimport { Database } from \"./database\";\n\n// NOTE: this API must use promises to be compatible with any db\n// we may be using, which may be either sync or async\nexport class LocalStorageDB extends Database {\n\n    constructor() {\n        super();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        // return Promise.all([\n        // this.saveValue(\"classCode\", classCode),\n        // this.saveValue(\"userID\", userID),\n        // ]).then(([result1, result2]) => { });\n    }\n\n    getUserData() {\n        console.count(\"getUserData() called\");\n        let data = {};\n        return Promise.all([\n            this.getTextValue(\"classCode\"),\n            this.getTextValue(\"userID\"),\n            this.getActivityData(\"rqted\"),\n            this.getCurrHypoTask(),\n            this.getIntialHypoData(),\n            this.getFinalHypoData()\n        ]).then(([ccRes, uidRes, rqRes, chtRes, ihRes, fhRes]) => {\n            data.classCode = ccRes;\n            data.userID = uidRes;\n            data.rqted = rqRes;\n            if (chtRes) {\n                data.currHypoTaskIdx = chtRes\n            }\n            if (ihRes) {\n                data.firstPrediction = ihRes.firstPrediction;\n                data.initialHypo = ihRes.initialHypo;\n            }\n            if (fhRes) {\n                data.secondPrediction = fhRes.secondPrediction;\n                data.finalHypo = fhRes.finalHypo;\n            }\n            return data;\n        });\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n        return this.getJSONValue(activityKey)\n        .then((data) => {\n            if (data && !decodeJSON) {\n                return JSON.stringify(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    setActivityData(activityKey, object) {\n        return this.saveJSONValue(activityKey, object);\n    }\n\n    getRQData() {\n        let retVal = null;\n        return this.getActivityData(\"rqted\")\n        .then((rqted) => {\n            // console.log(rqted);\n            if (rqted) {\n                retVal = rqted;\n            } else {\n                // if the rq isn't selected hard-code to crystal growth\n                retVal = {\n                    moduleState: {\n                        selectedArea: { index: 1 },\n                        selectedTopic: { index: 1 },\n                        selectedVariable: { index: 1 },\n                        selectedRQ: { index: 1 }\n                    }\n                };\n            }\n            // console.log(retVal);\n            return retVal;\n        })\n        .catch((err) => {\n            console.error(err);\n            return retVal;\n        });\n    }\n\n    getCurrHypoTask() {\n        return this.getIntValue(\"currHypoTaskIdx\")\n    }\n\n    getIntialHypoData() {\n        let data = {};\n        return this.getTextValue(\"firstPrediction\")\n            .then((pred1) => {\n                // console.log(`getInitialHypoData():firstPrediction ${pred1}`);\n                if (null !== pred1) {\n                    data.firstPrediction = pred1;\n                    return this.getJSONValue(\"initialHypo\");\n                } else {\n                    data.firstPrediction = null;\n                    return null;\n                }\n            })\n            .then((initHypo) => {\n                // console.log(`getInitialHypoData():initHypo ${initHypo}`);\n                data.initialHypo = initHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    getFinalHypoData() {\n        let data = {};\n        return this.getTextValue(\"secondPrediction\")\n            .then((pred2) => {\n                // console.log(`getFinalHypoData():secondPrediction ${pred2}`)\n                if (null !== pred2) {\n                    data.secondPrediction = pred2;\n                    return this.getJSONValue(\"finalHypo\");\n                } else {\n                    data.secondPrediction = null;\n                    return null\n                }\n            })\n            .then((finalHypo) => {\n                // console.log(`getFinalHypoData():finalHypo ${finalHypo}`);\n                data.finalHypo = finalHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    setValues(object, overwrite=false) {\n        // overwrite param is ignored, as it is specific to firestore\n        return new Promise((resolve, reject) => {\n            try {\n                for (let [key, value] of Object.items(object)) {\n                    localStorage.setItem(key, value);\n                }\n                resolve(true);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    saveValue(varName, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        })\n    }\n\n    saveJSONValue(varName, object) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = JSON.stringify(object);\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getBoolValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (undefined === value) {\n                    resolve(value);\n                }\n                if (\"true\" === value) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getIntValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n               let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseInt(value, 10);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getFloatValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseFloat(value);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getTextValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = value;\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    };\n\n    getJSONValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    value = JSON.parse(value);\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n};\n\n// let db = new Database(\"BOGUS_CLASS\", \"BOGUS_STUDENT\");\n\n","import { STUDY3, Database } from \"./database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7zIk-8V20QqJNSs0cAV0uNL3qjeqLMdM\",\n    authDomain: \"isptutor.firebaseapp.com\",\n    projectId: \"isptutor\"\n};\n\nexport class FirestoreDB extends Database {\n\n    constructor() {\n        super(\"firestore\");\n        firebase.initializeApp(firebaseConfig);\n        this.store = firebase.firestore();\n    }\n\n    setCredentials(userID) {\n        super.setCredentials(userID);\n        this.userRef = this.store.collection(\"STUDY_3\").doc(userID);\n    }\n\n    getNextUserNum() {\n        return this.store.collection(\"STUDY_3\").doc(\"study_data\").update({\n            usernum: firebase.firestore.FieldValue.increment(1)\n        }).then(() => this.store.collection(\"STUDY_3\").doc(\"study_data\").get())\n        .then((doc) => {\n            return doc.data().usernum;\n        })\n        .catch((error) => console.error(error));\n    }\n\n    // loginUser(classCode, userID) {\n    //     let retVal;\n    //     return this.store.collection(\"STUDY_3\")\n    //         .where(\"classCode\", \"==\", classCode)\n    //         .where(\"userID\", \"==\", userID)\n    //         .get()\n    //         .then((snapshot) => {\n    //             if (1 !== snapshot.size) {\n    //                 return false;\n    //             }\n    //             this.userRef = snapshot.docs[0];\n    //             return true;\n    //         })\n    // }\n\n    loginUser(userID) {\n        let docRef = this.store.collection(\"STUDY_3\").doc(userID);\n        return docRef.get()\n        .then((doc) => {\n            if (!doc.exists) {\n                return false;\n            } else {\n                this.userRef = docRef;\n                return this.getUserData()\n            }\n        });\n    }\n\n    lookupUserID(formData) {\n        // returns userID (truthy) or false\n        return this.store.collection(\"STUDY_3\")\n            .where(\"classCode\", \"==\", formData.classCode)\n            .where(\"FN\",        \"==\", formData.FN)\n            .where(\"LN\",        \"==\", formData.LN)\n            .where(\"MON\",       \"==\", formData.MON)\n            .where(\"DAY\",       \"==\", formData.DAY)\n            .get()\n            .then((snapshot) => {\n                // console.log(snapshot);\n                if (1 !== snapshot.size) {\n                    return false;\n                } else {\n                    console.log('record found');\n                    let userID = false;\n                    let data = snapshot.docs[0].data();\n                    if (data.userID) {\n                        userID = data.userID;\n                    } else {\n                        console.log(\"no userID field\", data);\n                    }\n                    return userID;\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                return false;\n            });\n    }\n\n    registerUser(formData) {\n        let userID = false;\n        console.log('registering user');\n        return this.getNextUserNum()\n        .then((userNum) => {\n            // if even cond1 if odd cond2\n            let conditionNum = (userNum % 2) + 1;\n            let conditionStr = `${conditionNum}`;\n            userID = `USER${userNum}_${conditionNum}`;\n            // let activityList = STUDY3.conditionActivities[conditionStr];\n            let data = Object.assign(formData, {\n                userID: userID,\n                condition: conditionStr,\n                completedAssignments: JSON.stringify([])\n            });\n            // assignments: JSON.stringify(activityList),\n            return this.store.collection(\"STUDY_3\").doc(userID).set(data)\n        })\n        .then(() => {\n            return userID;\n        })\n        .catch((error) => {\n            console.error(error);\n            return false;\n        })\n    }\n\n    getUserData() {\n        // returns promise with 'doc' if it exists, false otherwise\n        let userData = false;\n        return this.userRef.get()\n        .then((doc) => {\n            if (doc.exists) {\n                let data = doc.data();\n                userData = {\n                    userID: data.userID,\n                    condition: data.condition,\n                    assignments: STUDY3.conditionActivities[data.condition],\n                    completedAssignments: JSON.parse(data.completedAssignments)\n                }\n            }\n\n            return userData;\n        });\n    }\n\n    markActivityAsCompleted(activityId) {\n        // console.log(`markActivityAsCompleted(${activityId})`);\n        return this.userRef.get()\n        .then((doc) => {\n            let data = doc.data();\n            return JSON.parse(data.completedAssignments)\n        })\n        .then((completedAssignments) => {\n            // console.log(\"BEFORE:\", completedAssignments);\n            if (!completedAssignments.includes(activityId)) {\n                completedAssignments.push(activityId);\n            }\n            // console.log(\"AFTER\", completedAssignments)\n            return this.userRef.update({\n                completedAssignments: JSON.stringify(completedAssignments)\n            });\n        });\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON=true) {\n        return this.userRef.get()\n        .then((doc) => doc.data())\n        .then((userData) => {\n            console.log(\"userData\", userData);\n            if (!userData) {\n                return null;\n            }\n            let data = userData[activityKey];\n            if (!data) {\n                return null;\n            }\n            if (data && decodeJSON) {\n                return JSON.parse(data);\n            } else {\n                return data;\n            }\n        }).catch((error) => {\n            console.error(error);\n            return null;\n        });\n    }\n\n    setActivityData(activityKey, state) {\n        let activityState = JSON.stringify(state);\n        return this.userRef.update({\n            [activityKey]: activityState\n        })\n        .then(() => {\n            console.log(\"app data saved successefully\")\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n    // getRQData() {\n    //     return this.getAppData(\"rqted\");\n    // }\n\n\n    // getInitialHypoData() {\n    //     return this.getAppData(\"initialHypo\")\n    //     .then((strData))\n    // }\n\n    // getFinalHypoData() {\n    //     return this.getAppData(\"finalHypo\")\n    // }\n\n    setValues(object, overwrite=false) {\n        // default to {merge: true} option for safety\n        return this.userRef.set(object, {merge: !overwrite});\n    }\n\n    updateValues(object) {\n        return this.userRef.update(object);\n    }\n\n    deleteValue(varName) {\n        return this.userRef.update({\n            [varName]: firebase.firestore.FieldValue.delete()\n        });\n    }\n\n    // saveJSONValue(varName, value) {\n    //     return this.userRef.set({\n    //         [varName]: JSON.stringify(value)\n    //     });\n    // }\n\n    // getBoolValue(varName) {\n\n    // }\n\n    // getIntValue(varName) {\n\n    // }\n\n    // getFloatValue(varName) {\n\n    // }\n\n    // getTextValue(varName) {\n\n    // }\n\n    // getJSONValue(varName) {\n\n    // }\n};","import \"./index.css\";\n\n\nexport class SnackBar {\n    constructor(eleID) {\n        this.el = document.getElementById(eleID || \"snackbar\");\n    }\n\n    show(text) {\n        if (typeof(text) !== \"undefined\" && null !== text) {\n            this.el.innerHTML = text;\n            // Add the \"show\" class to DIV\n            // this.el.className = \"show\";\n            this.el.classList.add(\"show\");\n            // After 3 seconds, remove the show class from DIV\n            setTimeout(() => {\n                // snackbar.className = snackbar.className.replace(\"show\", \"\");\n                this.el.classList.remove(\"show\");\n            }, 3000);\n        }\n    }\n}\n","\nimport \"./index.scss\";\n\nimport { NavBar } from \"@isptutorproject/navbar\";\n\nimport { SceneBasedApp, Scene } from \"@isptutorproject/scene-app-base\";\n\nimport { getActivityConfiguration } from \"@isptutorproject/activity-config\"\n\nconst DEFAULT_APP_INITIAL_STATE = {\n    events: [],\n    sceneState: {},\n    currentScene: \"start\"\n};\n\n\nclass RQScene extends Scene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.customActions = {\n            showBtns: this.showBtns,\n            hideBtns: this.hideBtns,\n        };\n        this.btnNames = {\n            prev: this.app.prevBtn,\n            next: this.app.nextBtn\n        };\n    }\n\n    performCustomEnterSceneActions() {\n        console.log(`RQScene::performCustomEnterSceneActions()`);\n        for (let action of this.customEnterActions) {\n            let name = action.name;\n            let args = action.args;\n            if (this.customActions.hasOwnProperty(name)) {\n                this[name](args);\n            }\n        }\n    }\n}\n\nclass VideoScene extends RQScene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.videoStartedPlaying = this.videoStartedPlaying.bind(this);\n        this.videoStoppedPlaying = this.videoStoppedPlaying.bind(this);\n        this.getDuration = this.getDuration.bind(this);\n    }\n\n\n    // remember time user started the video\n    videoStartedPlaying(event) {\n        console.log(event);\n        this.timeStarted = new Date().getTime() / 1000;\n        console.log(`Started Watching video @ ${this.timeStarted}`);\n    }\n\n    videoStoppedPlaying(event) {\n        console.log(event);\n        // Start time less then zero means stop event was fired vidout start event\n        if (this.timeStarted > 0) {\n            let playedFor = new Date().getTime() / 1000 - this.timeStarted;\n            this.timeStarted = -1;\n            // add the new number of seconds played\n            this.timePlayed += playedFor;\n        }\n        // document.getElementById(\"played\").innerHTML = Math.round(timePlayed) + \"\";\n        console.log(`played for: ${Math.round(this.timePlayed)}`);\n        // Count as complete only if end of video was reached\n        if (this.timePlayed >= this.duration && event.type == \"ended\") {\n            // document.getElementById(\"status\").className = \"complete\";\n            console.log(\"video ended\");\n            this.showBtns([\"prev\", \"next\"])\n        }\n    }\n\n    getDuration(event) {\n        console.log(event);\n        this.duration = this.video.duration;\n        // document.getElementById(\"duration\").appendChild(new Text(Math.round(duration) + \"\"));\n        console.log(\"Duration: \", this.duration);\n    }\n\n    performCustomEnterSceneActions() {\n        // super.performCustomEnterSceneActions();\n        console.log(\"VideoScene::performCustomEnterSceneActions\");\n        this.video = document.getElementById(this.videoId);\n        console.log(this.video);\n        this.timeStarted = -1;\n        this.timePlayed = 0;\n        this.duration = 0;\n        if (this.video.readyState > 0) {\n            // If video metadata is loaded get duration\n            this.getDuration.call(this.video);\n        } else {\n            //If metadata not loaded, use event to get it\n            this.video.addEventListener('loadedmetadata', this.getDuration);\n        }\n        this.video.addEventListener(\"play\",    this.videoStartedPlaying);\n        this.video.addEventListener(\"playing\", this.videoStartedPlaying);\n        this.video.addEventListener(\"ended\",   this.videoStoppedPlaying);\n        this.video.addEventListener(\"pause\",   this.videoStoppedPlaying);\n    }\n}\n\n\n\nclass RQIntroApp extends SceneBasedApp {\n\n    createScene(sceneInfo) {\n        let scene;\n        switch(sceneInfo.sceneType) {\n            case \"videoScene\":\n                scene = new VideoScene(this, sceneInfo);\n                break;\n            default:\n                scene = new RQScene(this, sceneInfo);\n                break;\n        }\n        return scene;\n    }\n}\n\nlet activityConfig = getActivityConfiguration();\nconst activityData = require(\"../data/rqIntro.json\");\n\nlet navbar = new NavBar();\nnavbar.displayActivityTitle(\"Crystal Growth Experiment Intro\");\nnavbar.displayUser(activityConfig.userID);\n\nlet app = new RQIntroApp(\n    activityData, activityConfig, DEFAULT_APP_INITIAL_STATE\n);\n\nif (process.env.NODE_ENV === \"development\") {\n    app.setStartScene(\"start\");\n}\napp.start();","export class Scene {\n    constructor(app, sceneInfo) {\n        console.debug(`\\tInitializing Scene: ${sceneInfo.id}`);\n        this.app = app;\n        // copy all sceneInfo to 'this'\n        for (let [k, v] of Object.entries(sceneInfo)) {\n            this[k] = v;\n        }\n        this.el = document.getElementById(this.id);\n        // bind event handler\n        this.handleFollowEdgeButton = this.handleFollowEdgeButton.bind(this);\n    }\n\n    showBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.show(this.btnNames[btnName]);\n            }\n        }\n    }\n\n    hideBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.hide(this.btnNames[btnName]);\n            }\n        }\n    }\n\n\n    handleFollowEdgeButton(e) {\n        e.preventDefault();\n        let edgeName = e.target.dataset.edge;\n        this.app.followEdge(edgeName);\n    }\n\n    getFollowEdgeElements() {\n        return this.el.getElementsByClassName(\"follow-edge\");\n    }\n\n    setupFollowEdgeEventHandlers() {\n        for (let el of this.getFollowEdgeElements()) {\n            el.addEventListener(\n                \"click\", this.handleFollowEdgeButton, { once: true }\n            );\n        }\n    }\n\n    restoreState(value) {\n        if (typeof (value) !== \"undefined\") {\n            console.debug(`\\tRestoring Scene State for: ${this.id} `);\n            return true;\n        }\n        return false;\n    }\n\n    _isBogus() {\n        return this.id === \"N/A\" || this.sceneType === \"bogus\";\n    }\n\n    handlePrevButton() {\n        this.app.followEdge(\"prev\");\n    }\n\n    handleNextButton() {\n        this.app.followEdge(\"next\");\n    }\n\n    hasForm() {\n        return false;\n    }\n\n    formChanged() {\n        return false;\n    }\n\n    pre_enter() {\n\n    }\n\n    enter() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Entering Scene: ${this.id}`);\n        console.debug(\"\\tUpdating state.currentScene\");\n        this.app.state.currentScene = this.id;\n        this.defaultEnterSceneActions();\n        if (this.customEnterActions.length) {\n            this.performCustomEnterSceneActions();\n        }\n    }\n\n    post_enter() {\n\n    }\n\n    pre_exit() {\n\n    }\n\n    exit() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Exiting Scene: ${this.id}`);\n        this.defaultExitSceneActions();\n        if (this.customExitActions.length) {\n            this.performCustomExitSceneActions();\n        }\n    }\n\n    post_exit() {\n\n    }\n\n    defaultEnterSceneActions() {\n        this.el.classList.add(\"active\");\n        this.app.resizeContent();\n        this.setupFollowEdgeEventHandlers();\n    }\n\n    defaultExitSceneActions() {\n        this.el.classList.remove(\"active\");\n    }\n\n    performCustomEnterSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomEnterSceneActions\");\n    }\n\n    performCustomExitSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomExitSceneActions\");\n    }\n}\n","export function getActivityConfiguration() {\n    let currentActivity = JSON.parse(localStorage.getItem(\"currentActivity\"));\n    let activityConfig = {\n        userID: localStorage.getItem(\"userID\"),\n        database: localStorage.getItem(\"database\"),\n        homepage: localStorage.getItem(\"homepage\"),\n        activityID: currentActivity.id,\n        activityKey: currentActivity.key,\n        activityFeatures: currentActivity.features.split(\":\").filter((item) => item !== \"\")\n    };\n    console.log(activityConfig);\n    return activityConfig;\n}","import \"./index.css\";\n\nexport class NavBar {\n    constructor() {\n        this.el = document.querySelector(\"nav.navbar\");\n        this.homeBtn = document.getElementById(\"navbar_home_btn\");\n        this.activityTitle = document.getElementById(\"activity_title\");\n        this.glossaryBtn = document.getElementById(\"navbar_glossary_btn\");\n        this.glossaryPopup = document.querySelector(\".navbar-glossary-popup\");\n        this.signOutBtn = document.getElementById(\"sign_out_button\");\n        this.signInText = document.getElementById(\"sign_in_text\");\n        this.goHome      = this.goHome.bind(this);\n        this.toggleGlossary = this.toggleGlossary.bind(this);\n        this.signOutUser = this.signOutUser.bind(this);\n        this.homeBtn.addEventListener('click', this.goHome);\n        this.glossaryBtn.addEventListener(\"click\", this.toggleGlossary);\n        this.signOutBtn.addEventListener(\"click\", this.signOutUser);\n    }\n\n    goHome(e) {\n        let homePage = this.calcHomePage();\n        this.redirectTo(homePage);\n    }\n\n    toggleGlossary(e) {\n        this.glossaryPopup.classList.toggle(\"hidden\");\n    }\n\n    calcHomePage() {\n        let homePage = localStorage.getItem(\"homepage\");\n        if (null === homePage) {\n            homePage = window.location.origin + \"/\";\n        }\n        return homePage;\n    }\n\n    redirectTo(url, allowRefresh=false) {\n        // prevent refresh if already on this page\n        let isSamePage = window.location.href === url;\n        if (!isSamePage) {\n            window.location.href = url;\n        } else if (allowRefresh) {\n            window.location.reload();\n        } else {\n            console.log(\"same url but refresh disabled\");\n        }\n    }\n\n    signOutUser(e) {\n        this.signInText.innerHTML = \"\";\n        this.signInText.classList.add(\"invisible\");\n        this.signOutBtn.classList.add(\"invisible\");\n        let homePage = this.calcHomePage();\n        // this does the actual signing out\n        localStorage.clear();\n        this.redirectTo(homePage, true);\n    }\n\n    displayActivityTitle(title) {\n        this.activityTitle.innerText = title.toUpperCase();\n    }\n\n\n    displayUser(userName) {\n        this.signInText.innerHTML = `Welcome, ${userName}`;\n        this.signInText.classList.remove(\"invisible\");\n        this.signOutBtn.classList.remove(\"invisible\");\n    }\n};\n","import { getDBConnection } from \"@isptutorproject/isp-database\";\nimport { SnackBar} from \"@isptutorproject/snackbar\";\n\nexport class SceneBasedApp {\n    constructor(appData, activityConfig, defaultInitialState) {\n        this.sceneData = appData.scenes;\n        this.activityConfig = activityConfig;\n        this.db = getDBConnection(activityConfig.database);\n        this.db.setCredentials(activityConfig.userID);\n        this.activityID = activityConfig.activityID\n        this.activityKey = activityConfig.activityKey;\n        this.defaultState = defaultInitialState;\n\n        this.snackbar = new SnackBar();\n        this.homePageBtn = null;\n        let homePageBtn  = document.getElementById(\"go_home_btn\");\n        this.nextBtn = document.getElementById(\"next_btn\");\n        this.prevBtn = document.getElementById(\"prev_btn\");\n        this.sceneIdRegion = document.getElementById(\"scene_id_region\");\n        if (homePageBtn) {\n            this.homePageBtn = homePageBtn;\n        }\n        this.handleGoHomePage = this.handleGoHomePage.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        if (this.homePageBtn) {\n            this.homePageBtn.addEventListener(\"click\", this.handleGoHomePage);\n        }\n        this.handleResize = this.handleResize.bind(this);\n\n        this.nextBtn.addEventListener(\"click\", this.handleNext);\n        this.prevBtn.addEventListener(\"click\", this.handlePrev);\n\n        this.state = {};\n        this.scenes = {};\n        this.startScene = \"start\";\n        this.currentScene = null;\n        this.prevScene = null;\n        // is this needed???\n        this.bogusSceneInfo = {\n            id: \"N/A\",\n            sceneType: \"bogus\"\n        };\n        window.app = this;\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n\n    handleResize(event) {\n        // console.log(event);\n        this.resizeContent();\n    }\n\n    resizeContent() {\n        let sEl, cEl, sWidth, sHeight, cWidth, cHeight, sc;\n        sEl = document.querySelector(\".scene.active\");\n        if (sEl) {\n            cEl = sEl.querySelector(\".scene-content\");\n        }\n        if (cEl) {\n            sWidth  = sEl.offsetWidth;\n            sHeight = sEl.offsetHeight;\n            cWidth  = cEl.offsetWidth;\n            cHeight = cEl.offsetHeight;\n            sc = Math.min(\n                sWidth / cWidth,\n                sHeight / cHeight\n            );\n            cEl.style.transform = `translate(-50%, -50%) scale(${sc})`;\n        }\n    }\n\n    // setSnackbar(snackbar) {\n    //     this.snackbar = snackbar;\n    // }\n\n    showFeedback(feedback) {\n        this.snackbar.show(feedback);\n    }\n\n    handleGoHomePage(event) {\n        event.preventDefault();\n        // mark this activity as completed\n        this.db.markActivityAsCompleted(this.activityID)\n        .then(() => {\n            // using top instead of window in case we're in an iframe\n            top.location.href = this.activityConfig.homepage;\n        });\n    }\n\n    handlePrev(event) {\n        event.preventDefault();\n        this.currentScene.handlePrevButton();\n        this.saveAppState();\n    }\n\n    handleNext(event) {\n        event.preventDefault();\n        this.currentScene.handleNextButton();\n        this.saveAppState();\n    }\n\n    setStartScene(sceneId) {\n        console.debug(\"setStartScene()\", sceneId);\n        this.startScene = sceneId;\n    }\n\n    start() {\n        console.log(\"starting\");\n        this.getAppState()\n            .then((state) => {\n                console.log(\"returned from getAppState()\", state);\n                if (null === state) {\n                    console.log(\"no activity data in db. using initial data\")\n                    state = this.defaultState;\n                }\n                this.state = state;\n                return;\n            })\n            .then(() => {\n                console.log(\"Initializing Scenes\");\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    // console.log(`creating scene for ${sceneId}`);\n                    let sceneObj = this.createScene(this.sceneData[sceneId]);\n                    // console.log(sceneObj);\n                    this.scenes[sceneId] = sceneObj;\n                }\n                return;\n            })\n            .then(() => {\n                console.log(this.state);\n                console.log(this.state.sceneState);\n                console.log(\"Restoring App State\")\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    let sceneState = this.state.sceneState[sceneId];\n                    this.scenes[sceneId].restoreState(sceneState);\n                }\n                if (this.state.currentScene) {\n                    console.log(\"Restoring Current Scene\");\n                    this.currentScene = this.lookupScene(this.state.currentScene);\n                }\n                return;\n            })\n            .then(() => {\n                // console.debug(this.sceneData);\n                // console.log(this.scenes);\n            })\n            .then(() => {\n                this.gotoStartScene();\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    getAppState() {\n        console.debug(\"Loading App State\");\n        return this.db.getActivityData(this.activityKey);\n    }\n\n    saveAppState() {\n        console.debug(\"Saving App State\");\n        this.db.setActivityData(this.activityKey, this.state);\n    }\n\n    createScene(sceneInfo) {\n        // you'll want to override this to do anything useful\n        // console.debug(\"createScene()\", sceneInfo, sceneState);\n        return new Scene(this, sceneInfo);\n    }\n\n    switchToScene(scene) {\n        this.logSceneChange(scene);\n        this.gotoScene(scene);\n    }\n\n    gotoScene(scene) {\n        this.prevScene = this.currentScene;\n        if (this.prevScene) {\n            this.prevScene.pre_exit();\n            this.prevScene.exit();\n            this.prevScene.post_exit();\n        }\n        this.currentScene = scene;\n        this.currentScene.pre_enter();\n        this.currentScene.enter();\n        this.currentScene.post_enter();\n        // delete this.prevScene;\n        this.displaySceneId();\n    }\n\n    displaySceneId() {\n        if (process.env.NODE_ENV === \"development\") {\n            this.sceneIdRegion.innerHTML = this.currentScene.id;\n        }\n    }\n\n    lookupScene(sceneId) {\n        let scene = this.scenes[sceneId];\n        if (!scene) {\n            console.error(`ERROR: no such scene ${sceneId}`);\n        }\n        return scene;\n    }\n\n    followEdge(edgeName) {\n        let newSceneId = this.currentScene.edges[edgeName];\n        let newScene = this.lookupScene(newSceneId);\n        this.switchToScene(newScene);\n    }\n\n    logSceneChange(scene) {\n        this.state.events.push({\n            type: \"SCENE_TRANSITION\",\n            from: this.currentScene.id,\n            to: scene.id,\n            timestamp: Date.now()\n        });\n        // console.debug(\"Updating state.events\");\n    }\n\n\n    gotoStartScene() {\n        // bypasses switchToScene() and thus logSceneChange()\n        // this.currentScene = null;\n        let startScene = this.currentScene;\n        if (!startScene) {\n            startScene = this.lookupScene(this.startScene);\n        }\n        this.state.events.push({\n            type: \"APP_START\",\n            scene:  startScene.id,\n            timestamp: Date.now()\n        });\n        // console.debug(\"Updating state.events\");\n        this.gotoScene(startScene);\n    }\n\n\n    hide(el) {\n        if (el) { el.classList.add(\"hidden\"); }\n    }\n\n    show(el) {\n        if (el) { el.classList.remove(\"hidden\"); }\n    }\n\n    makeInvisible(el) {\n        if (el) {\n            el.classList.add(\"invisible\");\n        }\n    }\n\n    makeVisible(el) {\n        if (el) {\n            el.classList.remove(\"invisible\");\n        }\n    }\n\n    disable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.add(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n\n    enable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.remove(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n}\n","import { LocalStorageDB } from \"./localStorageDB\";\nimport { FirestoreDB } from \"./firestoreDB\";\n\nexport function getDBConnection(dbType, schema) {\n    let db;\n    switch(dbType) {\n        case \"firestore\":\n            db = new FirestoreDB();\n            break;\n        default:\n            db = new LocalStorageDB();\n    }\n    return db;\n}\n"],"sourceRoot":""}