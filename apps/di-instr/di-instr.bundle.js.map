{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/database.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/localStorageDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/firestoreDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/snackbar/index.js","webpack:///./src/di-instruction-scene.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/scene.js","webpack:///./src/di-stats-scene.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/radio-button-form.js","webpack:///./src/di-mult-choice-form-scene.js","webpack:///./src/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/activity-config/index.js","webpack:///./src/di-instruction-app.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/app.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Database","classCode","userID","this","activityKey","decodeJSON","varName","super","setCredentials","console","count","data","Promise","all","getTextValue","getActivityData","getCurrHypoTask","getIntialHypoData","getFinalHypoData","then","ccRes","uidRes","rqRes","chtRes","ihRes","fhRes","rqted","currHypoTaskIdx","firstPrediction","initialHypo","secondPrediction","finalHypo","getJSONValue","JSON","stringify","saveJSONValue","retVal","moduleState","selectedArea","index","selectedTopic","selectedVariable","selectedRQ","catch","err","error","getIntValue","pred1","initHypo","pred2","overwrite","resolve","reject","items","localStorage","setItem","getItem","undefined","parseInt","parseFloat","parse","firebaseConfig","apiKey","authDomain","projectId","firebase","initializeApp","store","firestore","userRef","collection","doc","exists","getUserData","userData","set","merge","update","FieldValue","delete","SnackBar","eleID","el","document","getElementById","text","innerHTML","classList","add","setTimeout","remove","app","sceneInfo","debug","id","k","v","entries","handleFollowEdgeButton","btnNames","btnName","show","hide","e","preventDefault","edgeName","target","dataset","edge","followEdge","getElementsByClassName","getFollowEdgeElements","addEventListener","once","sceneType","_isBogus","state","currentScene","defaultEnterSceneActions","customEnterActions","length","performCustomEnterSceneActions","defaultExitSceneActions","customExitActions","performCustomExitSceneActions","setupFollowEdgeEventHandlers","warn","customActions","showBtns","hideBtns","hiliteTableCells","hilightTableCells","prev","prevBtn","next","nextBtn","backToQuestion","backToQuestionBtn","readyToAnswer","readyToAnswerBtn","args","tableId","table","color","selector","cellSelectors","sel","querySelector","action","enable","RadioButtonForm","formInfo","eleId","handleChange","form","radios","querySelectorAll","changed","checkValidity","isValid","rb","removeEventListener","isCorrect","sfi","val","trim","correctAnswer","fbText","fbClassName","fbMsg","getCorrectness","posFb","negFb","ntlFb","selectedAnswer","lbl","labels","innerText","formData","questionType","type","questionText","selectedEleId","selectedValue","selectedLabel","timestamp","Date","now","question","restoreState","checked","getData","logData","assign","action_type","questionId","log","events","push","sceneState","pre_exit","formChanged","saveFormData","setupEventHandlers","teardownEventHandlers","disable","activityConfig","database","homepage","features","split","filter","item","getActivityConfiguration","activityData","appData","defaultInitialState","sceneData","scenes","db","dbType","getDBConnection","defaultState","snackbar","homePageBtn","sceneIdRegion","handleGoHomePage","handleNext","handlePrev","startScene","prevScene","bogusSceneInfo","window","feedback","event","location","href","handlePrevButton","saveAppState","handleNextButton","sceneId","getAppState","section","sceneObj","createScene","lookupScene","gotoStartScene","setActivityData","Scene","scene","logSceneChange","gotoScene","exit","post_exit","pre_enter","enter","post_enter","displaySceneId","newSceneId","edges","newScene","switchToScene","from","to","handleBackToQuestion","handleReadyToAnswer","start"],"mappings":"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","file":"di-instr.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// abstract class - interface\nexport class Database {\n    constructor() {\n\n    }\n\n    setCredentials(classCode, userID) {\n        this.classCode = classCode;\n        this.userID = userID;\n    }\n\n    getUserData() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n\n    }\n\n    setActivityData(activityKey, object) {\n\n    }\n\n    getRQData() {\n\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getInitialHypoData() {\n\n    }\n\n    getFinalHypoData() {\n\n    }\n\n    saveValue(varName, value) {\n\n    }\n\n    saveJSONValue(varName, object) {\n\n    }\n\n    getBoolValue(varName) {\n\n    }\n\n    getIntValue(varName) {\n\n    }\n\n    getFloatValue(varName) {\n\n    }\n\n    getTextValue(varName) {\n\n    }\n\n    getJSONValue(varName) {\n\n    }\n\n};\n\n\n","\nimport { Database } from \"./database\";\n\n// NOTE: this API must use promises to be compatible with any db\n// we may be using, which may be either sync or async\nexport class LocalStorageDB extends Database {\n\n    constructor() {\n        super();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        // return Promise.all([\n        // this.saveValue(\"classCode\", classCode),\n        // this.saveValue(\"userID\", userID),\n        // ]).then(([result1, result2]) => { });\n    }\n\n    getUserData() {\n        console.count(\"getUserData() called\");\n        let data = {};\n        return Promise.all([\n            this.getTextValue(\"classCode\"),\n            this.getTextValue(\"userID\"),\n            this.getActivityData(\"rqted\"),\n            this.getCurrHypoTask(),\n            this.getIntialHypoData(),\n            this.getFinalHypoData()\n        ]).then(([ccRes, uidRes, rqRes, chtRes, ihRes, fhRes]) => {\n            data.classCode = ccRes;\n            data.userID = uidRes;\n            data.rqted = rqRes;\n            if (chtRes) {\n                data.currHypoTaskIdx = chtRes\n            }\n            if (ihRes) {\n                data.firstPrediction = ihRes.firstPrediction;\n                data.initialHypo = ihRes.initialHypo;\n            }\n            if (fhRes) {\n                data.secondPrediction = fhRes.secondPrediction;\n                data.finalHypo = fhRes.finalHypo;\n            }\n            return data;\n        });\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n        return this.getJSONValue(activityKey)\n        .then((data) => {\n            if (data && !decodeJSON) {\n                return JSON.stringify(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    setActivityData(activityKey, object) {\n        return this.saveJSONValue(activityKey, object);\n    }\n\n    getRQData() {\n        let retVal = null;\n        return this.getActivityData(\"rqted\")\n        .then((rqted) => {\n            // console.log(rqted);\n            if (rqted) {\n                retVal = rqted;\n            } else {\n                // if the rq isn't selected hard-code to crystal growth\n                retVal = {\n                    moduleState: {\n                        selectedArea: { index: 1 },\n                        selectedTopic: { index: 1 },\n                        selectedVariable: { index: 1 },\n                        selectedRQ: { index: 1 }\n                    }\n                };\n            }\n            // console.log(retVal);\n            return retVal;\n        })\n        .catch((err) => {\n            console.error(err);\n            return retVal;\n        });\n    }\n\n    getCurrHypoTask() {\n        return this.getIntValue(\"currHypoTaskIdx\")\n    }\n\n    getIntialHypoData() {\n        let data = {};\n        return this.getTextValue(\"firstPrediction\")\n            .then((pred1) => {\n                // console.log(`getInitialHypoData():firstPrediction ${pred1}`);\n                if (null !== pred1) {\n                    data.firstPrediction = pred1;\n                    return this.getJSONValue(\"initialHypo\");\n                } else {\n                    data.firstPrediction = null;\n                    return null;\n                }\n            })\n            .then((initHypo) => {\n                // console.log(`getInitialHypoData():initHypo ${initHypo}`);\n                data.initialHypo = initHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    getFinalHypoData() {\n        let data = {};\n        return this.getTextValue(\"secondPrediction\")\n            .then((pred2) => {\n                // console.log(`getFinalHypoData():secondPrediction ${pred2}`)\n                if (null !== pred2) {\n                    data.secondPrediction = pred2;\n                    return this.getJSONValue(\"finalHypo\");\n                } else {\n                    data.secondPrediction = null;\n                    return null\n                }\n            })\n            .then((finalHypo) => {\n                // console.log(`getFinalHypoData():finalHypo ${finalHypo}`);\n                data.finalHypo = finalHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    setValues(object, overwrite=false) {\n        // overwrite param is ignored, as it is specific to firestore\n        return new Promise((resolve, reject) => {\n            try {\n                for (let [key, value] of Object.items(object)) {\n                    localStorage.setItem(key, value);\n                }\n                resolve(true);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    saveValue(varName, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        })\n    }\n\n    saveJSONValue(varName, object) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = JSON.stringify(object);\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getBoolValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (undefined === value) {\n                    resolve(value);\n                }\n                if (\"true\" === value) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getIntValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n               let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseInt(value, 10);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getFloatValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseFloat(value);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getTextValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = value;\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    };\n\n    getJSONValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    value = JSON.parse(value);\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n};\n\n// let db = new Database(\"BOGUS_CLASS\", \"BOGUS_STUDENT\");\n\n","import { Database } from \"./database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7zIk-8V20QqJNSs0cAV0uNL3qjeqLMdM\",\n    authDomain: \"isptutor.firebaseapp.com\",\n    projectId: \"isptutor\"\n};\n\nexport class FirestoreDB extends Database {\n\n    constructor() {\n        super();\n        firebase.initializeApp(firebaseConfig);\n        this.store = firebase.firestore();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        this.userRef = this.store.collection(this.classCode).doc(this.userID);\n    }\n\n    getUserData() {\n        // returns promise with 'doc' if it exists, null otherwise\n        return this.userRef.get()\n        .then((doc) => {\n            if (doc.exists) {\n                return doc.data;\n            } else {\n                return null;\n            }\n        });\n    }\n\n\n    getCurrHypoTask() {\n\n    }\n  \n    getActivityData(activityKey, decodeJSON=true) {\n        return this.getUserData()\n        .then((userData) => {\n            let data = userData[activityKey];\n            if (data && decodeJSON) {\n                return JSON.parse(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    // getRQData() {\n    //     return this.getAppData(\"rqted\");\n    // }\n\n\n    // getInitialHypoData() {\n    //     return this.getAppData(\"initialHypo\")\n    //     .then((strData))\n    // }\n\n    // getFinalHypoData() {\n    //     return this.getAppData(\"finalHypo\")\n    // }\n\n    setValues(object, overwrite=false) {\n        // default to {merge: true} option for safety\n        return this.userRef.set(object, {merge: !overwrite});       \n    }\n\n    updateValues(object) {\n        return this.userRef.update(object);\n    }\n\n    deleteValue(varName) {\n        return this.userRef.update({\n            [varName]: firebase.firestore.FieldValue.delete()\n        });\n    }\n\n    // saveJSONValue(varName, value) {\n    //     return this.userRef.set({\n    //         [varName]: JSON.stringify(value)\n    //     });\n    // }\n\n    // getBoolValue(varName) {\n\n    // }\n\n    // getIntValue(varName) {\n\n    // }   \n    \n    // getFloatValue(varName) {\n\n    // }\n\n    // getTextValue(varName) {\n\n    // }\n\n    // getJSONValue(varName) {\n\n    // }\n};","import \"./index.css\";\n\n\nexport class SnackBar {\n    constructor(eleID) {\n        this.el = document.getElementById(eleID || \"snackbar\");\n    }\n\n    show(text) {\n        if (typeof(text) !== \"undefined\" && null !== text) {\n            this.el.innerHTML = text;\n            // Add the \"show\" class to DIV\n            // this.el.className = \"show\";\n            this.el.classList.add(\"show\");\n            // After 3 seconds, remove the show class from DIV\n            setTimeout(() => {\n                // snackbar.className = snackbar.className.replace(\"show\", \"\");\n                this.el.classList.remove(\"show\");\n            }, 3000);\n        }\n    }\n}\n","import { Scene } from \"@isptutorproject/scene-app-base\";\n\nexport class DiInstructionScene extends Scene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.customActions = {\n            showBtns: this.showBtns,\n            hideBtns: this.hideBtns,\n            hiliteTableCells: this.hilightTableCells\n        };\n        this.btnNames = {\n            prev: this.app.prevBtn,\n            next: this.app.nextBtn,\n            backToQuestion: this.app.backToQuestionBtn,\n            readyToAnswer: this.app.readyToAnswerBtn\n        };\n    }\n\n    hiliteTableCells(args) {\n        let tableId = `${this.id}_${args.table}`;\n        let table = document.getElementById(tableId);\n        let color = args.color || \"blue\";\n        for (let selector of args.cellSelectors) {\n            let sel = `td${selector}`;\n            let cell = table.querySelector(sel);\n            cell.classList.add(`${color}-bg`);\n        }\n    }\n\n    performCustomEnterSceneActions() {\n        for (let action of this.customEnterActions) {\n            let name = action.name;\n            let args = action.args;\n            if (this.customActions.hasOwnProperty(name)) {\n                this[name](args);\n            }\n        }\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        // these button states may get overriden by scene-specific custom actions\n        this.app.show(this.app.prevBtn);\n        this.app.enable(this.app.prevBtn);\n        this.app.show(this.app.nextBtn);\n        this.app.enable(this.app.nextBtn);\n        this.app.hide(this.app.readyToAnswerBtn);\n        this.app.hide(this.app.backToQuestionBtn);\n    }\n\n};\n","export class Scene {\n    constructor(app, sceneInfo) {\n        console.debug(`\\tInitializing Scene: ${sceneInfo.id}`);\n        this.app = app;\n        // copy all sceneInfo to 'this'\n        for (let [k, v] of Object.entries(sceneInfo)) {\n            this[k] = v;\n        }\n        this.el = document.getElementById(this.id);\n        // bind event handler\n        this.handleFollowEdgeButton = this.handleFollowEdgeButton.bind(this);\n    }\n\n    showBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.show(this.btnNames[btnName]);\n            }\n        }\n    }\n\n    hideBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.hide(this.btnNames[btnName]);\n            }\n        }\n    }\n\n\n    handleFollowEdgeButton(e) {\n        e.preventDefault();\n        let edgeName = e.target.dataset.edge;\n        this.app.followEdge(edgeName);\n    }\n\n    getFollowEdgeElements() {\n        return this.el.getElementsByClassName(\"follow-edge\");\n    }\n\n    setupFollowEdgeEventHandlers() {\n        for (let el of this.getFollowEdgeElements()) {\n            el.addEventListener(\n                \"click\", this.handleFollowEdgeButton, { once: true }\n            );\n        }\n    }\n\n    restoreState(value) {\n        if (typeof (value) !== \"undefined\") {\n            console.debug(`\\tRestoring Scene State for: ${this.id} `);\n            return true;\n        }\n        return false;\n    }\n\n    _isBogus() {\n        return this.id === \"N/A\" || this.sceneType === \"bogus\";\n    }\n\n    handlePrevButton() {\n        this.app.followEdge(\"prev\");\n    }\n\n    handleNextButton() {\n        this.app.followEdge(\"next\");\n    }\n\n    hasForm() {\n        return false;\n    }\n\n    formChanged() {\n        return false;\n    }\n\n    pre_enter() {\n\n    }\n\n    enter() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Entering Scene: ${this.id}`);\n        console.debug(\"\\tUpdating state.currentScene\");\n        this.app.state.currentScene = this.id;\n        this.defaultEnterSceneActions();\n        if (this.customEnterActions.length) {\n            this.performCustomEnterSceneActions();\n        }\n    }\n\n    post_enter() {\n\n    }\n\n    pre_exit() {\n\n    }\n\n    exit() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Exiting Scene: ${this.id}`);\n        this.defaultExitSceneActions();\n        if (this.customExitActions.length) {\n            this.performCustomExitSceneActions();\n        }\n    }\n\n    post_exit() {\n\n    }\n\n    defaultEnterSceneActions() {\n        this.el.classList.add(\"active\");\n        this.setupFollowEdgeEventHandlers();\n    }\n\n    defaultExitSceneActions() {\n        this.el.classList.remove(\"active\");\n    }\n\n    performCustomEnterSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomEnterSceneActions\");\n    }\n\n    performCustomExitSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomExitSceneActions\");\n    }\n}\n","\nimport { DiInstructionScene } from \"./di-instruction-scene\";\n\nexport class DiStatsScene extends DiInstructionScene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        this.app.hide(this.app.prevBtn);\n        this.app.hide(this.app.nextBtn);\n    }\n}\n","export class RadioButtonForm {\n    constructor(app, formInfo, eleId) {\n        this.handleChange = this.handleChange.bind(this);\n        this.app = app;\n        this.formInfo = formInfo;\n        this.form = document.getElementById(eleId);\n        this.radios = this.form.querySelectorAll('input[type=\"radio\"]');\n        this.changed = false;\n    }\n\n    isValid() {\n        const validity = this.form.checkValidity();\n        // console.log(\"form is valid:\", validity);\n        return validity;\n    }\n\n    handleChange(e) {\n        // set form to dirty state so it will get saved later on\n        this.changed = true;\n        if (this.isValid()) {\n            this.app.enable(this.app.nextBtn);\n        }\n    }\n\n    setupEventHandlers() {\n        for (let rb of this.radios) {\n            rb.addEventListener('change', this.handleChange);\n        }\n    }\n\n    teardownEventHandlers() {\n        for (let rb of this.radios) {\n            rb.removeEventListener('change', this.handleChange);\n        }\n    }\n\n\n    getCorrectness() {\n        let sfi = this.formInfo;\n        let selectedAnswer = this.form.querySelector(\n            'input[type=\"radio\"]:checked'\n        )\n        let val = selectedAnswer.value.trim();\n        // let ansText = selectedAnswer.labels[0].innerText;\n        let correctAnswer = sfi.correctAnswer;\n        let isCorrect;\n\n        if (\"N/A\" === correctAnswer) {\n            isCorrect = null;\n        } else if (correctAnswer === val) {\n            isCorrect = true;\n        } else {\n            isCorrect = false;\n        }\n        return isCorrect;\n    }\n\n    getFeedback() {\n        let isCorrect = this.getCorrectness();\n        let sfi = this.formInfo;\n        // console.log(isCorrect, sfi);\n        let fbText, fbClassName, fbMsg;\n        switch(isCorrect) {\n            case true:\n                fbText = sfi.posFb;\n                fbClassName = \"pos-feedback\";\n                break;\n            case false:\n                fbText = sfi.negFb;\n                fbClassName = \"neg-feedback\";\n                break;\n            default:\n                fbText = sfi.ntlFb;\n                fbClassName = \"ntl-feedback\";\n        }\n        if (typeof(fbText) === \"undefined\") {\n            if (typeof(sfi.ntlFb) !== \"undefined\") {\n                fbText = sfi.ntlFb;\n            }\n        }\n        if (typeof (fbText) !== \"undefined\") {\n            fbMsg = `<span class=\"${fbClassName}\">${fbText}</span>`;\n        }\n        return fbMsg;\n    }\n\n    getData() {\n        let sfi = this.formInfo;\n        let isCorrect = this.getCorrectness();\n        let selectedAnswer = this.form.querySelector(\n            'input[type=\"radio\"]:checked'\n        );\n        let val = selectedAnswer.value.trim();\n        let lbl = selectedAnswer.labels[0].innerText;\n        let formData = {\n            questionType: sfi.type,\n            questionText: sfi.text,\n            selectedEleId: selectedAnswer.id,\n            selectedValue: val,\n            selectedLabel: lbl,\n            isCorrect: isCorrect,\n            timestamp: Date.now()\n        }\n        // set form to non-dirty state, so we don't resubmit unless they\n        // change again\n        this.changed = false;\n        return formData;\n    }\n\n}","import { DiInstructionScene } from \"./di-instruction-scene\";\n\nimport { RadioButtonForm } from \"@isptutorproject/scene-app-base/radio-button-form\";\n\nexport class DiMultipleChoiceFormScene extends DiInstructionScene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.form = new RadioButtonForm(\n            app, sceneInfo.question, `${this.id}_radio_form`\n        );\n    }\n\n    restoreState(value) {\n        if (super.restoreState(value)) {\n            let eleID = `${this.id}_option_${value}`;\n            let el = document.getElementById(eleID);\n            if (typeof(el) === \"undefined\") {\n                console.error(`\\t\\tUnable to Select Radio Button ${eleID}`);\n                return false;\n             } else {\n                el.checked = true;\n                console.debug(`\\t\\tSelected Radio Button: ${eleID}`);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasForm() {\n        return true;\n    }\n\n    formChanged() {\n        return this.form.changed;\n    }\n\n    saveFormData() {\n        let data = this.form.getData();\n        let logData = Object.assign(\n            {\n                action_type: \"SUBMIT_ANSWER\",\n                questionId: `${this.app.activityKey}.${this.id}`\n            },\n            data\n        );\n        console.log(\"Updating state.events\");\n        this.app.state.events.push(logData);\n        console.log(\"Updating state.sceneState\");\n        console.log(this.app.state);\n        this.app.state.sceneState[this.id] = data.selectedValue;\n    }\n\n    pre_exit() {\n        super.pre_exit();\n        if (this.formChanged()) {\n            this.saveFormData();\n        }\n    }\n\n    setupEventHandlers() {\n        this.form.setupEventHandlers();\n    }\n\n    teardownEventHandlers() {\n        this.form.teardownEventHandlers();\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        if (process.env.NODE_ENV === \"production\") {\n            // don't let student skip over question\n            if (! this.form.isValid() ) {\n                this.app.disable(this.app.nextBtn);\n            }\n        }\n        this.setupEventHandlers();\n    }\n\n    defaultExitSceneActions() {\n        super.defaultExitSceneActions();\n        this.teardownEventHandlers();\n    }\n}\n","import \"./styles/index.scss\";\n\nimport { getActivityConfiguration } from \"@isptutorproject/activity-config\";\nimport { DiInstructionApp } from \"./di-instruction-app\";\n\nlet activityConfig = getActivityConfiguration();\nlet activityData = require(\"../data/diInstr.json\");\n\nconst DEFAULT_INITIAL_APP_STATE = {\n    events: [],\n    // mapping of sceneid => sceneType-specific data\n    sceneState: {},\n    currentScene: \"start\"\n};\n\nlet app = new DiInstructionApp(\n    activityData, activityConfig, DEFAULT_INITIAL_APP_STATE\n);\nif (process.env.NODE_ENV === \"development\") {\n    app.setStartScene(\"scene28\");\n}\napp.start();\n","export function getActivityConfiguration() {\n    let activityConfig = {\n        userID: localStorage.getItem(\"userID\"),\n        classCode: localStorage.getItem(\"classCode\"),\n        database: localStorage.getItem(\"database\"),\n        homepage: localStorage.getItem(\"homepage\"),\n        activityKey: localStorage.getItem(\"currentActivity\"),\n        features: (localStorage.getItem(\"currentActivityFeatures\") || \"\")\n                  .split(\":\")\n                  .filter((item) => item !== \"\")\n    };\n    console.log(activityConfig);\n    return activityConfig;\n}","import { SceneBasedApp } from \"@isptutorproject/scene-app-base\";\nimport { DiInstructionScene } from \"./di-instruction-scene\";\nimport { DiStatsScene } from \"./di-stats-scene\";\nimport { DiMultipleChoiceFormScene } from \"./di-mult-choice-form-scene\";\n\n\nexport class DiInstructionApp extends SceneBasedApp {\n    constructor(appData, activityConfig, defaultInitialState) {\n        super(appData, activityConfig, defaultInitialState);\n        // bind event handlers\n        this.handleBackToQuestion = this.handleBackToQuestion.bind(this);\n        this.handleReadyToAnswer = this.handleReadyToAnswer.bind(this);\n        this.backToQuestionBtn = document.getElementById(\"back_to_question_btn\");\n        this.readyToAnswerBtn  = document.getElementById(\"ready_to_answer_btn\");\n        this.readyToAnswerBtn.addEventListener(\"click\", this.handleReadyToAnswer);\n        this.backToQuestionBtn.addEventListener(\"click\", this.handleBackToQuestion);\n    }\n\n    handleReadyToAnswer(event) {\n        event.preventDefault();\n        this.followEdge(\"readyToAnswer\");\n    }\n\n    handleBackToQuestion(event) {\n        event.preventDefault();\n        this.followEdge(\"backToQuestion\");\n    }\n\n    createScene(sceneInfo) {\n        let newScene;\n        if (\"stats\" === sceneInfo.sceneType) {\n            newScene = new DiStatsScene(this, sceneInfo);\n        } else if (\"multipleChoiceForm\" === sceneInfo.sceneType) {\n            newScene = new DiMultipleChoiceFormScene(this, sceneInfo);\n        } else {\n            newScene = new DiInstructionScene(this, sceneInfo);\n        }\n        return newScene;\n    }\n\n}\n","import { getDBConnection } from \"@isptutorproject/isp-database\";\nimport { SnackBar} from \"@isptutorproject/snackbar\";\n\nexport class SceneBasedApp {\n    constructor(appData, activityConfig, defaultInitialState) {\n        this.sceneData = appData.scenes;\n        this.activityConfig = activityConfig;\n        this.db = getDBConnection(activityConfig.database);\n        this.db.setCredentials(activityConfig.classCode, activityConfig.userID);\n        this.activityKey = activityConfig.activityKey;\n        this.defaultState = defaultInitialState;\n\n        this.snackbar = new SnackBar();\n        this.homePageBtn = null;\n        let homePageBtn  = document.getElementById(\"go_home_page\");\n        this.nextBtn = document.getElementById(\"next_btn\");\n        this.prevBtn = document.getElementById(\"prev_btn\");\n        this.sceneIdRegion = document.getElementById(\"scene_id_region\");\n        if (homePageBtn) {\n            this.homePageBtn = homePageBtn;\n        }\n        this.handleGoHomePage = this.handleGoHomePage.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        if (this.homePageBtn) {\n            this.homePageBtn.addEventListener(\"click\", this.handleGoHomePage);\n        }\n        this.nextBtn.addEventListener(\"click\", this.handleNext);\n        this.prevBtn.addEventListener(\"click\", this.handlePrev);\n\n        this.state = {};\n        this.scenes = {};\n        this.startScene = \"start\";\n        this.currentScene = null;\n        this.prevScene = null;\n        // is this needed???\n        this.bogusSceneInfo = {\n            id: \"N/A\",\n            sceneType: \"bogus\"\n        };\n        window.app = this;\n    }\n\n\n    // setSnackbar(snackbar) {\n    //     this.snackbar = snackbar;\n    // }\n\n    showFeedback(feedback) {\n        this.snackbar.show(feedback);\n    }\n\n    handleGoHomePage(event) {\n        event.preventDefault();\n        window.location.href = this.activityConfig.homepage\n    }\n\n    handlePrev(event) {\n        event.preventDefault();\n        this.currentScene.handlePrevButton();\n        this.saveAppState();\n    }\n\n    handleNext(event) {\n        event.preventDefault();\n        this.currentScene.handleNextButton();\n        this.saveAppState();\n    }\n\n    setStartScene(sceneId) {\n        console.debug(\"setStartScene()\", sceneId);\n        this.startScene = sceneId;\n    }\n\n    start() {\n        console.log(\"starting\");\n        this.getAppState()\n            .then((state) => {\n                if (null === state) {\n                    console.log(\"no activity data in db. using initial data\")\n                    state = this.defaultState;\n                }\n                this.state = state;\n                return;\n            })\n            .then(() => {\n                console.log(\"Initializing Scenes\");\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    // console.log(`creating scene for ${sceneId}`);\n                    let sceneObj = this.createScene(this.sceneData[sceneId]);\n                    // console.log(sceneObj);\n                    this.scenes[sceneId] = sceneObj;\n                }\n                return;\n            })\n            .then(() => {\n                console.log(this.state);\n                console.log(this.state.sceneState);\n                console.log(\"Restoring App State\")\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    let sceneState = this.state.sceneState[sceneId];\n                    this.scenes[sceneId].restoreState(sceneState);\n                }\n                if (this.state.currentScene) {\n                    console.log(\"Restoring Current Scene\");\n                    this.currentScene = this.lookupScene(this.state.currentScene);\n                }\n                return;\n            })\n            .then(() => {\n                // console.debug(this.sceneData);\n                // console.log(this.scenes);\n            })\n            .then(() => {\n                this.gotoStartScene();\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    getAppState() {\n        console.debug(\"Loading App State\");\n        return this.db.getActivityData(this.activityKey);\n    }\n\n    saveAppState() {\n        console.debug(\"Saving App State\");\n        return this.db.setActivityData(this.activityKey, this.state);\n    }\n\n    createScene(sceneInfo) {\n        // you'll want to override this to do anything useful\n        // console.debug(\"createScene()\", sceneInfo, sceneState);\n        return new Scene(this, sceneInfo);\n    }\n\n    switchToScene(scene) {\n        this.logSceneChange(scene);\n        this.gotoScene(scene);\n    }\n\n    gotoScene(scene) {\n        this.prevScene = this.currentScene;\n        if (this.prevScene) {\n            this.prevScene.pre_exit();\n            this.prevScene.exit();\n            this.prevScene.post_exit();\n        }\n        this.currentScene = scene;\n        this.currentScene.pre_enter();\n        this.currentScene.enter();\n        this.currentScene.post_enter();\n        // delete this.prevScene;\n        this.displaySceneId();\n    }\n\n    displaySceneId() {\n        if (process.env.NODE_ENV === \"development\") {\n            this.sceneIdRegion.innerHTML = this.currentScene.id;\n        }\n    }\n\n    lookupScene(sceneId) {\n        let scene = this.scenes[sceneId];\n        if (!scene) {\n            console.error(`ERROR: no such scene ${sceneId}`);\n        }\n        return scene;\n    }\n\n    followEdge(edgeName) {\n        let newSceneId = this.currentScene.edges[edgeName];\n        let newScene = this.lookupScene(newSceneId);\n        this.switchToScene(newScene);\n    }\n\n    logSceneChange(scene) {\n        let data = {\n            action: \"ENTER_SCENE\",\n            from: this.currentScene.id,\n            to: scene.id,\n            timestamp: Date.now()\n        };\n        this.state.events.push(data);\n        console.debug(\"Updating state.events\");\n    }\n\n\n    gotoStartScene() {\n        // bypasses switchToScene() and thus logSceneChange()\n        // this.currentScene = null;\n        let startScene = this.currentScene;\n        if (!startScene) {\n            startScene = this.lookupScene(this.startScene);\n        }\n        this.gotoScene(startScene);\n    }\n\n\n    hide(el) {\n        if (el) { el.classList.add(\"hidden\"); }\n    }\n\n    show(el) {\n        if (el) { el.classList.remove(\"hidden\"); }\n    }\n\n    makeInvisible(el) {\n        if (el) {\n            el.classList.add(\"invisible\");\n        }\n    }\n\n    makeVisible(el) {\n        if (el) {\n            el.classList.remove(\"invisible\");\n        }\n    }\n\n    disable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.add(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n\n    enable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.remove(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n}\n","import { LocalStorageDB } from \"./localStorageDB\";\nimport { FirestoreDB } from \"./firestoreDB\";\n\nexport function getDBConnection(dbType) {\n    let db;\n    switch(dbType) {\n        case \"firestore\":\n            db = new FirestoreDB();\n            break;\n        default:\n            db = new LocalStorageDB();\n    }\n    return db; \n}\n"],"sourceRoot":""}