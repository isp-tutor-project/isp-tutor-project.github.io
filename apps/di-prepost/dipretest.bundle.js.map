{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/ckot/projects/work/isptutorproject_website/common/navbar/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/activity-config/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/database.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/localStorageDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/firestoreDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/snackbar/index.js","webpack:///./src/scenes/testScene.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/scene.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/radio-button-form.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/textarea-form.js","webpack:///./src/scenes/testResultsScene.js","webpack:///./src/scenes/dualTableResultsScene.js","webpack:///./src/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-app-base/app.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/index.js","webpack:///./src/pretest.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NavBar","this","el","document","querySelector","homeBtn","getElementById","activityTitle","glossaryBtn","glossaryPopup","signOutBtn","signInText","goHome","toggleGlossary","signOutUser","addEventListener","e","homePage","calcHomePage","redirectTo","classList","toggle","localStorage","getItem","window","location","origin","url","allowRefresh","href","reload","console","log","innerHTML","add","clear","title","innerText","toUpperCase","userName","remove","getActivityConfiguration","currentActivity","JSON","parse","activityConfig","userID","database","homepage","activityID","id","activityKey","activityFeatures","features","split","filter","item","STUDY3","conditionActivities","1","2","Database","dbType","formData","decodeJSON","varName","super","classCode","setCredentials","count","data","Promise","all","getTextValue","getActivityData","getCurrHypoTask","getIntialHypoData","getFinalHypoData","then","ccRes","uidRes","rqRes","chtRes","ihRes","fhRes","rqted","currHypoTaskIdx","firstPrediction","initialHypo","secondPrediction","finalHypo","getJSONValue","stringify","saveJSONValue","retVal","moduleState","selectedArea","index","selectedTopic","selectedVariable","selectedRQ","catch","err","error","getIntValue","pred1","initHypo","pred2","overwrite","resolve","reject","items","setItem","undefined","parseInt","parseFloat","firebaseConfig","apiKey","authDomain","projectId","firebase","initializeApp","store","firestore","userRef","collection","doc","update","usernum","FieldValue","increment","docRef","exists","getUserData","where","FN","LN","MON","DAY","snapshot","size","docs","getNextUserNum","userNum","conditionNum","conditionStr","activityList","assign","condition","assignments","completedAssignments","set","userData","activityId","includes","push","state","activityState","merge","delete","SnackBar","eleID","text","setTimeout","app","sceneInfo","debug","k","v","entries","handleFollowEdgeButton","btnNames","btnName","show","hide","preventDefault","edgeName","target","dataset","edge","followEdge","getElementsByClassName","getFollowEdgeElements","once","sceneType","_isBogus","currentScene","defaultEnterSceneActions","customEnterActions","length","performCustomEnterSceneActions","defaultExitSceneActions","customExitActions","performCustomExitSceneActions","resizeContent","setupFollowEdgeEventHandlers","warn","customActions","showBtns","hideBtns","prev","prevBtn","next","nextBtn","action","args","enable","RadioButtonForm","formInfo","eleId","handleChange","form","radios","querySelectorAll","changed","checkValidity","isValid","rb","removeEventListener","isCorrect","sfi","val","trim","correctAnswer","fbText","fbClassName","fbMsg","getCorrectness","posFb","negFb","ntlFb","selectedAnswer","lbl","labels","questionType","type","questionText","selectedEleId","selectedValue","selectedLabel","timestamp","Date","now","TextareaForm","textarea","answer","q1Answer","currentTransition","currentTransitionStateSaver","currentState","saveQ1State","saveQ2State","saveQ3State","revealStatHandler","handleSortData","showSortedDataBtn","sortedTableText","q2TextArea","currentForm","q1Form","questions","q1","q2Form","q2","q3Form","q3","forms","q2Text","q3Text","setupEventHandlers","sceneState","restoreState","q1Selection","checked","updateQ2AndQ3Text","q2Answer","q3Selection","side","stat","revealStat","dataSorted","showSortedData","replaceSortBtnWithText","diff","btnEl","statEl","_1","_2","replace","updateSceneState","events","time","f","getData","handleTransition","btn","phRepl","submitQuestion","qNum","logData","questionId","hideAllForms","disable","focus","a","b","table","tbody","rows","sort","_compareRows","row","appendChild","leftTable","rightTable","_sortTable","appData","defaultInitialState","sceneData","scenes","db","schema","getDBConnection","defaultState","snackbar","homePageBtn","sceneIdRegion","handleGoHomePage","handleNext","handlePrev","handleResize","startScene","prevScene","bogusSceneInfo","event","sEl","cEl","sWidth","sHeight","cWidth","cHeight","sc","offsetWidth","offsetHeight","Math","min","style","transform","feedback","markActivityAsCompleted","top","handlePrevButton","saveAppState","handleNextButton","sceneId","getAppState","section","sceneObj","createScene","lookupScene","gotoStartScene","setActivityData","Scene","scene","logSceneChange","gotoScene","pre_exit","exit","post_exit","pre_enter","enter","post_enter","displaySceneId","newSceneId","edges","newScene","switchToScene","from","to","activityData","navbar","displayActivityTitle","displayUser","start"],"mappings":"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","file":"dipretest.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import \"./index.css\";\n\nexport class NavBar {\n    constructor() {\n        this.el = document.querySelector(\"nav.navbar\");\n        this.homeBtn = document.getElementById(\"navbar_home_btn\");\n        this.activityTitle = document.getElementById(\"activity_title\");\n        this.glossaryBtn = document.getElementById(\"navbar_glossary_btn\");\n        this.glossaryPopup = document.querySelector(\".navbar-glossary-popup\");\n        this.signOutBtn = document.getElementById(\"sign_out_button\");\n        this.signInText = document.getElementById(\"sign_in_text\");\n        this.goHome      = this.goHome.bind(this);\n        this.toggleGlossary = this.toggleGlossary.bind(this);\n        this.signOutUser = this.signOutUser.bind(this);\n        this.homeBtn.addEventListener('click', this.goHome);\n        this.glossaryBtn.addEventListener(\"click\", this.toggleGlossary);\n        this.signOutBtn.addEventListener(\"click\", this.signOutUser);\n    }\n\n    goHome(e) {\n        let homePage = this.calcHomePage();\n        this.redirectTo(homePage);\n    }\n\n    toggleGlossary(e) {\n        this.glossaryPopup.classList.toggle(\"hidden\");\n    }\n\n    calcHomePage() {\n        let homePage = localStorage.getItem(\"homepage\");\n        if (null === homePage) {\n            homePage = window.location.origin + \"/\";\n        }\n        return homePage;\n    }\n\n    redirectTo(url, allowRefresh=false) {\n        // prevent refresh if already on this page\n        let isSamePage = window.location.href === url;\n        if (!isSamePage) {\n            window.location.href = url;\n        } else if (allowRefresh) {\n            window.location.reload();\n        } else {\n            console.log(\"same url but refresh disabled\");\n        }\n    }\n\n    signOutUser(e) {\n        this.signInText.innerHTML = \"\";\n        this.signInText.classList.add(\"invisible\");\n        this.signOutBtn.classList.add(\"invisible\");\n        let homePage = this.calcHomePage();\n        // this does the actual signing out\n        localStorage.clear();\n        this.redirectTo(homePage, true);\n    }\n\n    displayActivityTitle(title) {\n        this.activityTitle.innerText = title.toUpperCase();\n    }\n\n\n    displayUser(userName) {\n        this.signInText.innerHTML = `Welcome, ${userName}`;\n        this.signInText.classList.remove(\"invisible\");\n        this.signOutBtn.classList.remove(\"invisible\");\n    }\n};\n","export function getActivityConfiguration() {\n    let currentActivity = JSON.parse(localStorage.getItem(\"currentActivity\"));\n    let activityConfig = {\n        userID: localStorage.getItem(\"userID\"),\n        database: localStorage.getItem(\"database\"),\n        homepage: localStorage.getItem(\"homepage\"),\n        activityID: currentActivity.id,\n        activityKey: currentActivity.key,\n        activityFeatures: currentActivity.features.split(\":\").filter((item) => item !== \"\")\n    };\n    console.log(activityConfig);\n    return activityConfig;\n}","\nexport const STUDY3 = {\n    conditionActivities: {\n        1: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"reSelectBL\",\n            \"hypoWEoneDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ],\n        2: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"reSelectBL\",\n            \"hypoWEbiDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ]\n    }\n};\n\n// abstract class - interface\nexport class Database {\n    constructor(dbType) {\n        this.dbType = dbType;\n    }\n\n    setCredentials(userID) {\n        this.userID = userID;\n    }\n\n    lookupUserID(formData) {\n\n    }\n\n    loginUser(userID) {\n\n    }\n\n    registerUser(formData) {\n\n    }\n\n    getUserData() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n\n    }\n\n    setActivityData(activityKey, object) {\n\n    }\n\n    getRQData() {\n\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getInitialHypoData() {\n\n    }\n\n    getFinalHypoData() {\n\n    }\n\n    saveValue(varName, value) {\n\n    }\n\n    saveJSONValue(varName, object) {\n\n    }\n\n    getBoolValue(varName) {\n\n    }\n\n    getIntValue(varName) {\n\n    }\n\n    getFloatValue(varName) {\n\n    }\n\n    getTextValue(varName) {\n\n    }\n\n    getJSONValue(varName) {\n\n    }\n\n};\n\n\n","\nimport { Database } from \"./database\";\n\n// NOTE: this API must use promises to be compatible with any db\n// we may be using, which may be either sync or async\nexport class LocalStorageDB extends Database {\n\n    constructor() {\n        super();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        // return Promise.all([\n        // this.saveValue(\"classCode\", classCode),\n        // this.saveValue(\"userID\", userID),\n        // ]).then(([result1, result2]) => { });\n    }\n\n    getUserData() {\n        console.count(\"getUserData() called\");\n        let data = {};\n        return Promise.all([\n            this.getTextValue(\"classCode\"),\n            this.getTextValue(\"userID\"),\n            this.getActivityData(\"rqted\"),\n            this.getCurrHypoTask(),\n            this.getIntialHypoData(),\n            this.getFinalHypoData()\n        ]).then(([ccRes, uidRes, rqRes, chtRes, ihRes, fhRes]) => {\n            data.classCode = ccRes;\n            data.userID = uidRes;\n            data.rqted = rqRes;\n            if (chtRes) {\n                data.currHypoTaskIdx = chtRes\n            }\n            if (ihRes) {\n                data.firstPrediction = ihRes.firstPrediction;\n                data.initialHypo = ihRes.initialHypo;\n            }\n            if (fhRes) {\n                data.secondPrediction = fhRes.secondPrediction;\n                data.finalHypo = fhRes.finalHypo;\n            }\n            return data;\n        });\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n        return this.getJSONValue(activityKey)\n        .then((data) => {\n            if (data && !decodeJSON) {\n                return JSON.stringify(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    setActivityData(activityKey, object) {\n        return this.saveJSONValue(activityKey, object);\n    }\n\n    getRQData() {\n        let retVal = null;\n        return this.getActivityData(\"rqted\")\n        .then((rqted) => {\n            // console.log(rqted);\n            if (rqted) {\n                retVal = rqted;\n            } else {\n                // if the rq isn't selected hard-code to crystal growth\n                retVal = {\n                    moduleState: {\n                        selectedArea: { index: 1 },\n                        selectedTopic: { index: 1 },\n                        selectedVariable: { index: 1 },\n                        selectedRQ: { index: 1 }\n                    }\n                };\n            }\n            // console.log(retVal);\n            return retVal;\n        })\n        .catch((err) => {\n            console.error(err);\n            return retVal;\n        });\n    }\n\n    getCurrHypoTask() {\n        return this.getIntValue(\"currHypoTaskIdx\")\n    }\n\n    getIntialHypoData() {\n        let data = {};\n        return this.getTextValue(\"firstPrediction\")\n            .then((pred1) => {\n                // console.log(`getInitialHypoData():firstPrediction ${pred1}`);\n                if (null !== pred1) {\n                    data.firstPrediction = pred1;\n                    return this.getJSONValue(\"initialHypo\");\n                } else {\n                    data.firstPrediction = null;\n                    return null;\n                }\n            })\n            .then((initHypo) => {\n                // console.log(`getInitialHypoData():initHypo ${initHypo}`);\n                data.initialHypo = initHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    getFinalHypoData() {\n        let data = {};\n        return this.getTextValue(\"secondPrediction\")\n            .then((pred2) => {\n                // console.log(`getFinalHypoData():secondPrediction ${pred2}`)\n                if (null !== pred2) {\n                    data.secondPrediction = pred2;\n                    return this.getJSONValue(\"finalHypo\");\n                } else {\n                    data.secondPrediction = null;\n                    return null\n                }\n            })\n            .then((finalHypo) => {\n                // console.log(`getFinalHypoData():finalHypo ${finalHypo}`);\n                data.finalHypo = finalHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    setValues(object, overwrite=false) {\n        // overwrite param is ignored, as it is specific to firestore\n        return new Promise((resolve, reject) => {\n            try {\n                for (let [key, value] of Object.items(object)) {\n                    localStorage.setItem(key, value);\n                }\n                resolve(true);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    saveValue(varName, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        })\n    }\n\n    saveJSONValue(varName, object) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = JSON.stringify(object);\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getBoolValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (undefined === value) {\n                    resolve(value);\n                }\n                if (\"true\" === value) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getIntValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n               let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseInt(value, 10);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getFloatValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseFloat(value);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getTextValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = value;\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    };\n\n    getJSONValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    value = JSON.parse(value);\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n};\n\n// let db = new Database(\"BOGUS_CLASS\", \"BOGUS_STUDENT\");\n\n","import { STUDY3, Database } from \"./database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7zIk-8V20QqJNSs0cAV0uNL3qjeqLMdM\",\n    authDomain: \"isptutor.firebaseapp.com\",\n    projectId: \"isptutor\"\n};\n\nexport class FirestoreDB extends Database {\n\n    constructor() {\n        super(\"firestore\");\n        firebase.initializeApp(firebaseConfig);\n        this.store = firebase.firestore();\n    }\n\n    setCredentials(userID) {\n        super.setCredentials(userID);\n        this.userRef = this.store.collection(\"STUDY_3\").doc(userID);\n    }\n\n    getNextUserNum() {\n        return this.store.collection(\"STUDY_3\").doc(\"study_data\").update({\n            usernum: firebase.firestore.FieldValue.increment(1)\n        }).then(() => this.store.collection(\"STUDY_3\").doc(\"study_data\").get())\n        .then((doc) => {\n            return doc.data().usernum;\n        })\n        .catch((error) => console.error(error));\n    }\n\n    // loginUser(classCode, userID) {\n    //     let retVal;\n    //     return this.store.collection(\"STUDY_3\")\n    //         .where(\"classCode\", \"==\", classCode)\n    //         .where(\"userID\", \"==\", userID)\n    //         .get()\n    //         .then((snapshot) => {\n    //             if (1 !== snapshot.size) {\n    //                 return false;\n    //             }\n    //             this.userRef = snapshot.docs[0];\n    //             return true;\n    //         })\n    // }\n\n    loginUser(userID) {\n        let docRef = this.store.collection(\"STUDY_3\").doc(userID);\n        return docRef.get()\n        .then((doc) => {\n            if (!doc.exists) {\n                return false;\n            } else {\n                this.userRef = docRef;\n                return this.getUserData()\n            }\n        });\n    }\n\n    lookupUserID(formData) {\n        // returns userID (truthy) or false\n        return this.store.collection(\"STUDY_3\")\n            .where(\"classCode\", \"==\", formData.classCode)\n            .where(\"FN\",        \"==\", formData.FN)\n            .where(\"LN\",        \"==\", formData.LN)\n            .where(\"MON\",       \"==\", formData.MON)\n            .where(\"DAY\",       \"==\", formData.DAY)\n            .get()\n            .then((snapshot) => {\n                // console.log(snapshot);\n                if (1 !== snapshot.size) {\n                    return false;\n                } else {\n                    console.log('record found');\n                    let userID = false;\n                    let data = snapshot.docs[0].data();\n                    if (data.userID) {\n                        userID = data.userID;\n                    } else {\n                        console.log(\"no userID field\", data);\n                    }\n                    return userID;\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                return false;\n            });\n    }\n\n    registerUser(formData) {\n        let userID = false;\n        console.log('registering user');\n        return this.getNextUserNum()\n        .then((userNum) => {\n            // if even cond1 if odd cond2\n            let conditionNum = (userNum % 2) + 1;\n            let conditionStr = `${conditionNum}`;\n            userID = `USER${userNum}_${conditionNum}`;\n            let activityList = STUDY3.conditionActivities[conditionStr];\n            let data = Object.assign(formData, {\n                userID: userID,\n                condition: conditionStr,\n                assignments: JSON.stringify(activityList),\n                completedAssignments: JSON.stringify([])\n            })\n            return this.store.collection(\"STUDY_3\").doc(userID).set(data)\n        })\n        .then(() => {\n            return userID;\n        })\n        .catch((error) => {\n            console.error(error);\n            return false;\n        })\n    }\n\n    getUserData() {\n        // returns promise with 'doc' if it exists, false otherwise\n        let userData = false;\n        return this.userRef.get()\n        .then((doc) => {\n            if (doc.exists) {\n                let data = doc.data();\n                userData = {\n                    userID: data.userID,\n                    condition: data.condition,\n                    assignments: JSON.parse(data.assignments),\n                    completedAssignments: JSON.parse(data.completedAssignments)\n                }\n            }\n            return userData;\n        });\n    }\n\n    markActivityAsCompleted(activityId) {\n        // console.log(`markActivityAsCompleted(${activityId})`);\n        return this.userRef.get()\n        .then((doc) => {\n            let data = doc.data();\n            return JSON.parse(data.completedAssignments)\n        })\n        .then((completedAssignments) => {\n            // console.log(\"BEFORE:\", completedAssignments);\n            if (!completedAssignments.includes(activityId)) {\n                completedAssignments.push(activityId);\n            }\n            // console.log(\"AFTER\", completedAssignments)\n            return this.userRef.update({\n                completedAssignments: JSON.stringify(completedAssignments)\n            });\n        });\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON=true) {\n        return this.userRef.get()\n        .then((doc) => doc.data())\n        .then((userData) => {\n            console.log(\"userData\", userData);\n            if (!userData) {\n                return null;\n            }\n            let data = userData[activityKey];\n            if (!data) {\n                return null;\n            }\n            if (data && decodeJSON) {\n                return JSON.parse(data);\n            } else {\n                return data;\n            }\n        }).catch((error) => {\n            console.error(error);\n            return null;\n        });\n    }\n\n    setActivityData(activityKey, state) {\n        let activityState = JSON.stringify(state);\n        return this.userRef.update({\n            [activityKey]: activityState\n        })\n        .then(() => {\n            console.log(\"app data saved successefully\")\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n    // getRQData() {\n    //     return this.getAppData(\"rqted\");\n    // }\n\n\n    // getInitialHypoData() {\n    //     return this.getAppData(\"initialHypo\")\n    //     .then((strData))\n    // }\n\n    // getFinalHypoData() {\n    //     return this.getAppData(\"finalHypo\")\n    // }\n\n    setValues(object, overwrite=false) {\n        // default to {merge: true} option for safety\n        return this.userRef.set(object, {merge: !overwrite});\n    }\n\n    updateValues(object) {\n        return this.userRef.update(object);\n    }\n\n    deleteValue(varName) {\n        return this.userRef.update({\n            [varName]: firebase.firestore.FieldValue.delete()\n        });\n    }\n\n    // saveJSONValue(varName, value) {\n    //     return this.userRef.set({\n    //         [varName]: JSON.stringify(value)\n    //     });\n    // }\n\n    // getBoolValue(varName) {\n\n    // }\n\n    // getIntValue(varName) {\n\n    // }\n\n    // getFloatValue(varName) {\n\n    // }\n\n    // getTextValue(varName) {\n\n    // }\n\n    // getJSONValue(varName) {\n\n    // }\n};","import \"./index.css\";\n\n\nexport class SnackBar {\n    constructor(eleID) {\n        this.el = document.getElementById(eleID || \"snackbar\");\n    }\n\n    show(text) {\n        if (typeof(text) !== \"undefined\" && null !== text) {\n            this.el.innerHTML = text;\n            // Add the \"show\" class to DIV\n            // this.el.className = \"show\";\n            this.el.classList.add(\"show\");\n            // After 3 seconds, remove the show class from DIV\n            setTimeout(() => {\n                // snackbar.className = snackbar.className.replace(\"show\", \"\");\n                this.el.classList.remove(\"show\");\n            }, 3000);\n        }\n    }\n}\n","import { Scene } from \"@isptutorproject/scene-app-base\";\n\nexport class DiTestScene extends Scene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.customActions = {\n            showBtns: this.showBtns,\n            hideBtns: this.hideBtns,\n        };\n        this.btnNames = {\n            prev: this.app.prevBtn,\n            next: this.app.nextBtn\n        };\n    }\n\n    performCustomEnterSceneActions() {\n        for (let action of this.customEnterActions) {\n            let name = action.name;\n            let args = action.args;\n            if (this.customActions.hasOwnProperty(name)) {\n                this[name](args);\n            }\n        }\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        this.app.show(this.app.prevBtn);\n        this.app.show(this.app.nextBtn);\n        this.app.enable(this.app.prevBtn);\n        this.app.enable(this.app.nextBtn);\n    }\n\n}\n","export class Scene {\n    constructor(app, sceneInfo) {\n        console.debug(`\\tInitializing Scene: ${sceneInfo.id}`);\n        this.app = app;\n        // copy all sceneInfo to 'this'\n        for (let [k, v] of Object.entries(sceneInfo)) {\n            this[k] = v;\n        }\n        this.el = document.getElementById(this.id);\n        // bind event handler\n        this.handleFollowEdgeButton = this.handleFollowEdgeButton.bind(this);\n    }\n\n    showBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.show(this.btnNames[btnName]);\n            }\n        }\n    }\n\n    hideBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.hide(this.btnNames[btnName]);\n            }\n        }\n    }\n\n\n    handleFollowEdgeButton(e) {\n        e.preventDefault();\n        let edgeName = e.target.dataset.edge;\n        this.app.followEdge(edgeName);\n    }\n\n    getFollowEdgeElements() {\n        return this.el.getElementsByClassName(\"follow-edge\");\n    }\n\n    setupFollowEdgeEventHandlers() {\n        for (let el of this.getFollowEdgeElements()) {\n            el.addEventListener(\n                \"click\", this.handleFollowEdgeButton, { once: true }\n            );\n        }\n    }\n\n    restoreState(value) {\n        if (typeof (value) !== \"undefined\") {\n            console.debug(`\\tRestoring Scene State for: ${this.id} `);\n            return true;\n        }\n        return false;\n    }\n\n    _isBogus() {\n        return this.id === \"N/A\" || this.sceneType === \"bogus\";\n    }\n\n    handlePrevButton() {\n        this.app.followEdge(\"prev\");\n    }\n\n    handleNextButton() {\n        this.app.followEdge(\"next\");\n    }\n\n    hasForm() {\n        return false;\n    }\n\n    formChanged() {\n        return false;\n    }\n\n    pre_enter() {\n\n    }\n\n    enter() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Entering Scene: ${this.id}`);\n        console.debug(\"\\tUpdating state.currentScene\");\n        this.app.state.currentScene = this.id;\n        this.defaultEnterSceneActions();\n        if (this.customEnterActions.length) {\n            this.performCustomEnterSceneActions();\n        }\n    }\n\n    post_enter() {\n\n    }\n\n    pre_exit() {\n\n    }\n\n    exit() {\n        if (this._isBogus()) {\n            return;\n        }\n        console.debug(`Exiting Scene: ${this.id}`);\n        this.defaultExitSceneActions();\n        if (this.customExitActions.length) {\n            this.performCustomExitSceneActions();\n        }\n    }\n\n    post_exit() {\n\n    }\n\n    defaultEnterSceneActions() {\n        this.el.classList.add(\"active\");\n        this.app.resizeContent();\n        this.setupFollowEdgeEventHandlers();\n    }\n\n    defaultExitSceneActions() {\n        this.el.classList.remove(\"active\");\n    }\n\n    performCustomEnterSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomEnterSceneActions\");\n    }\n\n    performCustomExitSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomExitSceneActions\");\n    }\n}\n","export class RadioButtonForm {\n    constructor(app, formInfo, eleId) {\n        this.handleChange = this.handleChange.bind(this);\n        this.app = app;\n        this.formInfo = formInfo;\n        this.form = document.getElementById(eleId);\n        this.radios = this.form.querySelectorAll('input[type=\"radio\"]');\n        this.changed = false;\n    }\n\n    isValid() {\n        const validity = this.form.checkValidity();\n        // console.log(\"form is valid:\", validity);\n        return validity;\n    }\n\n    handleChange(e) {\n        // set form to dirty state so it will get saved later on\n        this.changed = true;\n        if (this.isValid()) {\n            this.app.enable(this.app.nextBtn);\n        }\n    }\n\n    setupEventHandlers() {\n        for (let rb of this.radios) {\n            rb.addEventListener('change', this.handleChange);\n        }\n    }\n\n    teardownEventHandlers() {\n        for (let rb of this.radios) {\n            rb.removeEventListener('change', this.handleChange);\n        }\n    }\n\n\n    getCorrectness() {\n        let sfi = this.formInfo;\n        let selectedAnswer = this.form.querySelector(\n            'input[type=\"radio\"]:checked'\n        )\n        let val = selectedAnswer.value.trim();\n        // let ansText = selectedAnswer.labels[0].innerText;\n        let correctAnswer = sfi.correctAnswer;\n        let isCorrect;\n\n        if (\"N/A\" === correctAnswer) {\n            isCorrect = null;\n        } else if (correctAnswer === val) {\n            isCorrect = true;\n        } else {\n            isCorrect = false;\n        }\n        return isCorrect;\n    }\n\n    getFeedback() {\n        let isCorrect = this.getCorrectness();\n        let sfi = this.formInfo;\n        // console.log(isCorrect, sfi);\n        let fbText, fbClassName, fbMsg;\n        switch(isCorrect) {\n            case true:\n                fbText = sfi.posFb;\n                fbClassName = \"pos-feedback\";\n                break;\n            case false:\n                fbText = sfi.negFb;\n                fbClassName = \"neg-feedback\";\n                break;\n            default:\n                fbText = sfi.ntlFb;\n                fbClassName = \"ntl-feedback\";\n        }\n        if (typeof(fbText) === \"undefined\") {\n            if (typeof(sfi.ntlFb) !== \"undefined\") {\n                fbText = sfi.ntlFb;\n            }\n        }\n        if (typeof (fbText) !== \"undefined\") {\n            fbMsg = `<span class=\"${fbClassName}\">${fbText}</span>`;\n        }\n        return fbMsg;\n    }\n\n    getData() {\n        let sfi = this.formInfo;\n        let isCorrect = this.getCorrectness();\n        let selectedAnswer = this.form.querySelector(\n            'input[type=\"radio\"]:checked'\n        );\n        let val = selectedAnswer.value.trim();\n        let lbl = selectedAnswer.labels[0].innerText;\n        let formData = {\n            questionType: sfi.type,\n            questionText: sfi.text,\n            selectedEleId: selectedAnswer.id,\n            selectedValue: val,\n            selectedLabel: lbl,\n            isCorrect: isCorrect,\n            timestamp: Date.now()\n        }\n        // set form to non-dirty state, so we don't resubmit unless they\n        // change again\n        this.changed = false;\n        return formData;\n    }\n\n}","export class TextareaForm {\n    constructor(app, formInfo, eleId) {\n        this.handleChange = this.handleChange.bind(this);\n        this.app = app;\n        this.formInfo = formInfo;\n        this.form = document.getElementById(eleId);\n        console.log(this.form);\n        this.textarea = this.form.querySelector('.form-control');\n        this.changed = false;\n    }\n\n    isValid() {\n        const validity = this.form.checkValidity();\n        // console.log(\"form is valid:\", validity);\n        return validity;\n    }\n\n    handleChange(e) {\n        // set form to dirty state so it will get saved later on\n        if (this.textarea.value.trim() != \"\") {\n            this.changed = true;\n            // console.log(this.getData());\n            if (this.isValid()) {\n                this.app.enable(this.app.nextBtn);\n            }\n        }\n    }\n\n    setupEventHandlers() {\n        // for (let rb of this.radios) {\n        //     rb.addEventListener('change', this.handleChange);\n        // }\n        this.textarea.addEventListener(\"input\", this.handleChange);\n    }\n\n    teardownEventHandlers() {\n        // for (let rb of this.radios) {\n        //     rb.removeEventListener('change', this.handleChange);\n        // }\n        this.textarea.removeEventListener(\"input\", this.handleChange);\n    }\n\n\n    getCorrectness() {\n        // let sfi = this.formInfo;\n        // let selectedAnswer = this.form.querySelector(\n        //     'input[type=\"radio\"]:checked'\n        // )\n        // let val = selectedAnswer.value.trim();\n        // // let ansText = selectedAnswer.labels[0].innerText;\n        // let correctAnswer = sfi.correctAnswer;\n        // let isCorrect;\n\n        // if (\"N/A\" === correctAnswer) {\n        //     isCorrect = null;\n        // } else if (correctAnswer === val) {\n        //     isCorrect = true;\n        // } else {\n        //     isCorrect = false;\n        // }\n        // return isCorrect;\n        return null;\n    }\n\n    getFeedback() {\n        // let isCorrect = this.getCorrectness();\n        let sfi = this.formInfo;\n        // // console.log(isCorrect, sfi);\n        let fbText, fbClassName, fbMsg;\n        // switch (isCorrect) {\n        //     case true:\n        //         fbText = sfi.posFb;\n        //         fbClassName = \"pos-feedback\";\n        //         break;\n        //     case false:\n        //         fbText = sfi.negFb;\n        //         fbClassName = \"neg-feedback\";\n        //         break;\n        //     default:\n        //         fbText = sfi.ntlFb;\n        //         fbClassName = \"ntl-feedback\";\n        // }\n        // if (typeof (fbText) === \"undefined\") {\n        if (typeof (sfi.ntlFb) !== \"undefined\") {\n            fbText = sfi.ntlFb;\n            fbClassName = \"ntl-feedback\";\n        }\n        // }\n        if (typeof (fbText) !== \"undefined\") {\n            fbMsg = `<span class=\"${fbClassName}\">${fbText}</span>`;\n        }\n        return fbMsg;\n    }\n\n    getData() {\n        let sfi = this.formInfo;\n        let isCorrect = this.getCorrectness();\n        // let selectedAnswer = this.form.querySelector(\n        //     'input[type=\"radio\"]:checked'\n        // );\n        // let val = selectedAnswer.value.trim();\n        // let lbl = selectedAnswer.labels[0].innerText;\n        let answer = this.textarea.value.trim();\n        let formData = {\n            questionType: sfi.type,\n            questionText: sfi.text,\n            // selectedEleId: selectedAnswer.id,\n            // selectedValue: val,\n            // selectedLabel: lbl,\n            answer: answer,\n            isCorrect: isCorrect,\n            timestamp: Date.now()\n        }\n        // set form to non-dirty state, so we don't resubmit unless they\n        // change again\n        this.changed = false;\n        return formData;\n    }\n\n    // getFormData() {\n\n    // }\n\n    // handleFormSubmit(e) {\n    //     e.preventDefault();\n\n    //     if (this.form.checkValidity()) {\n\n    //         let fbText;\n    //         let fbClassName;\n\n    //         if (\"n/a\" === correctAnswer) {\n    //             isCorrect = null;\n    //             fbText = sfi.ntlFb;\n    //             fbClassName = \"ntl-feedback\";\n    //         } else if (correctAnswer === val) {\n    //             isCorrect = true;\n    //             fbText = sfi.posFb;\n    //             fbClassName = \"pos-feedback\";\n    //         } else {\n    //             isCorrect = false;\n    //             fbText = sfi.negFb;\n    //             fbClassName = 'neg-feedback';\n    //         }\n\n    //         if (!fbText) {\n    //             fbText = sfi.ntlFb;\n    //             fbClassName = 'ntl-feedback';\n    //         }\n\n    //         this.app.showFeedback(fbMsg);\n    //         // what we want to store in firestore\n    // }\n    //         console.log(log);\n\n    //     } else {\n    //         let fbMsg = `<span class=\"text-danger\">Please select an option</span>`;\n    //         this.app.showFeedback(fbMsg);\n    //     }\n    // }\n\n}","import { DiTestScene } from \"./testScene\";\n\nimport { RadioButtonForm } from \"@isptutorproject/scene-app-base/radio-button-form\";\nimport { TextareaForm } from \"@isptutorproject/scene-app-base/textarea-form\";\n\nconst FIRST_TRANSITION = 0;\nconst LAST_TRANSITION = 2;\n\nexport class DiTestResultsScene extends DiTestScene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.q1Answer = null;\n        // default to the first transition\n        this.currentTransition = FIRST_TRANSITION;\n        this.currentTransitionStateSaver = null;\n        this.currentState = null;\n\n        this.saveQ1State = this.saveQ1State.bind(this);\n        this.saveQ2State = this.saveQ2State.bind(this);\n        this.saveQ3State = this.saveQ3State.bind(this);\n        this.revealStatHandler = this.revealStatHandler.bind(this);\n        this.handleSortData = this.handleSortData.bind(this);\n\n        this.showSortedDataBtn = document.getElementById(`${this.id}_show_sorted_table`);\n        this.sortedTableText    = document.getElementById(`${this.id}_sorted_text`);\n\n        // this.sortedImg   = document.getElementById(`${this.id}_sorted`);\n        // this.unsortedImg = document.getElementById(`${this.id}_unsorted`);\n\n        this.q2TextArea = document.getElementById(`${this.id}_q2_answer`);\n        this.currentForm = null;\n        this.q1Form = new RadioButtonForm(\n            this.app, sceneInfo.questions.q1, `${this.id}_q1_form`\n        );\n        this.q2Form = new TextareaForm(\n            this.app, sceneInfo.questions.q2, `${this.id}_q2_form`\n        );\n        this.q3Form = new RadioButtonForm(\n            this.app, sceneInfo.questions.q3, `${this.id}_q3_form`\n        );\n        this.forms = [\n            this.q1Form,\n            this.q2Form,\n            this.q3Form\n        ];\n        this.q2Text = document.getElementById(`${this.id}_q2_text`);\n        this.q3Text = document.getElementById(`${this.id}_q3_text`);\n\n        this.setupEventHandlers();\n    }\n\n    restoreState(sceneState) {\n        super.restoreState(sceneState);\n        if (sceneState) {\n            console.log(\"TestResultsScene::restoreState()\");\n            this.currentState = sceneState;\n\n            if (sceneState.currentTransition) {\n                this.currentTransition = sceneState.currentTransition;\n            }\n            if (sceneState.q1Selection) {\n                let el = document.getElementById(sceneState.q1Selection);\n                el.checked = true;\n                // something is very wrong if we don't have both q1Selection\n                // and a1Answer stored\n                this.q1Answer = sceneState.q1Answer;\n                this.updateQ2AndQ3Text();\n            }\n            if (sceneState.q2Answer) {\n                this.q2TextArea.value = sceneState.q2Answer;\n            }\n            if (sceneState.q3Selection) {\n                let el = document.getElementById(sceneState.q3Selection);\n                el.checked = true;\n            }\n            for (let side of [\"left\", \"right\"]) {\n                for (let stat of [\"mean\", \"median\", \"mode\", \"range\"]) {\n                    if (sceneState[`${side}_${stat}_shown`]) {\n                        this.revealStat(side, stat);\n                    }\n                }\n            }\n\n            if (sceneState.dataSorted) {\n                this.showSortedData();\n                this.replaceSortBtnWithText();\n            }\n        }\n    }\n\n    updateSceneState(diff) {\n        if (null === this.currentState) {\n            this.currentState = {};\n        }\n        this.currentState = Object.assign(this.currentState, diff);\n        // console.log(this.currentState);\n        this.app.state.sceneState[this.id] = Object.assign({}, this.currentState);\n    }\n\n    revealStat(side, stat) {\n        let btnEl  = document.getElementById(`${this.id}_reveal_${side}_${stat}`);\n        let statEl = document.getElementById(`${this.id}_${side}_${stat}`);\n        this.app.hide(btnEl);\n        this.app.show(statEl);\n    }\n\n\n    replaceSortBtnWithText() {\n        this.app.hide(this.showSortedDataBtn);\n        this.app.show(this.sortedTableText);\n    }\n\n    revealStatHandler(e) {\n        let [_1, _2, side, stat] = e.target.id.replace(this.id, \"\").split(\"_\");\n        this.revealStat(side, stat);\n        this.updateSceneState({ [`${side}_${stat}_shown`]: true })\n        this.app.state.events.push({\n            type: 'REVEAL_STAT',\n            side: side,\n            stat: stat,\n            time: Date.now()\n        });\n    }\n\n    handleSortData(e) {\n        this.showSortedData();\n        this.replaceSortBtnWithText();\n        this.app.state.events.push({\n            type: \"DATA_SORTED\",\n            time: Date.now()\n        });\n        this.updateSceneState({\"dataSorted\": true});\n    }\n\n    hideAllForms() {\n        for (let f of this.forms) {\n            this.app.hide(f.form);\n        }\n    }\n\n    handlePrevButton() {\n        if (this.currentForm.changed) {\n            this.currentTransitionStateSaver(this.currentForm.getData());\n        }\n        if (FIRST_TRANSITION === this.currentTransition) {\n            this.app.followEdge(\"prev\");\n        } else {\n            this.currentTransition--;\n            this.handleTransition();\n        }\n    }\n\n    handleNextButton() {\n        if (this.currentForm.changed) {\n            this.currentTransitionStateSaver(this.currentForm.getData());\n        }\n        if (LAST_TRANSITION === this.currentTransition) {\n            this.app.followEdge(\"next\");\n        } else {\n            this.currentTransition++;\n            this.handleTransition();\n        }\n    }\n\n    hasForm() {\n        return true;\n    }\n\n    setupEventHandlers() {\n        for (let btn of this.el.querySelectorAll(\".reveal-stat\")) {\n            btn.addEventListener(\"click\", this.revealStatHandler, {once: true});\n        }\n        this.showSortedDataBtn.addEventListener(\n            \"click\", this.handleSortData, { once: true }\n        );\n    }\n\n    updateQ2AndQ3Text() {\n        let phRepl = `<span class=\"q1-answer\">${this.q1Answer}</span>`;\n        this.questions.q2.text = this.questions.q2.text.replace(\n            \"PLACEHOLDER\", phRepl\n        );\n        this.questions.q3.text = this.questions.q3.text.replace(\n            \"PLACEHOLDER\", phRepl\n        );\n        this.q2Text.innerHTML = this.questions.q2.text;\n        this.q3Text.innerHTML = this.questions.q3.text;\n    }\n\n    saveQ1State(data) {\n        this.q1Answer = data.selectedValue;\n        this.updateSceneState({\n            \"q1Selection\": data.selectedEleId,\n            \"q1Answer\": this.q1Answer,\n        });\n        this.updateQ2AndQ3Text();\n        this.submitQuestion(\"q1\", data);\n    }\n\n    saveQ2State(data) {\n        this.updateSceneState({q2Answer: data.answer});\n        data.questionText = data.questionText\n            .replace('<span class=\"q1-answer\">', '')\n            .replace('</span>', '');\n        this.submitQuestion(\"q2\", data);\n    }\n\n    saveQ3State(data) {\n        this.updateSceneState({q3Selection: data.selectedEleId});\n        data.questionText = data.questionText\n            .replace('<span class=\"q1-answer\">', '')\n            .replace('</span>', '');\n        this.submitQuestion(\"q3\", data);\n    }\n\n\n    submitQuestion(qNum, data) {\n        let logData = Object.assign(\n            {\n                type: \"SUBMIT_ANSWER\",\n                questionId: `${this.app.activityKey}.${this.id}.${qNum}`\n            },\n            data\n        );\n        this.app.state.events.push(logData);\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        // I *believe* these next 4 are handle by superclass and can go away\n        this.app.show(this.app.prevBtn);\n        this.app.show(this.app.nextBtn);\n        this.app.enable(this.app.prevBtn);\n        this.app.enable(this.app.nextBtn);\n        this.q1Form.setupEventHandlers();\n        this.q2Form.setupEventHandlers();\n        this.q3Form.setupEventHandlers();\n    }\n\n    handleTransition() {\n        // console.log(\"TestResultsScene.handleTransition()\");\n        // console.log(this.currentTransition);\n        this.hideAllForms();\n        this.currentForm = this.forms[this.currentTransition];\n        this.app.show(this.currentForm.form);\n        if (!this.currentForm.isValid()) {\n            this.app.disable(this.app.nextBtn);\n        } else {\n            this.app.enable(this.app.nextBtn);\n        }\n        switch (this.currentTransition) {\n            case 0:\n                this.currentTransitionStateSaver = this.saveQ1State;\n                break;\n            case 1:\n                this.currentTransitionStateSaver = this.saveQ2State;\n                this.q2TextArea.focus();\n                break;\n            case 2:\n                this.currentTransitionStateSaver = this.saveQ3State;\n                break;\n            default:\n                console.error(`invalid transition: ${this.currentTransition}`);\n        }\n    }\n\n    post_enter() {\n        // console.log(\"TestResultsScene.post_enter()\");\n        // console.log(this.forms);\n        this.handleTransition();\n        if (null !== this.currentState) {\n            this.restoreState(this.currentState);\n        }\n    }\n\n    // teardownAllFormEventHandlers() {\n    //     for (let f of this.forms) {\n    //         f.teardownEventHandlers();\n    //     }\n    // }\n}\n\n","import { DiTestResultsScene } from \"./testResultsScene\";\n\nexport class DiDualTableResultsScene extends DiTestResultsScene {\n    constructor(app, sceneInfo) {\n        super(app, sceneInfo);\n        this.showSortedData = this.showSortedData.bind(this);\n    }\n\n    _compareRows(a, b) {\n        // compares 2nd column of rows as integers\n        let a1 = parseFloat(a.querySelectorAll(\"td\")[1].innerText);\n        let b1 = parseFloat(b.querySelectorAll(\"td\")[1].innerText);\n        return a1 - b1;\n    }\n\n    _sortTable(table) {\n        let tbody = table.querySelector(\"tbody\");\n        let rows = [...tbody.rows];\n        tbody.innerHTML = \"\";\n        rows.sort(this._compareRows);\n        for (let row of rows) {\n            tbody.appendChild(row);\n        }\n    }\n\n    showSortedData() {\n        let leftTable = this.el.querySelector(\"table.data-table.left-table\");\n        let rightTable = this.el.querySelector(\"table.data-table.right-table\");\n        this._sortTable(leftTable);\n        this._sortTable(rightTable);\n    }\n\n\n}\n","\nimport \"./index.scss\";\n\nimport { NavBar } from \"@isptutorproject/navbar\";\n\nimport { SceneBasedApp } from \"@isptutorproject/scene-app-base\";\nimport {\n    DiTestScene,\n    DiDualTableResultsScene,\n    DiSingleTableResultsScene\n} from \"./scenes\";\n\nexport class DiTestApp extends SceneBasedApp{\n\n    createScene(sceneInfo) {\n        let scene;\n        switch(sceneInfo.sceneType) {\n            case \"carResults\":\n            case \"rocketsResults\":\n            case \"libraryResults\":\n            case \"memoryResults\":\n            case \"crystalResults\":\n                scene = new DiDualTableResultsScene(this, sceneInfo);\n                break;\n            default:\n                scene = new DiTestScene(this, sceneInfo);\n\n        }\n        return scene;\n    }\n\n\n}","import { getDBConnection } from \"@isptutorproject/isp-database\";\nimport { SnackBar} from \"@isptutorproject/snackbar\";\n\nexport class SceneBasedApp {\n    constructor(appData, activityConfig, defaultInitialState) {\n        this.sceneData = appData.scenes;\n        this.activityConfig = activityConfig;\n        this.db = getDBConnection(activityConfig.database);\n        this.db.setCredentials(activityConfig.userID);\n        this.activityID = activityConfig.activityID\n        this.activityKey = activityConfig.activityKey;\n        this.defaultState = defaultInitialState;\n\n        this.snackbar = new SnackBar();\n        this.homePageBtn = null;\n        let homePageBtn  = document.getElementById(\"go_home_btn\");\n        this.nextBtn = document.getElementById(\"next_btn\");\n        this.prevBtn = document.getElementById(\"prev_btn\");\n        this.sceneIdRegion = document.getElementById(\"scene_id_region\");\n        if (homePageBtn) {\n            this.homePageBtn = homePageBtn;\n        }\n        this.handleGoHomePage = this.handleGoHomePage.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        if (this.homePageBtn) {\n            this.homePageBtn.addEventListener(\"click\", this.handleGoHomePage);\n        }\n        this.handleResize = this.handleResize.bind(this);\n\n        this.nextBtn.addEventListener(\"click\", this.handleNext);\n        this.prevBtn.addEventListener(\"click\", this.handlePrev);\n\n        this.state = {};\n        this.scenes = {};\n        this.startScene = \"start\";\n        this.currentScene = null;\n        this.prevScene = null;\n        // is this needed???\n        this.bogusSceneInfo = {\n            id: \"N/A\",\n            sceneType: \"bogus\"\n        };\n        window.app = this;\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n\n    handleResize(event) {\n        // console.log(event);\n        this.resizeContent();\n    }\n\n    resizeContent() {\n        let sEl, cEl, sWidth, sHeight, cWidth, cHeight, sc;\n        sEl = document.querySelector(\".scene.active\");\n        if (sEl) {\n            cEl = sEl.querySelector(\".scene-content\");\n        }\n        if (cEl) {\n            sWidth  = sEl.offsetWidth;\n            sHeight = sEl.offsetHeight;\n            cWidth  = cEl.offsetWidth;\n            cHeight = cEl.offsetHeight;\n            sc = Math.min(\n                sWidth / cWidth,\n                sHeight / cHeight\n            );\n            cEl.style.transform = `translate(-50%, -50%) scale(${sc})`;\n        }\n    }\n\n    // setSnackbar(snackbar) {\n    //     this.snackbar = snackbar;\n    // }\n\n    showFeedback(feedback) {\n        this.snackbar.show(feedback);\n    }\n\n    handleGoHomePage(event) {\n        event.preventDefault();\n        // mark this activity as completed\n        this.db.markActivityAsCompleted(this.activityID)\n        .then(() => {\n            // using top instead of window in case we're in an iframe\n            top.location.href = this.activityConfig.homepage;\n        });\n    }\n\n    handlePrev(event) {\n        event.preventDefault();\n        this.currentScene.handlePrevButton();\n        this.saveAppState();\n    }\n\n    handleNext(event) {\n        event.preventDefault();\n        this.currentScene.handleNextButton();\n        this.saveAppState();\n    }\n\n    setStartScene(sceneId) {\n        console.debug(\"setStartScene()\", sceneId);\n        this.startScene = sceneId;\n    }\n\n    start() {\n        console.log(\"starting\");\n        this.getAppState()\n            .then((state) => {\n                console.log(\"returned from getAppState()\", state);\n                if (null === state) {\n                    console.log(\"no activity data in db. using initial data\")\n                    state = this.defaultState;\n                }\n                this.state = state;\n                return;\n            })\n            .then(() => {\n                console.log(\"Initializing Scenes\");\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    // console.log(`creating scene for ${sceneId}`);\n                    let sceneObj = this.createScene(this.sceneData[sceneId]);\n                    // console.log(sceneObj);\n                    this.scenes[sceneId] = sceneObj;\n                }\n                return;\n            })\n            .then(() => {\n                console.log(this.state);\n                console.log(this.state.sceneState);\n                console.log(\"Restoring App State\")\n                for (let section of document.querySelectorAll(\"section.scene\")) {\n                    let sceneId = section.id;\n                    let sceneState = this.state.sceneState[sceneId];\n                    this.scenes[sceneId].restoreState(sceneState);\n                }\n                if (this.state.currentScene) {\n                    console.log(\"Restoring Current Scene\");\n                    this.currentScene = this.lookupScene(this.state.currentScene);\n                }\n                return;\n            })\n            .then(() => {\n                // console.debug(this.sceneData);\n                // console.log(this.scenes);\n            })\n            .then(() => {\n                this.gotoStartScene();\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    getAppState() {\n        console.debug(\"Loading App State\");\n        return this.db.getActivityData(this.activityKey);\n    }\n\n    saveAppState() {\n        console.debug(\"Saving App State\");\n        this.db.setActivityData(this.activityKey, this.state);\n    }\n\n    createScene(sceneInfo) {\n        // you'll want to override this to do anything useful\n        // console.debug(\"createScene()\", sceneInfo, sceneState);\n        return new Scene(this, sceneInfo);\n    }\n\n    switchToScene(scene) {\n        this.logSceneChange(scene);\n        this.gotoScene(scene);\n    }\n\n    gotoScene(scene) {\n        this.prevScene = this.currentScene;\n        if (this.prevScene) {\n            this.prevScene.pre_exit();\n            this.prevScene.exit();\n            this.prevScene.post_exit();\n        }\n        this.currentScene = scene;\n        this.currentScene.pre_enter();\n        this.currentScene.enter();\n        this.currentScene.post_enter();\n        // delete this.prevScene;\n        this.displaySceneId();\n    }\n\n    displaySceneId() {\n        if (process.env.NODE_ENV === \"development\") {\n            this.sceneIdRegion.innerHTML = this.currentScene.id;\n        }\n    }\n\n    lookupScene(sceneId) {\n        let scene = this.scenes[sceneId];\n        if (!scene) {\n            console.error(`ERROR: no such scene ${sceneId}`);\n        }\n        return scene;\n    }\n\n    followEdge(edgeName) {\n        let newSceneId = this.currentScene.edges[edgeName];\n        let newScene = this.lookupScene(newSceneId);\n        this.switchToScene(newScene);\n    }\n\n    logSceneChange(scene) {\n        this.state.events.push({\n            type: \"SCENE_TRANSITION\",\n            from: this.currentScene.id,\n            to: scene.id,\n            timestamp: Date.now()\n        });\n        // console.debug(\"Updating state.events\");\n    }\n\n\n    gotoStartScene() {\n        // bypasses switchToScene() and thus logSceneChange()\n        // this.currentScene = null;\n        let startScene = this.currentScene;\n        if (!startScene) {\n            startScene = this.lookupScene(this.startScene);\n        }\n        this.state.events.push({\n            type: \"APP_START\",\n            scene:  startScene.id,\n            timestamp: Date.now()\n        });\n        // console.debug(\"Updating state.events\");\n        this.gotoScene(startScene);\n    }\n\n\n    hide(el) {\n        if (el) { el.classList.add(\"hidden\"); }\n    }\n\n    show(el) {\n        if (el) { el.classList.remove(\"hidden\"); }\n    }\n\n    makeInvisible(el) {\n        if (el) {\n            el.classList.add(\"invisible\");\n        }\n    }\n\n    makeVisible(el) {\n        if (el) {\n            el.classList.remove(\"invisible\");\n        }\n    }\n\n    disable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.add(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n\n    enable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.remove(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n}\n","import { LocalStorageDB } from \"./localStorageDB\";\nimport { FirestoreDB } from \"./firestoreDB\";\n\nexport function getDBConnection(dbType, schema) {\n    let db;\n    switch(dbType) {\n        case \"firestore\":\n            db = new FirestoreDB();\n            break;\n        default:\n            db = new LocalStorageDB();\n    }\n    return db;\n}\n","import { DiTestApp } from \"./index\";\nimport { NavBar } from \"@isptutorproject/navbar\";\n\nimport { getActivityConfiguration } from \"@isptutorproject/activity-config\";\n\n\nconst DEFAULT_APP_INITIAL_STATE = {\n    events: [],\n    // mapping of sceneIDs -> scene-type specific data\n    sceneState: {},\n    currentScene: \"start\"\n};\n\n\nlet activityConfig = getActivityConfiguration();\nconst activityData = require(\"../data/diPreTest.json\");\n\nlet navbar = new NavBar();\nnavbar.displayActivityTitle(\"Data Interpretation Pre-Test\");\nnavbar.displayUser(activityConfig.userID);\n\n// console.log(activityConfig);\n\nlet app = new DiTestApp(\n    activityData, activityConfig, DEFAULT_APP_INITIAL_STATE\n);\nif (process.env.NODE_ENV === \"development\") {\n    app.setStartScene(\"start\");\n}\napp.start()\n\n"],"sourceRoot":""}