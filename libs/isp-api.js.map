{"version":3,"sources":["webpack://ISP_API/webpack/bootstrap","webpack://ISP_API/../isp-database/database.js","webpack://ISP_API/../isp-database/localStorageDB.js","webpack://ISP_API/../isp-database/firestoreDB.js","webpack://ISP_API/./src/index.js","webpack://ISP_API/../activity-config/index.js","webpack://ISP_API/../isp-database/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","STUDY3","conditionActivities","1","2","Database","dbType","this","userID","formData","activityKey","decodeJSON","varName","super","classCode","setCredentials","console","count","data","Promise","all","getTextValue","getActivityData","getCurrHypoTask","getIntialHypoData","getFinalHypoData","then","ccRes","uidRes","rqRes","chtRes","ihRes","fhRes","rqted","currHypoTaskIdx","firstPrediction","initialHypo","secondPrediction","finalHypo","getJSONValue","JSON","stringify","saveJSONValue","retVal","moduleState","selectedArea","index","selectedTopic","selectedVariable","selectedRQ","catch","err","error","getIntValue","pred1","initHypo","pred2","overwrite","resolve","reject","items","localStorage","setItem","getItem","undefined","parseInt","parseFloat","parse","firebaseConfig","apiKey","authDomain","projectId","firebase","initializeApp","store","firestore","userRef","collection","doc","update","usernum","FieldValue","increment","docRef","exists","getUserData","where","FN","LN","MON","DAY","snapshot","size","log","docs","getNextUserNum","userNum","conditionNum","conditionStr","assign","condition","completedAssignments","set","userData","assignments","activityId","includes","push","state","activityState","merge","delete","activityConfig","currentActivity","database","homepage","activityID","id","activityFeatures","features","split","filter","item","getActivityConfiguration","db","schema","getDBConnection","join","setActivityData","markActivityAsCompleted","top","location","href"],"mappings":"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","file":"isp-api.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport const STUDY3 = {\n    conditionActivities: {\n        1: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEoneDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ],\n        2: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEbiDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ]\n    }\n};\n\n// abstract class - interface\nexport class Database {\n    constructor(dbType) {\n        this.dbType = dbType;\n    }\n\n    setCredentials(userID) {\n        this.userID = userID;\n    }\n\n    lookupUserID(formData) {\n\n    }\n\n    loginUser(userID) {\n\n    }\n\n    registerUser(formData) {\n\n    }\n\n    getUserData() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n\n    }\n\n    setActivityData(activityKey, object) {\n\n    }\n\n    getRQData() {\n\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getInitialHypoData() {\n\n    }\n\n    getFinalHypoData() {\n\n    }\n\n    saveValue(varName, value) {\n\n    }\n\n    saveJSONValue(varName, object) {\n\n    }\n\n    getBoolValue(varName) {\n\n    }\n\n    getIntValue(varName) {\n\n    }\n\n    getFloatValue(varName) {\n\n    }\n\n    getTextValue(varName) {\n\n    }\n\n    getJSONValue(varName) {\n\n    }\n\n};\n\n\n","\nimport { Database } from \"./database\";\n\n// NOTE: this API must use promises to be compatible with any db\n// we may be using, which may be either sync or async\nexport class LocalStorageDB extends Database {\n\n    constructor() {\n        super();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        // return Promise.all([\n        // this.saveValue(\"classCode\", classCode),\n        // this.saveValue(\"userID\", userID),\n        // ]).then(([result1, result2]) => { });\n    }\n\n    getUserData() {\n        console.count(\"getUserData() called\");\n        let data = {};\n        return Promise.all([\n            this.getTextValue(\"classCode\"),\n            this.getTextValue(\"userID\"),\n            this.getActivityData(\"rqted\"),\n            this.getCurrHypoTask(),\n            this.getIntialHypoData(),\n            this.getFinalHypoData()\n        ]).then(([ccRes, uidRes, rqRes, chtRes, ihRes, fhRes]) => {\n            data.classCode = ccRes;\n            data.userID = uidRes;\n            data.rqted = rqRes;\n            if (chtRes) {\n                data.currHypoTaskIdx = chtRes\n            }\n            if (ihRes) {\n                data.firstPrediction = ihRes.firstPrediction;\n                data.initialHypo = ihRes.initialHypo;\n            }\n            if (fhRes) {\n                data.secondPrediction = fhRes.secondPrediction;\n                data.finalHypo = fhRes.finalHypo;\n            }\n            return data;\n        });\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n        return this.getJSONValue(activityKey)\n        .then((data) => {\n            if (data && !decodeJSON) {\n                return JSON.stringify(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    setActivityData(activityKey, object) {\n        return this.saveJSONValue(activityKey, object);\n    }\n\n    getRQData() {\n        let retVal = null;\n        return this.getActivityData(\"rqted\")\n        .then((rqted) => {\n            // console.log(rqted);\n            if (rqted) {\n                retVal = rqted;\n            } else {\n                // if the rq isn't selected hard-code to crystal growth\n                retVal = {\n                    moduleState: {\n                        selectedArea: { index: 1 },\n                        selectedTopic: { index: 1 },\n                        selectedVariable: { index: 1 },\n                        selectedRQ: { index: 1 }\n                    }\n                };\n            }\n            // console.log(retVal);\n            return retVal;\n        })\n        .catch((err) => {\n            console.error(err);\n            return retVal;\n        });\n    }\n\n    getCurrHypoTask() {\n        return this.getIntValue(\"currHypoTaskIdx\")\n    }\n\n    getIntialHypoData() {\n        let data = {};\n        return this.getTextValue(\"firstPrediction\")\n            .then((pred1) => {\n                // console.log(`getInitialHypoData():firstPrediction ${pred1}`);\n                if (null !== pred1) {\n                    data.firstPrediction = pred1;\n                    return this.getJSONValue(\"initialHypo\");\n                } else {\n                    data.firstPrediction = null;\n                    return null;\n                }\n            })\n            .then((initHypo) => {\n                // console.log(`getInitialHypoData():initHypo ${initHypo}`);\n                data.initialHypo = initHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    getFinalHypoData() {\n        let data = {};\n        return this.getTextValue(\"secondPrediction\")\n            .then((pred2) => {\n                // console.log(`getFinalHypoData():secondPrediction ${pred2}`)\n                if (null !== pred2) {\n                    data.secondPrediction = pred2;\n                    return this.getJSONValue(\"finalHypo\");\n                } else {\n                    data.secondPrediction = null;\n                    return null\n                }\n            })\n            .then((finalHypo) => {\n                // console.log(`getFinalHypoData():finalHypo ${finalHypo}`);\n                data.finalHypo = finalHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    setValues(object, overwrite=false) {\n        // overwrite param is ignored, as it is specific to firestore\n        return new Promise((resolve, reject) => {\n            try {\n                for (let [key, value] of Object.items(object)) {\n                    localStorage.setItem(key, value);\n                }\n                resolve(true);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    saveValue(varName, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        })\n    }\n\n    saveJSONValue(varName, object) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = JSON.stringify(object);\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getBoolValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (undefined === value) {\n                    resolve(value);\n                }\n                if (\"true\" === value) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getIntValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n               let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseInt(value, 10);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getFloatValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseFloat(value);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getTextValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = value;\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    };\n\n    getJSONValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    value = JSON.parse(value);\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n};\n\n// let db = new Database(\"BOGUS_CLASS\", \"BOGUS_STUDENT\");\n\n","import { STUDY3, Database } from \"./database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7zIk-8V20QqJNSs0cAV0uNL3qjeqLMdM\",\n    authDomain: \"isptutor.firebaseapp.com\",\n    projectId: \"isptutor\"\n};\n\nexport class FirestoreDB extends Database {\n\n    constructor() {\n        super(\"firestore\");\n        firebase.initializeApp(firebaseConfig);\n        this.store = firebase.firestore();\n    }\n\n    setCredentials(userID) {\n        super.setCredentials(userID);\n        this.userRef = this.store.collection(\"STUDY_3\").doc(userID);\n    }\n\n    getNextUserNum() {\n        return this.store.collection(\"STUDY_3\").doc(\"study_data\").update({\n            usernum: firebase.firestore.FieldValue.increment(1)\n        }).then(() => this.store.collection(\"STUDY_3\").doc(\"study_data\").get())\n        .then((doc) => {\n            return doc.data().usernum;\n        })\n        .catch((error) => console.error(error));\n    }\n\n    // loginUser(classCode, userID) {\n    //     let retVal;\n    //     return this.store.collection(\"STUDY_3\")\n    //         .where(\"classCode\", \"==\", classCode)\n    //         .where(\"userID\", \"==\", userID)\n    //         .get()\n    //         .then((snapshot) => {\n    //             if (1 !== snapshot.size) {\n    //                 return false;\n    //             }\n    //             this.userRef = snapshot.docs[0];\n    //             return true;\n    //         })\n    // }\n\n    loginUser(userID) {\n        let docRef = this.store.collection(\"STUDY_3\").doc(userID);\n        return docRef.get()\n        .then((doc) => {\n            if (!doc.exists) {\n                return false;\n            } else {\n                this.userRef = docRef;\n                return this.getUserData()\n            }\n        });\n    }\n\n    lookupUserID(formData) {\n        // returns userID (truthy) or false\n        return this.store.collection(\"STUDY_3\")\n            .where(\"classCode\", \"==\", formData.classCode)\n            .where(\"FN\",        \"==\", formData.FN)\n            .where(\"LN\",        \"==\", formData.LN)\n            .where(\"MON\",       \"==\", formData.MON)\n            .where(\"DAY\",       \"==\", formData.DAY)\n            .get()\n            .then((snapshot) => {\n                // console.log(snapshot);\n                if (1 !== snapshot.size) {\n                    return false;\n                } else {\n                    console.log('record found');\n                    let userID = false;\n                    let data = snapshot.docs[0].data();\n                    if (data.userID) {\n                        userID = data.userID;\n                    } else {\n                        console.log(\"no userID field\", data);\n                    }\n                    return userID;\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                return false;\n            });\n    }\n\n    registerUser(formData) {\n        let userID = false;\n        console.log('registering user');\n        return this.getNextUserNum()\n        .then((userNum) => {\n            // if even cond1 if odd cond2\n            let conditionNum = (userNum % 2) + 1;\n            let conditionStr = `${conditionNum}`;\n            userID = `USER${userNum}_${conditionNum}`;\n            // let activityList = STUDY3.conditionActivities[conditionStr];\n            let data = Object.assign(formData, {\n                userID: userID,\n                condition: conditionStr,\n                completedAssignments: JSON.stringify([])\n            });\n            // assignments: JSON.stringify(activityList),\n            return this.store.collection(\"STUDY_3\").doc(userID).set(data)\n        })\n        .then(() => {\n            return userID;\n        })\n        .catch((error) => {\n            console.error(error);\n            return false;\n        })\n    }\n\n    getUserData() {\n        // returns promise with 'doc' if it exists, false otherwise\n        let userData = false;\n        return this.userRef.get()\n        .then((doc) => {\n            if (doc.exists) {\n                let data = doc.data();\n                userData = {\n                    userID: data.userID,\n                    condition: data.condition,\n                    assignments: STUDY3.conditionActivities[data.condition],\n                    completedAssignments: JSON.parse(data.completedAssignments)\n                }\n            }\n\n            return userData;\n        });\n    }\n\n    markActivityAsCompleted(activityId) {\n        // console.log(`markActivityAsCompleted(${activityId})`);\n        return this.userRef.get()\n        .then((doc) => {\n            let data = doc.data();\n            return JSON.parse(data.completedAssignments)\n        })\n        .then((completedAssignments) => {\n            // console.log(\"BEFORE:\", completedAssignments);\n            if (!completedAssignments.includes(activityId)) {\n                completedAssignments.push(activityId);\n            }\n            // console.log(\"AFTER\", completedAssignments)\n            return this.userRef.update({\n                completedAssignments: JSON.stringify(completedAssignments)\n            });\n        });\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON=true) {\n        return this.userRef.get()\n        .then((doc) => doc.data())\n        .then((userData) => {\n            console.log(\"userData\", userData);\n            if (!userData) {\n                return null;\n            }\n            let data = userData[activityKey];\n            if (!data) {\n                return null;\n            }\n            if (data && decodeJSON) {\n                return JSON.parse(data);\n            } else {\n                return data;\n            }\n        }).catch((error) => {\n            console.error(error);\n            return null;\n        });\n    }\n\n    setActivityData(activityKey, state) {\n        let activityState = JSON.stringify(state);\n        return this.userRef.update({\n            [activityKey]: activityState\n        })\n        .then(() => {\n            console.log(\"app data saved successefully\")\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n    // getRQData() {\n    //     return this.getAppData(\"rqted\");\n    // }\n\n\n    // getInitialHypoData() {\n    //     return this.getAppData(\"initialHypo\")\n    //     .then((strData))\n    // }\n\n    // getFinalHypoData() {\n    //     return this.getAppData(\"finalHypo\")\n    // }\n\n    setValues(object, overwrite=false) {\n        // default to {merge: true} option for safety\n        return this.userRef.set(object, {merge: !overwrite});\n    }\n\n    updateValues(object) {\n        return this.userRef.update(object);\n    }\n\n    deleteValue(varName) {\n        return this.userRef.update({\n            [varName]: firebase.firestore.FieldValue.delete()\n        });\n    }\n\n    // saveJSONValue(varName, value) {\n    //     return this.userRef.set({\n    //         [varName]: JSON.stringify(value)\n    //     });\n    // }\n\n    // getBoolValue(varName) {\n\n    // }\n\n    // getIntValue(varName) {\n\n    // }\n\n    // getFloatValue(varName) {\n\n    // }\n\n    // getTextValue(varName) {\n\n    // }\n\n    // getJSONValue(varName) {\n\n    // }\n};","import { getActivityConfiguration } from \"@isptutorproject/activity-config\";\nimport { getDBConnection } from \"@isptutorproject/isp-database\";\n\n\nexport class IspAPI {\n    constructor() {\n        this.activityConfig = getActivityConfiguration();\n        this.db = getDBConnection(this.activityConfig.database, \"study3\");\n        this.db.setCredentials(this.activityConfig.userID);\n    }\n\n\n    getUserID() {\n        return this.activityConfig.userID;\n    }\n\n    getFeaturesString() {\n        return this.activityConfig.activityFeatures.join(\":\")\n    }\n\n    getAppData(decodeJSON=false) {\n        return this.db.getActivityData(this.activityConfig.activityKey, decodeJSON);\n    }\n\n    saveAppData(object) {\n        return this.db.setActivityData(this.activityConfig.activityKey, object);\n    }\n\n    saveAppComplete() {\n        return this.db.markActivityAsCompleted(this.activityConfig.activityID);\n    }\n\n    goHomePage() {\n        top.location.href = this.activityConfig.homepage;\n    }\n}","export function getActivityConfiguration() {\n    let currentActivity = JSON.parse(localStorage.getItem(\"currentActivity\"));\n    let activityConfig = {\n        userID: localStorage.getItem(\"userID\"),\n        database: localStorage.getItem(\"database\"),\n        homepage: localStorage.getItem(\"homepage\"),\n        activityID: currentActivity.id,\n        activityKey: currentActivity.key,\n        activityFeatures: currentActivity.features.split(\":\").filter((item) => item !== \"\")\n    };\n    console.log(activityConfig);\n    return activityConfig;\n}","import { LocalStorageDB } from \"./localStorageDB\";\nimport { FirestoreDB } from \"./firestoreDB\";\n\nexport function getDBConnection(dbType, schema) {\n    let db;\n    switch(dbType) {\n        case \"firestore\":\n            db = new FirestoreDB();\n            break;\n        default:\n            db = new LocalStorageDB();\n    }\n    return db;\n}\n"],"sourceRoot":""}