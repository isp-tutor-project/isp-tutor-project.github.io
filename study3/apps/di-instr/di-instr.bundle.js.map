{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/ckot/projects/work/isptutorproject_website/common/scene-transitions-base/index.js","webpack:///./src/di-instruction-scene.js","webpack:///./src/di-stats-scene.js","webpack:///./src/di-mult-choice-form-scene.js","webpack:///./src/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/snackbar/index.js","webpack:///./src/di-instruction-app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Scene","app","sceneInfo","this","k","v","entries","el","document","getElementById","id","sceneType","_isBogus","defaultEnterSceneActions","customEnterActions","length","performCustomEnterSceneActions","defaultExitSceneActions","customExitActions","performCustomExitSceneActions","classList","add","remove","console","warn","data","super","handleTransitionButton","customActions","showBtns","hideBtns","hiliteTableCells","hilightTableCells","btnNames","prev","prevBtn","next","nextBtn","backToQuestion","backToQuestionBtn","readyToAnswer","readyToAnswerBtn","btnName","show","hide","args","tableId","table","color","selector","cellSelectors","sel","querySelector","e","preventDefault","transitionName","target","dataset","transition","handleTransition","getElementsByClassName","getTransitionElements","addEventListener","once","setupTransitionEventHandlers","action","handleFormSubmit","formInfo","question","form","radios","querySelectorAll","submitBtn","checkValidity","isCorrect","fbText","fbClassName","sfi","selectedAnswer","val","trim","ansText","labels","innerText","correctAnswer","ntlFb","posFb","negFb","fbMsg","showFeedback","log","questionType","type","questionText","selected","timestamp","Date","toLocaleString","radio","disable","enable","rb","handleFormChange","setupEventHandlers","appData","eleID","text","innerHTML","setTimeout","scenes","debug","bogusSceneInfo","scene","logTransition","prevScene","currentScene","exit","enter","sceneId","error","newSceneId","transitions","newSceneInfo","lookupScene","newScene","createScene","transitionTo","startSceneInfo","startScene","sceneIdRegion","window","snackbar","feedback","from","to","questionName","answer","questions","qid","testName","questionId","displaySceneId","setSnackbar","setStartScene"],"mappings":"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","file":"di-instr.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\nexport class Scene {\n    constructor(app, sceneInfo) {\n        this.app = app;\n        // copy all sceneInfo to 'this'\n        for (let [k, v] of Object.entries(sceneInfo)) {\n            this[k] = v;\n        }\n        this.el = document.getElementById(this.id);\n    }\n\n    _isBogus() {\n        return this.id === \"N/A\" || this.sceneType === \"bogus\";\n    }\n\n    enter() {\n        if (this._isBogus()) {\n            return;\n        }\n        this.defaultEnterSceneActions();\n        if (this.customEnterActions.length) {\n            this.performCustomEnterSceneActions();\n        }\n    }\n\n    exit() {\n        if (this._isBogus()) {\n            return;\n        }\n        this.defaultExitSceneActions();\n        if (this.customExitActions.length) {\n            this.performCustomExitSceneActions();\n        }\n    }\n\n    defaultEnterSceneActions() {\n        this.el.classList.add(\"active\");\n    }\n\n    defaultExitSceneActions() {\n        this.el.classList.remove(\"active\");\n    }\n\n    performCustomEnterSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomEnterSceneActions\");\n    }\n\n    performCustomExitSceneActions() {\n        console.warn(\"Unimplemented Method: performCustomExitSceneActions\");\n    }\n}\n\nexport class SceneTransitionsApp {\n    constructor(appData) {\n        this.scenes = appData.scenes;\n        console.debug(this.scenes);\n        this.bogusSceneInfo = {\n            id: \"N/A\",\n            sceneType: \"bogus\"\n        }\n    }\n\n    createScene(sceneInfo) {\n        console.debug(\"createScene()\", sceneInfo);\n        return new Scene(this, sceneInfo);\n    }\n\n    transitionTo(scene) {\n        this.logTransition(scene);\n        this.prevScene = this.currentScene;\n        this.prevScene.exit();\n        this.currentScene = scene;\n        this.currentScene.enter();\n        delete this.prevScene;\n    }\n\n    lookupScene(sceneId) {\n        let sceneInfo = this.scenes[sceneId];\n        if (!sceneInfo) {\n            console.error(`ERROR: no such scene ${sceneId}`);\n        }\n        return sceneInfo;\n    }\n\n    handleTransition(transitionName) {\n        let newSceneId = this.currentScene.transitions[transitionName];\n        let newSceneInfo = this.lookupScene(newSceneId);\n        if (!newSceneInfo) {\n            return;\n        }\n        let newScene = this.createScene(newSceneInfo);\n        console.debug(newScene);\n        this.transitionTo(newScene);\n    }\n\n    logTransition(scene) {\n        console.warn(\"Unimplemented Method: logTransition()\");\n    }\n\n    setStartScene(sceneId) {\n        console.debug(\"setStartScene()\", sceneId);\n        let startSceneInfo = this.lookupScene(sceneId);\n\n        if (!this.scenes.hasOwnProperty(sceneId)) {\n            console.error(`no scene named \"${sceneId}\"`);\n            return;\n        }\n\n        this.currentScene = this.createScene(this.bogusSceneInfo);\n        if (!startSceneInfo) {\n            return;\n        }\n        let startScene = this.createScene(startSceneInfo);\n        this.transitionTo(startScene);\n    }\n\n    hide(el) {\n        if (el) { el.classList.add(\"hidden\"); }\n    }\n\n    show(el) {\n        if (el) { el.classList.remove(\"hidden\"); }\n    }\n\n    makeInvisible(el) {\n        if (el) {\n            // el.classList.remove(\"visible\");\n            el.classList.add(\"invisible\");\n        }\n    }\n\n    makeVisible(el) {\n        if (el) {\n            el.classList.remove(\"invisible\");\n            // el.classList.add(\"visible\");\n        }\n    }\n\n    disable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.add(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n\n    enable(el) {\n        if (el) {\n            // console.log(\"disabling:\", el);\n            el.classList.remove(\"disabled\");\n        } else {\n            // console.log(\"not disabling non-existinant element:\", el);\n        }\n    }\n\n}\n","import { Scene } from \"@isptutorproject/scene-transitions-base\";\n\nexport class DiInstructionScene extends Scene {\n    constructor(app, data) {\n        super(app, data);\n        this.handleTransitionButton = this.handleTransitionButton.bind(this);\n        this.customActions = {\n            showBtns: this.showBtns,\n            hideBtns: this.hideBtns,\n            hiliteTableCells: this.hilightTableCells\n        };\n        this.btnNames = {\n            prev: this.app.prevBtn,\n            next: this.app.nextBtn,\n            backToQuestion: this.app.backToQuestionBtn,\n            readyToAnswer: this.app.readyToAnswerBtn\n        };\n    }\n\n    showBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.show(this.btnNames[btnName]);\n            }\n        }\n    }\n\n    hideBtns(btnNames) {\n        for (let btnName of btnNames) {\n            if (this.btnNames.hasOwnProperty(btnName)) {\n                this.app.hide(this.btnNames[btnName]);\n            }\n        }\n    }\n\n    hiliteTableCells(args) {\n        let tableId = `${this.id}_${args.table}`;\n        let table = document.getElementById(tableId);\n        let color = args.color || \"blue\";\n        for (let selector of args.cellSelectors) {\n            let sel = `td${selector}`;\n            let cell = table.querySelector(sel);\n            cell.classList.add(`${color}-bg`);\n        }\n    }\n\n    handleTransitionButton(e) {\n        e.preventDefault();\n        let transitionName = e.target.dataset.transition;\n        this.app.handleTransition(transitionName);\n    }\n\n    getTransitionElements() {\n        return this.el.getElementsByClassName(\"transition-to\");\n    }\n\n    setupTransitionEventHandlers() {\n        for (let el of this.getTransitionElements()) {\n            el.addEventListener(\"click\", this.handleTransitionButton, { once: true });\n        }\n    }\n\n    // teardownTransitionEventHandlers() {\n    //     for (let el of this.getTransitionElements()) {\n    //         el.removeEventListener(\"click\", this.handleTransition);\n    //     }\n    // }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        this.setupTransitionEventHandlers();\n        if (process.env.NODE_ENV === \"production\") {\n            this.app.hide(this.app.prevBtn);\n        } else {\n            this.app.show(this.app.prevBtn);\n        }\n        this.app.show(this.app.nextBtn);\n        this.app.hide(this.app.readyToAnswerBtn);\n        this.app.hide(this.app.backToQuestionBtn);\n    }\n\n    performCustomEnterSceneActions() {\n        for (let action of this.customEnterActions) {\n            let name = action.name;\n            let args = action.args;\n            if (this.customActions.hasOwnProperty(name)) {\n                this[name](args);\n            }\n        }\n    }\n\n    defaultExitSceneActions() {\n        super.defaultExitSceneActions()\n    }\n};\n","\nimport { DiInstructionScene } from \"./di-instruction-scene\";\n\nexport class DiStatsScene extends DiInstructionScene {\n    constructor(app, data) {\n        super(app, data);\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        this.app.hide(this.app.prevBtn);\n        this.app.hide(this.app.nextBtn);\n    }\n}\n","import { DiInstructionScene } from \"./di-instruction-scene\";\n\nexport class DiMultipleChoiceFormScene extends DiInstructionScene {\n    constructor(app, data) {\n        super(app, data);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        // this.handleFormChange = this.handleFormChange.bind(this);\n        this.formInfo = data.question;\n        this.form = document.getElementById(`${this.id}_radio_form`);\n        // this.fbRegion = document.getElementById(\n        //     `${this.id}_feedback_region`\n        // );\n        this.radios = this.form.querySelectorAll('input[type=\"radio\"]');\n        this.submitBtn = document.getElementById(`${this.id}_submit_btn`);\n    }\n\n    // hideFeedbackRegion() {\n    //     this.app.makeInvisible(this.fbRegion);\n    // }\n\n    // showFeedbackRegion() {\n    //     this.app.makeVisible(this.fbRegion);\n    // }\n\n    // handleFormChange(e) {\n    //     this.hideFeedbackRegion();\n    // }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n\n        if (this.form.checkValidity()) {\n            let sfi = this.formInfo;\n            let selectedAnswer = this.form.querySelector(\n                'input[type=\"radio\"]:checked'\n            )\n            let val = selectedAnswer.value.trim();\n            let ansText = selectedAnswer.labels[0].innerText;\n            let correctAnswer = sfi.correctAnswer;\n            let isCorrect;\n            let fbText;\n            let fbClassName;\n            if (\"n/a\" === correctAnswer) {\n                isCorrect = null;\n                fbText = sfi.ntlFb;\n                fbClassName = \"ntl-feedback\";\n            } else if (correctAnswer === val) {\n                isCorrect = true;\n                fbText = sfi.posFb;\n                fbClassName = \"pos-feedback\";\n            } else {\n                isCorrect = false;\n                fbText = sfi.negFb;\n                fbClassName = 'neg-feedback';\n            }\n            if (!fbText) {\n                fbText = sfi.ntlFb;\n                fbClassName = 'ntl-feedback';\n            }\n            // if (this.fbRegion && fbText) {\n            if (fbText) {\n                let fbMsg =  `<span class=\"${fbClassName}\">\n                    ${fbText}\n                </span>`;\n                this.app.showFeedback(fbMsg);\n                // this.fbRegion.innerHTML = fbMsg;\n                // this.showFeedbackRegion();\n            }\n            // what we want to store in firestore\n            let log = {\n                id: `${this.id}.question`,\n                questionType: sfi.type,\n                question: sfi.questionText,\n                selected: ansText,\n                isCorrect: isCorrect,\n                timestamp: new Date().toLocaleString()\n            }\n            console.log(log);\n\n            for (let radio of this.radios) {\n                this.app.disable(radio);\n                this.app.disable(radio.labels[0]);\n            }\n            this.app.disable(this.submitBtn);\n            this.app.enable(this.app.nextBtn);\n            this.app.enable(this.app.prevBtn);\n        // } else if (this.fbRegion) {\n        } else {\n            let fbMsg = `<span class=\"text-danger\">Please select an option</span>`;\n            this.app.showFeedback(fbMsg);\n            // this.fbRegion.innerHTML = fbMsg;\n            // this.showFeedbackRegion();\n        }\n    }\n\n    setupEventHandlers() {\n        for (let rb of this.radios) {\n            rb.addEventListener('change', this.handleFormChange)\n        }\n        this.submitBtn.addEventListener(\"click\", this.handleFormSubmit);\n    }\n\n    defaultEnterSceneActions() {\n        super.defaultEnterSceneActions();\n        this.app.disable(this.app.prevBtn);\n        this.app.disable(this.app.nextBtn);\n        this.setupEventHandlers();\n    }\n\n    defaultExitSceneActions() {\n        super.defaultExitSceneActions();\n        // these are strictly for development when the user can return to\n        // this page via the prev btn\n        this.app.enable(this.submitBtn);\n        for (let rb of this.radios) {\n            this.app.enable(rb);\n        }\n    }\n}\n","import \"./styles/index.scss\";\n\nimport { SnackBar } from \"@isptutorproject/snackbar\";\nimport { DiInstructionApp } from \"./di-instruction-app\";\n\n\nlet appData = require(\"../data/diInstr.json\");\n\nlet snackbar = new SnackBar();\nlet app = new DiInstructionApp(appData)\napp.setSnackbar(snackbar);\napp.setStartScene(\"start\");\n","import \"./index.css\";\n\n\nexport class SnackBar {\n    constructor(eleID) {\n        this.el = document.getElementById(eleID || \"snackbar\");\n    }\n\n    show(text) {\n        this.el.innerHTML = text;\n        // Add the \"show\" class to DIV\n        // this.el.className = \"show\";\n        this.el.classList.add(\"show\");\n        // After 3 seconds, remove the show class from DIV\n        setTimeout(() => {\n            // snackbar.className = snackbar.className.replace(\"show\", \"\");\n            this.el.classList.remove(\"show\");\n        }, 3000);    \n    }\n}\n","import { SceneTransitionsApp } from \"@isptutorproject/scene-transitions-base\";\nimport { DiInstructionScene } from \"./di-instruction-scene\";\nimport { DiStatsScene } from \"./di-stats-scene\";\nimport { DiMultipleChoiceFormScene } from \"./di-mult-choice-form-scene\";\n\nexport class DiInstructionApp extends SceneTransitionsApp {\n    constructor(appData) {\n        super(appData);\n        this.nextBtn = document.getElementById(\"next_btn\");\n        this.prevBtn = document.getElementById(\"prev_btn\");\n        this.backToQuestionBtn = document.getElementById(\"back_to_question_btn\");\n        this.readyToAnswerBtn = document.getElementById(\"ready_to_answer_btn\");\n        this.sceneIdRegion = document.getElementById(\"scene_id_region\");\n        this.nextBtn.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.handleTransition(\"next\");\n        });\n        this.prevBtn.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.handleTransition(\"prev\");\n        });\n        this.readyToAnswerBtn.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.handleTransition(\"readyToAnswer\");\n        });\n        this.backToQuestionBtn.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            this.handleTransition(\"backToQuestion\");\n        });\n        window.app = this;\n    }\n\n    setSnackbar(snackbar) {\n        this.snackbar = snackbar;\n    }\n\n    showFeedback(feedback) {\n        this.snackbar.show(feedback);\n    }\n\n    createScene(sceneInfo) {\n        let newScene;\n        if (\"stats\" === sceneInfo.sceneType) {\n            newScene = new DiStatsScene(this, sceneInfo);\n        } else if (\"multipleChoiceForm\" === sceneInfo.sceneType) {\n            newScene = new DiMultipleChoiceFormScene(this, sceneInfo);\n        } else {\n            newScene = new DiInstructionScene(this, sceneInfo);\n        }\n        return newScene;\n    }\n\n    logTransition(scene) {\n        // FIXME: this needs to get stored in firestore\n        let data = {\n            action: \"SCENE_TRANSITION\",\n            from: this.currentScene.id,\n            to: scene.id,\n            timestamp: new Date().toLocaleString()\n        };\n        console.log(scene.id, data);\n    }\n\n    logStudentAnswer(questionName, answer) {\n        let question = this.currentScene.questions[questionName];\n        let isCorrect = \"N/A\";\n        if (question.hasOwnProperty(\"correctAnswer\")) {\n            isCorrect = (answer === question.correctAnswer)\n        }\n        let qid = `${this.currentScene.id}.${questionName}`;\n        if (\"\" !== this.testName) {\n            qid = `${this.testName}.${qid}`;\n        }\n        let data = {\n            action: \"SUBMIT_ANSWER\",\n            questionId: qid,\n            questionText: question.text,\n            answer: answer,\n            isCorrect: isCorrect,\n            timestamp: new Date().toLocaleString()\n        }\n        console.log(data);\n    }\n\n    transitionTo(scene) {\n        super.transitionTo(scene);\n        this.displaySceneId();\n    }\n\n    displaySceneId() {\n        if (process.env.NODE_ENV === \"development\") {\n            this.sceneIdRegion.innerHTML = this.currentScene.id;\n        }\n    }\n\n};\n"],"sourceRoot":""}