{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/ckot/projects/work/isptutorproject_website/common/navbar/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/snackbar/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/database.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/localStorageDB.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/firestoreDB.js","webpack:///./data/homePageData.js","webpack:///./src/index.js","webpack:////home/ckot/projects/work/isptutorproject_website/common/isp-database/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NavBar","this","el","document","querySelector","homeBtn","getElementById","activityTitle","glossaryBtn","glossaryPopup","signOutBtn","signInText","goHome","toggleGlossary","signOutUser","addEventListener","e","homePage","calcHomePage","redirectTo","classList","toggle","localStorage","getItem","window","location","origin","url","allowRefresh","href","reload","console","log","innerHTML","add","clear","title","innerText","toUpperCase","userName","remove","SnackBar","eleID","text","setTimeout","STUDY3","conditionActivities","1","2","Database","dbType","userID","formData","activityKey","decodeJSON","varName","super","classCode","setCredentials","count","data","Promise","all","getTextValue","getActivityData","getCurrHypoTask","getIntialHypoData","getFinalHypoData","then","ccRes","uidRes","rqRes","chtRes","ihRes","fhRes","rqted","currHypoTaskIdx","firstPrediction","initialHypo","secondPrediction","finalHypo","getJSONValue","JSON","stringify","saveJSONValue","retVal","moduleState","selectedArea","index","selectedTopic","selectedVariable","selectedRQ","catch","err","error","getIntValue","pred1","initHypo","pred2","overwrite","resolve","reject","items","setItem","undefined","parseInt","parseFloat","parse","firebaseConfig","apiKey","authDomain","projectId","firebase","initializeApp","store","firestore","userRef","collection","doc","update","usernum","FieldValue","increment","docRef","exists","getUserData","where","FN","LN","MON","DAY","snapshot","size","docs","getNextUserNum","userNum","conditionNum","conditionStr","assign","condition","completedAssignments","set","userData","assignments","activityId","includes","push","state","activityState","merge","delete","activities","id","label","phase","storageInfo","features","implemented","getEleById","loginBtn","registerBtn","loginBackBtn","registerBackBtn","loginForm","loginSubmitBtn","registrationForm","registerSubmitBtn","activityBtnsList","activatePage","pageID","page","querySelectorAll","setUserID","uid","parseActivityLinkData","target","getAttribute","currentActivity","handleActivityHover","handleActivityClick","preventDefault","linkData","indexPage","isImplemented","activity","setAsInactive","active","displayUser","acts","filter","assigned","act","annotated","map","completed","allInactive","idx","findIndex","slice","length","markFirstIncompleteAsActive","li","createElement","btn","type","startsWith","tmp","replace","endsWith","setAttribute","appendChild","parseUserForm","prefix","form","flds","forEach","fld","classcode","trim","fname","lname","bmonth","bday","reset","reportValidity","lookupUserID","loginUser","show","registerUser","DB","homePageURL","schema","db","getDBConnection","initApp"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,sGChF9C,MAAMC,EACT,cACIC,KAAKC,GAAKC,SAASC,cAAc,cACjCH,KAAKI,QAAUF,SAASG,eAAe,mBACvCL,KAAKM,cAAgBJ,SAASG,eAAe,kBAC7CL,KAAKO,YAAcL,SAASG,eAAe,uBAC3CL,KAAKQ,cAAgBN,SAASC,cAAc,0BAC5CH,KAAKS,WAAaP,SAASG,eAAe,mBAC1CL,KAAKU,WAAaR,SAASG,eAAe,gBAC1CL,KAAKW,OAAcX,KAAKW,OAAOpB,KAAKS,MACpCA,KAAKY,eAAiBZ,KAAKY,eAAerB,KAAKS,MAC/CA,KAAKa,YAAcb,KAAKa,YAAYtB,KAAKS,MACzCA,KAAKI,QAAQU,iBAAiB,QAASd,KAAKW,QAC5CX,KAAKO,YAAYO,iBAAiB,QAASd,KAAKY,gBAChDZ,KAAKS,WAAWK,iBAAiB,QAASd,KAAKa,aAGnD,OAAOE,GACH,IAAIC,EAAWhB,KAAKiB,eACpBjB,KAAKkB,WAAWF,GAGpB,eAAeD,GACXf,KAAKQ,cAAcW,UAAUC,OAAO,UAGxC,eACI,IAAIJ,EAAWK,aAAaC,QAAQ,YAIpC,OAHI,OAASN,IACTA,EAAWO,OAAOC,SAASC,OAAS,KAEjCT,EAGX,WAAWU,EAAKC,GAAa,GAERJ,OAAOC,SAASI,OAASF,EAG/BC,EACPJ,OAAOC,SAASK,SAEhBC,QAAQC,IAAI,iCAJZR,OAAOC,SAASI,KAAOF,EAQ/B,YAAYX,GACRf,KAAKU,WAAWsB,UAAY,GAC5BhC,KAAKU,WAAWS,UAAUc,IAAI,aAC9BjC,KAAKS,WAAWU,UAAUc,IAAI,aAC9B,IAAIjB,EAAWhB,KAAKiB,eAEpBI,aAAaa,QACblC,KAAKkB,WAAWF,GAAU,GAG9B,qBAAqBmB,GACjBnC,KAAKM,cAAc8B,UAAYD,EAAME,cAIzC,YAAYC,GACRtC,KAAKU,WAAWsB,UAAY,YAAYM,EACxCtC,KAAKU,WAAWS,UAAUoB,OAAO,aACjCvC,KAAKS,WAAWU,UAAUoB,OAAO,c,KC/DlC,MAAMC,EACT,YAAYC,GACRzC,KAAKC,GAAKC,SAASG,eAAeoC,GAAS,YAG/C,KAAKC,GACG,MAAM,IACN1C,KAAKC,GAAG+B,UAAYU,EAGpB1C,KAAKC,GAAGkB,UAAUc,IAAI,QAEtBU,WAAW,KAEP3C,KAAKC,GAAGkB,UAAUoB,OAAO,SAC1B,OCjBR,MAAMK,EAAS,CAClBC,oBAAqB,CACjBC,EAAG,CACC,cACA,YACA,aACA,eACA,YACA,sBACA,aACA,gBAEJC,EAAG,CACC,cACA,YACA,aACA,cACA,YACA,sBACA,aACA,kBAML,MAAMC,EACT,YAAYC,GACRjD,KAAKiD,OAASA,EAGlB,eAAeC,GACXlD,KAAKkD,OAASA,EAGlB,aAAaC,IAIb,UAAUD,IAIV,aAAaC,IAIb,eAIA,gBAAgBC,EAAaC,GAAa,IAI1C,gBAAgBD,EAAa3D,IAI7B,aAIA,mBAIA,sBAIA,oBAIA,UAAU6D,EAAStE,IAInB,cAAcsE,EAAS7D,IAIvB,aAAa6D,IAIb,YAAYA,IAIZ,cAAcA,IAId,aAAaA,IAIb,aAAaA,KC/FV,MAAM,UAAuBN,EAEhC,cACIO,QAGJ,eAAeC,EAAWN,GACtBK,MAAME,eAAeD,EAAWN,GAOpC,cACIpB,QAAQ4B,MAAM,wBACd,IAAIC,EAAO,GACX,OAAOC,QAAQC,IAAI,CACf7D,KAAK8D,aAAa,aAClB9D,KAAK8D,aAAa,UAClB9D,KAAK+D,gBAAgB,SACrB/D,KAAKgE,kBACLhE,KAAKiE,oBACLjE,KAAKkE,qBACNC,KAAK,EAAEC,EAAOC,EAAQC,EAAOC,EAAQC,EAAOC,MAC3Cd,EAAKH,UAAYY,EACjBT,EAAKT,OAASmB,EACdV,EAAKe,MAAQJ,EACTC,IACAZ,EAAKgB,gBAAkBJ,GAEvBC,IACAb,EAAKiB,gBAAkBJ,EAAMI,gBAC7BjB,EAAKkB,YAAcL,EAAMK,aAEzBJ,IACAd,EAAKmB,iBAAmBL,EAAMK,iBAC9BnB,EAAKoB,UAAYN,EAAMM,WAEpBpB,IAIf,gBAAgBP,EAAaC,GAAa,GACtC,OAAOrD,KAAKgF,aAAa5B,GACxBe,KAAMR,GACCA,IAASN,EACF4B,KAAKC,UAAUvB,GAEfA,GAKnB,gBAAgBP,EAAa3D,GACzB,OAAOO,KAAKmF,cAAc/B,EAAa3D,GAG3C,YACI,IAAI2F,EAAS,KACb,OAAOpF,KAAK+D,gBAAgB,SAC3BI,KAAMO,IAGCU,EADAV,GAIS,CACLW,YAAa,CACTC,aAAc,CAAEC,MAAO,GACvBC,cAAe,CAAED,MAAO,GACxBE,iBAAkB,CAAEF,MAAO,GAC3BG,WAAY,CAAEH,MAAO,KAK1BH,IAEVO,MAAOC,IACJ9D,QAAQ+D,MAAMD,GACPR,IAIf,kBACI,OAAOpF,KAAK8F,YAAY,mBAG5B,oBACI,IAAInC,EAAO,GACX,OAAO3D,KAAK8D,aAAa,mBACpBK,KAAM4B,GAEC,OAASA,GACTpC,EAAKiB,gBAAkBmB,EAChB/F,KAAKgF,aAAa,iBAEzBrB,EAAKiB,gBAAkB,KAChB,OAGdT,KAAM6B,IAEHrC,EAAKkB,YAAcmB,EACZrC,IAEVgC,MAAOC,IACJ9D,QAAQ+D,MAAMD,GACPjC,IAInB,mBACI,IAAIA,EAAO,GACX,OAAO3D,KAAK8D,aAAa,oBACpBK,KAAM8B,GAEC,OAASA,GACTtC,EAAKmB,iBAAmBmB,EACjBjG,KAAKgF,aAAa,eAEzBrB,EAAKmB,iBAAmB,KACjB,OAGdX,KAAMY,IAEHpB,EAAKoB,UAAYA,EACVpB,IAEVgC,MAAOC,IACJ9D,QAAQ+D,MAAMD,GACPjC,IAInB,UAAUlE,EAAQyG,GAAU,GAExB,OAAO,IAAItC,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAK,IAAK9G,EAAKN,KAAUP,OAAO4H,MAAM5G,GAClC4B,aAAaiF,QAAQhH,EAAKN,GAE9BmH,GAAQ,GACV,MAAON,GACLO,EAAOP,MAKnB,UAAUvC,EAAStE,GACf,OAAO,IAAI4E,QAAQ,CAACuC,EAASC,KACzB,IACID,EAAQ9E,aAAaiF,QAAQhD,EAAStE,IACxC,MAAM4G,GACJQ,EAAOR,MAKnB,cAActC,EAAS7D,GACnB,OAAO,IAAImE,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAIpH,EAAQiG,KAAKC,UAAUzF,GAC3B0G,EAAQ9E,aAAaiF,QAAQhD,EAAStE,IACxC,MAAM4G,GACJQ,EAAOR,MAKnB,aAAatC,GACT,OAAO,IAAIM,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAIpH,EAAQqC,aAAaC,QAAQgC,QAC7BiD,IAAcvH,GACdmH,EAAQnH,GAGRmH,EADA,SAAWnH,GAKjB,MAAM4G,GACJQ,EAAOR,MAKnB,YAAYtC,GACR,IAAI8B,EACJ,OAAO,IAAIxB,QAAQ,CAACuC,EAASC,KACzB,IACG,IAAIpH,EAAQqC,aAAaC,QAAQgC,GAC5BtE,IACAoG,EAASoB,SAASxH,EAAO,KAE7BmH,EAAQf,GACV,MAAMQ,GACJQ,EAAOR,MAKnB,cAActC,GACV,IAAI8B,EACJ,OAAO,IAAIxB,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAIpH,EAAQqC,aAAaC,QAAQgC,GAC7BtE,IACAoG,EAASqB,WAAWzH,IAExBmH,EAAQf,GACV,MAAMQ,GACJQ,EAAOR,MAKnB,aAAatC,GACT,IAAI8B,EACJ,OAAO,IAAIxB,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAIpH,EAAQqC,aAAaC,QAAQgC,GAC7BtE,IACAoG,EAASpG,GAEbmH,EAAQnH,GACV,MAAM4G,GACJQ,EAAOR,MAKnB,aAAatC,GACT,OAAO,IAAIM,QAAQ,CAACuC,EAASC,KACzB,IACI,IAAIpH,EAAQqC,aAAaC,QAAQgC,GAC7BtE,IACAA,EAAQiG,KAAKyB,MAAM1H,IAEvBmH,EAAQnH,GACV,MAAM4G,GACJQ,EAAOR,OCtPvB,MAAMe,EAAiB,CACnBC,OAAQ,0CACRC,WAAY,2BACZC,UAAW,YAGR,MAAM,UAAoB9D,EAE7B,cACIO,MAAM,aACNwD,SAASC,cAAcL,GACvB3G,KAAKiH,MAAQF,SAASG,YAG1B,eAAehE,GACXK,MAAME,eAAeP,GACrBlD,KAAKmH,QAAUnH,KAAKiH,MAAMG,WAAW,WAAWC,IAAInE,GAGxD,iBACI,OAAOlD,KAAKiH,MAAMG,WAAW,WAAWC,IAAI,cAAcC,OAAO,CAC7DC,QAASR,SAASG,UAAUM,WAAWC,UAAU,KAClDtD,KAAK,IAAMnE,KAAKiH,MAAMG,WAAW,WAAWC,IAAI,cAAczI,OAChEuF,KAAMkD,GACIA,EAAI1D,OAAO4D,SAErB5B,MAAOE,GAAU/D,QAAQ+D,MAAMA,IAkBpC,UAAU3C,GACN,IAAIwE,EAAS1H,KAAKiH,MAAMG,WAAW,WAAWC,IAAInE,GAClD,OAAOwE,EAAO9I,MACbuF,KAAMkD,KACEA,EAAIM,SAGL3H,KAAKmH,QAAUO,EACR1H,KAAK4H,gBAKxB,aAAazE,GAET,OAAOnD,KAAKiH,MAAMG,WAAW,WACxBS,MAAM,YAAa,KAAM1E,EAASK,WAClCqE,MAAM,KAAa,KAAM1E,EAAS2E,IAClCD,MAAM,KAAa,KAAM1E,EAAS4E,IAClCF,MAAM,MAAa,KAAM1E,EAAS6E,KAClCH,MAAM,MAAa,KAAM1E,EAAS8E,KAClCrJ,MACAuF,KAAM+D,IAEH,GAAI,IAAMA,EAASC,KACf,OAAO,EACJ,CACHrG,QAAQC,IAAI,gBACZ,IAAImB,GAAS,EACTS,EAAOuE,EAASE,KAAK,GAAGzE,OAM5B,OALIA,EAAKT,OACLA,EAASS,EAAKT,OAEdpB,QAAQC,IAAI,kBAAmB4B,GAE5BT,KAGdyC,MAAOE,IACJ/D,QAAQC,IAAI8D,IACL,IAInB,aAAa1C,GACT,IAAID,GAAS,EAEb,OADApB,QAAQC,IAAI,oBACL/B,KAAKqI,iBACXlE,KAAMmE,IAEH,IAAIC,EAAgBD,EAAU,EAAK,EAC/BE,EAAe,GAAGD,EACtBrF,EAAS,OAAOoF,KAAWC,IACR3F,EAAOC,oBAAoB2F,GAA9C,IACI7E,EAAOlF,OAAOgK,OAAOtF,EAAU,CAC/BD,OAAQA,EACRwF,UAAWF,EACXG,qBAAsB1D,KAAKC,UAAU,MAGzC,OAAOlF,KAAKiH,MAAMG,WAAW,WAAWC,IAAInE,GAAQ0F,IAAIjF,KAE3DQ,KAAK,IACKjB,GAEVyC,MAAOE,IACJ/D,QAAQ+D,MAAMA,IACP,IAIf,cAEI,IAAIgD,GAAW,EACf,OAAO7I,KAAKmH,QAAQvI,MACnBuF,KAAMkD,IACH,GAAIA,EAAIM,OAAQ,CACZ,IAAIhE,EAAO0D,EAAI1D,OACfkF,EAAW,CACP3F,OAAQS,EAAKT,OACbwF,UAAW/E,EAAK+E,UAChBI,YAAalG,EAAOC,oBAAoBc,EAAK+E,WAC7CC,qBAAsB1D,KAAKyB,MAAM/C,EAAKgF,uBAI9C,OAAOE,IAIf,wBAAwBE,GAEpB,OAAO/I,KAAKmH,QAAQvI,MACnBuF,KAAMkD,IACH,IAAI1D,EAAO0D,EAAI1D,OACf,OAAOsB,KAAKyB,MAAM/C,EAAKgF,wBAE1BxE,KAAMwE,IAEEA,EAAqBK,SAASD,IAC/BJ,EAAqBM,KAAKF,GAGvB/I,KAAKmH,QAAQG,OAAO,CACvBqB,qBAAsB1D,KAAKC,UAAUyD,OAKjD,mBAIA,gBAAgBvF,EAAaC,GAAW,GACpC,OAAOrD,KAAKmH,QAAQvI,MACnBuF,KAAMkD,GAAQA,EAAI1D,QAClBQ,KAAM0E,IAEH,GADA/G,QAAQC,IAAI,WAAY8G,IACnBA,EACD,OAAO,KAEX,IAAIlF,EAAOkF,EAASzF,GACpB,OAAKO,EAGDA,GAAQN,EACD4B,KAAKyB,MAAM/C,GAEXA,EALA,OAOZgC,MAAOE,IACN/D,QAAQ+D,MAAMA,GACP,OAIf,gBAAgBzC,EAAa8F,GACzB,IAAIC,EAAgBlE,KAAKC,UAAUgE,GACnC,OAAOlJ,KAAKmH,QAAQG,OAAO,CACvB,CAAClE,GAAc+F,IAElBhF,KAAK,KACFrC,QAAQC,IAAI,kCACb4D,MAAOE,IACN/D,QAAQ+D,MAAMA,KAiBtB,UAAUpG,EAAQyG,GAAU,GAExB,OAAOlG,KAAKmH,QAAQyB,IAAInJ,EAAQ,CAAC2J,OAAQlD,IAG7C,aAAazG,GACT,OAAOO,KAAKmH,QAAQG,OAAO7H,GAG/B,YAAY6D,GACR,OAAOtD,KAAKmH,QAAQG,OAAO,CACvB,CAAChE,GAAUyD,SAASG,UAAUM,WAAW6B,YC3N9C,MAAMC,EAAa,CACtB,CACIC,GAAI,cACJC,MAAO,8BACPC,MAAO,eACPC,YAAa,CACTH,GAAI,cACJjK,IAAK,OACLqK,SAAU,mBAEdjI,IAAK,GACLkI,aAAa,GAEjB,CACIL,GAAI,YACJC,MAAO,0CACPC,MAAO,eACPC,YAAa,CACTH,GAAI,YACJjK,IAAK,YACLqK,SAAU,IAEdjI,IAAK,gCACLkI,aAAa,GAEjB,CACIL,GAAI,aACJC,MAAO,kCACPC,MAAO,WACPC,YAAa,CACTH,GAAI,aACJjK,IAAK,QACLqK,SAAU,sCAEdjI,IAAK,sBACLkI,aAAa,GAEjB,CACIL,GAAI,aACJC,MAAO,kDACPC,MAAO,WACPC,YAAa,CACTH,GAAI,aACJjK,IAAK,QACLqK,SAAU,sCAEdjI,IAAK,yBACLkI,aAAa,GAEjB,CACIL,GAAI,YACJC,MAAO,uCACPC,MAAO,WACPC,YAAa,CACTH,GAAI,YACJjK,IAAI,QACJqK,SAAU,sBAEdjI,IAAK,yBACLkI,aAAa,GAEjB,CACIL,GAAI,WACJC,MAAO,qCACPC,MAAO,YACPC,YAAa,CACTH,GAAI,WACJjK,IAAK,WACLqK,SAAU,yBAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,4BACJC,MAAO,uCACPC,MAAO,OACPC,YAAa,CACTH,GAAI,4BACJjK,IAAK,cACLqK,SAAU,wCAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,0BACJC,MAAO,wCACPC,MAAO,OACPC,YAAa,CACTH,GAAI,0BACJjK,IAAK,cACLqK,SAAU,2BAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,yBACJC,MAAO,2CACPC,MAAO,OACPC,YAAa,CACTH,GAAI,yBACJjK,IAAK,cACLqK,SAAU,sCAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,kBACJC,MAAO,gCACPC,MAAO,OACPC,YAAa,CACTH,GAAI,kBACJjK,IAAK,YACLqK,SAAU,qCAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,eACJC,MAAO,oBACPC,MAAO,OACPC,YAAa,CACTH,GAAI,eACJjK,IAAK,SACLqK,SAAU,uBAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,cACJC,MAAO,oBACPC,MAAO,OACPC,YAAa,CACTH,GAAI,cACJjK,IAAK,SACLqK,SAAU,sBAEdjI,IAAK,iBACLkI,aAAa,GAEjB,CACIL,GAAI,YACJC,MAAO,kCACPC,MAAO,sBACPC,YAAa,CACTH,GAAI,YACJjK,IAAK,gBACLqK,SAAU,IAEdjI,IAAK,kBACLkI,aAAa,GAEjB,CACIL,GAAI,sBACJC,MAAO,yCACPC,MAAO,gBACPC,YAAa,CACTH,GAAI,sBACJjK,IAAK,sBACLqK,SAAU,IAEdjI,IAAK,gCACLkI,aAAa,GAEjB,CACIL,GAAI,aACJC,MAAO,wCACPC,MAAO,gBACPC,YAAa,CACTH,GAAI,aACJjK,IAAK,aACLqK,SAAU,IAEdjI,IAAK,iCACLkI,aAAa,GAEjB,CACIL,GAAI,eACJC,MAAO,+BACPC,MAAO,gBACPC,YAAa,CACTH,GAAI,eACJjK,IAAK,OACLqK,SAAU,oBAEdjI,IAAK,GACLkI,aAAa,ICtLrB,SAASC,EAAWpH,GAChB,OAAOvC,SAASG,eAAeoC,GAGnC,IAAI,EAAQ,EAAI,EAAQ,EAGxB,MAAMqH,EAAoBD,EAAW,gBAC/BE,EAAoBF,EAAW,mBAC/BG,EAAoBH,EAAW,iBAC/BI,EAAoBJ,EAAW,iBAC/BK,EAAoBL,EAAW,cAC/BM,EAAoBN,EAAW,gBAC/BO,EAAoBP,EAAW,qBAC/BQ,EAAoBR,EAAW,uBAC/BS,EAAoBT,EAAW,sBAErC,SAASU,EAAaC,GAClB,IAAK,IAAIC,KAAQvK,SAASwK,iBAAiB,SACnCD,EAAKlB,KAAOiB,EACZC,EAAKtJ,UAAUc,IAAI,UAEnBwI,EAAKtJ,UAAUoB,OAAO,UASlC,SAASoI,EAAUC,GACf,EAASA,EACTvJ,aAAaiF,QAAQ,SAAUsE,GAGnC,SAASC,EAAsB9J,GAC3B,MAAO,CACHW,IAAKX,EAAE+J,OAAOC,aAAa,YAC3BC,gBAAiB/F,KAAKyB,MAAM3F,EAAE+J,OAAOC,aAAa,mBAI1D,SAASE,EAAoBlK,GAEzB,IAAI4C,EAAOkH,EAAsB9J,GACjCe,QAAQC,IAAI,wBACKhB,EAAE+J,oBACZnH,EAAKjC,6BACOuD,KAAKC,UAAUvB,EAAKqH,gBAAiB,KAAM,YAIlE,SAASE,EAAoBnK,GACzBA,EAAEoK,iBACF,IAAIC,EAAWP,EAAsB9J,GACrCM,aAAaiF,QAAQ,kBAAmBrB,KAAKC,UAAUkG,EAASJ,kBAChEzJ,OAAOC,SAASI,KAAOwJ,EAAS1J,IAGpC,SAAS2J,EAAUtK,GACXA,GACAA,EAAEoK,iBAENZ,EAAa,cAmBjB,MAAMe,EAAiBC,GAAaA,EAAS3B,YAEvC4B,EAAiBD,GAAa9M,OAAOgK,OAAO,GAAI8C,EAAU,CAAEE,QAAQ,IAe1E,SAASzK,EAAS6H,GACd0B,EAAa,aACb,EAAOmB,YAAY,GACnB5J,QAAQC,IAAI8G,GAEZyB,EAAiBtI,UAAY,GAC7B,IAOI2J,EAPA/B,EAAcN,EAAWsC,OAAON,GAChCO,EAAWjC,EACEgC,OAAQE,GAAQjD,EAASC,YAAYE,SAAS8C,EAAIvC,KAE/DwC,EAAYF,EAASG,IAAKF,GAAQrN,OAAOgK,OAAO,GAAIqD,EAAK,CACrDG,UAAWpD,EAASF,qBAAqBK,SAAS8C,EAAIvC,OAI1DoC,EA5BR,SAAqCrC,GACjC,IAAI4C,EAAc5C,EAAW0C,IAAIR,GAC7BW,EAAMD,EAAYE,UAAWrO,IAAOA,EAAEkO,WAC1C,OAAK,IAAME,EACAD,EAEJ,IACAA,EAAYG,MAAM,EAAGF,IAVTZ,EAWHW,EAAYC,GAXI1N,OAAOgK,OAAO,GAAI8C,EAAU,CAAEE,QAAQ,QAY/DS,EAAYG,MAAMF,EAAM,EAAGD,EAAYI,SAZ5B,IAACf,EA+BRgB,CAA4BR,GAKvCjK,QAAQC,IAAIuH,GACZxH,QAAQC,IAAI6H,GACZ9H,QAAQC,IAAI8J,GACZ/J,QAAQC,IAAIgK,GACZjK,QAAQC,IAAI,OAAQ4J,GACpB,IAAK,IAAIG,KAAOH,EAAM,CAClB,IAAIjK,EACA8K,EAAKtM,SAASuM,cAAc,MAC5BC,EAAMxM,SAASuM,cAAc,UAQjC,GAPKX,EAAIL,QACLiB,EAAIvL,UAAUc,IAAI,YAEtByK,EAAIvL,UAAUc,IAAI,mBAClByK,EAAIvL,UAAUc,IAAI,OAClByK,EAAIC,KAAO,SACXD,EAAI1K,UAAY8J,EAAItC,MAChBsC,EAAIpK,IAAIkL,WAAW,QACnBlL,EAAMoK,EAAIpK,QACP,CAKH,IAAImL,EAAMxL,aAAaC,QAAQ,YAC/BuL,EAAMA,EAAIC,QAAQ,aAAc,IAC5BD,EAAIE,SAAS,OACbF,EAAMA,EAAIR,MAAM,GAAI,IAExB3K,EAAM,GAAGmL,IAAMf,EAAIpK,MAEvBgL,EAAIM,aAAa,gBAAiB/H,KAAKC,UAAU4G,EAAIpC,cACrDgD,EAAIM,aAAa,WAAYtL,GAC7BgL,EAAI5L,iBAAiB,QAASoK,GAE9BwB,EAAI5L,iBAAiB,YAAamK,GAClCuB,EAAGS,YAAYP,GACfpC,EAAiB2C,YAAYT,IA8BrC,SAASU,EAAcC,EAAQC,GAC3B,IAEIC,EAAO,GAFI,CAAC,YAAa,QAAS,QAAS,SAAU,QAGhDC,QAASC,GAAQF,EAAKE,GAAO,GAAGJ,KAAUI,KACnD,IAAI/J,EAAYqG,EAAWwD,EAAKG,WAAWxO,MAAMyO,OAAOpL,cAYxD,MAXI,KAAOmB,IACPA,EAAY,UAEH,CACT,UAAaA,EACb,GAAOqG,EAAWwD,EAAKK,OAAO1O,MAAMyO,OAAOpL,cAC3C,GAAMwH,EAAWwD,EAAKM,OAAO3O,MAAMyO,OAAOpL,cAC1C,IAAOwH,EAAWwD,EAAKO,QAAQ5O,MAAMqD,cACrC,IAAOwH,EAAWwD,EAAKQ,MAAM7O,OAWrC8K,EAAShJ,iBAAiB,SAxI1B,SAAmBC,GACXA,GACAA,EAAEoK,iBAENZ,EAAa,cACbL,EAAU4D,WAoId/D,EAAYjJ,iBAAiB,SAjJ7B,SAA0BC,GAClBA,GACAA,EAAEoK,iBAENZ,EAAa,qBACbH,EAAiB0D,WA6IrB9D,EAAalJ,iBAAiB,QAASuK,GACvCpB,EAAgBnJ,iBAAiB,QAASuK,GAG1ClB,EAAerJ,iBAAiB,QAASC,IAErC,GADAA,EAAEoK,iBACEjB,EAAU6D,iBAAkB,CAC5B,IAAI5K,EAAW+J,EAAc,SAE7B,EAAGc,aAAa7K,GACfgB,KAAMyG,KACGA,IACF9I,QAAQC,IAAI,mBAAmB6I,GAC/BD,EAAUC,GACH,EAAGqD,UAAU,KAI3B9J,KAAM0E,IACCA,EACA7H,EAAS6H,IAET/G,QAAQ+D,MAAM,cACd,EAASqI,KAAK,qBAM9B7D,EAAkBvJ,iBAAiB,QAASC,IAExC,GADAA,EAAEoK,iBACEf,EAAiB2D,iBAAkB,CACnC,IAAI5K,EAAW+J,EAAc,YAE7B,EAAGc,aAAa7K,GACfgB,KAAMyG,GAEGA,GACF,EAASsD,KAAK,2BACdpM,QAAQC,IAAI,YAAY6I,sBACjB,GAEA,EAAGuD,aAAahL,IAG9BgB,KAAMyG,GACCA,GACAD,EAAUC,GAEH,EAAGqD,UAAU,KAEpB,EAASC,KAAK,2BACP,IAEZ/J,KAAM0E,IACDA,EACA7H,EAAS6H,GAET,EAASqF,KAAK,oBAO9B,WACI,EAAS,IAAInO,EACb,EAAW,IAAIyC,EAEf,IAAI4L,EAAK,YAELC,EAAc9M,OAAOC,SAASI,KAClCP,aAAaiF,QAAQ,WAAY+H,GACjChN,aAAaiF,QAAQ,WAAY8H,GACjC,ECrSG,SAAyBnL,EAAQqL,GACpC,IAAIC,EACJ,OAAOtL,GACH,IAAK,YACDsL,EAAK,IAAI,EACT,MACJ,QACIA,EAAK,IAAI,EAEjB,OAAOA,ED4RFC,CAAgBJ,GACrBtM,QAAQC,IAAI,GACZR,OAAOgN,GAAK,EArQZ,EAASlN,aAAaC,QAAQ,UAuQ1B,EACA,EAAG2M,UAAU,GACZ9J,KAAM0E,IACCA,EACA7H,EAAS6H,GAET,EAASqF,KAAK,iBAItB7C,IAIRoD","file":"homepage.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import \"./index.css\";\n\nexport class NavBar {\n    constructor() {\n        this.el = document.querySelector(\"nav.navbar\");\n        this.homeBtn = document.getElementById(\"navbar_home_btn\");\n        this.activityTitle = document.getElementById(\"activity_title\");\n        this.glossaryBtn = document.getElementById(\"navbar_glossary_btn\");\n        this.glossaryPopup = document.querySelector(\".navbar-glossary-popup\");\n        this.signOutBtn = document.getElementById(\"sign_out_button\");\n        this.signInText = document.getElementById(\"sign_in_text\");\n        this.goHome      = this.goHome.bind(this);\n        this.toggleGlossary = this.toggleGlossary.bind(this);\n        this.signOutUser = this.signOutUser.bind(this);\n        this.homeBtn.addEventListener('click', this.goHome);\n        this.glossaryBtn.addEventListener(\"click\", this.toggleGlossary);\n        this.signOutBtn.addEventListener(\"click\", this.signOutUser);\n    }\n\n    goHome(e) {\n        let homePage = this.calcHomePage();\n        this.redirectTo(homePage);\n    }\n\n    toggleGlossary(e) {\n        this.glossaryPopup.classList.toggle(\"hidden\");\n    }\n\n    calcHomePage() {\n        let homePage = localStorage.getItem(\"homepage\");\n        if (null === homePage) {\n            homePage = window.location.origin + \"/\";\n        }\n        return homePage;\n    }\n\n    redirectTo(url, allowRefresh=false) {\n        // prevent refresh if already on this page\n        let isSamePage = window.location.href === url;\n        if (!isSamePage) {\n            window.location.href = url;\n        } else if (allowRefresh) {\n            window.location.reload();\n        } else {\n            console.log(\"same url but refresh disabled\");\n        }\n    }\n\n    signOutUser(e) {\n        this.signInText.innerHTML = \"\";\n        this.signInText.classList.add(\"invisible\");\n        this.signOutBtn.classList.add(\"invisible\");\n        let homePage = this.calcHomePage();\n        // this does the actual signing out\n        localStorage.clear();\n        this.redirectTo(homePage, true);\n    }\n\n    displayActivityTitle(title) {\n        this.activityTitle.innerText = title.toUpperCase();\n    }\n\n\n    displayUser(userName) {\n        this.signInText.innerHTML = `Welcome, ${userName}`;\n        this.signInText.classList.remove(\"invisible\");\n        this.signOutBtn.classList.remove(\"invisible\");\n    }\n};\n","import \"./index.css\";\n\n\nexport class SnackBar {\n    constructor(eleID) {\n        this.el = document.getElementById(eleID || \"snackbar\");\n    }\n\n    show(text) {\n        if (typeof(text) !== \"undefined\" && null !== text) {\n            this.el.innerHTML = text;\n            // Add the \"show\" class to DIV\n            // this.el.className = \"show\";\n            this.el.classList.add(\"show\");\n            // After 3 seconds, remove the show class from DIV\n            setTimeout(() => {\n                // snackbar.className = snackbar.className.replace(\"show\", \"\");\n                this.el.classList.remove(\"show\");\n            }, 3000);\n        }\n    }\n}\n","\nexport const STUDY3 = {\n    conditionActivities: {\n        1: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEoneDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ],\n        2: [\n            \"matsPreTest\",\n            \"diPreTest\",\n            \"rqSelectBL\",\n            \"hypoWEbiDir\",\n            \"diInstrGR\",\n            \"diCrystalGrowthTest\",\n            \"diPostTest\",\n            \"matsPostTest\"\n        ]\n    }\n};\n\n// abstract class - interface\nexport class Database {\n    constructor(dbType) {\n        this.dbType = dbType;\n    }\n\n    setCredentials(userID) {\n        this.userID = userID;\n    }\n\n    lookupUserID(formData) {\n\n    }\n\n    loginUser(userID) {\n\n    }\n\n    registerUser(formData) {\n\n    }\n\n    getUserData() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n\n    }\n\n    setActivityData(activityKey, object) {\n\n    }\n\n    getRQData() {\n\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getInitialHypoData() {\n\n    }\n\n    getFinalHypoData() {\n\n    }\n\n    saveValue(varName, value) {\n\n    }\n\n    saveJSONValue(varName, object) {\n\n    }\n\n    getBoolValue(varName) {\n\n    }\n\n    getIntValue(varName) {\n\n    }\n\n    getFloatValue(varName) {\n\n    }\n\n    getTextValue(varName) {\n\n    }\n\n    getJSONValue(varName) {\n\n    }\n\n};\n\n\n","\nimport { Database } from \"./database\";\n\n// NOTE: this API must use promises to be compatible with any db\n// we may be using, which may be either sync or async\nexport class LocalStorageDB extends Database {\n\n    constructor() {\n        super();\n    }\n\n    setCredentials(classCode, userID) {\n        super.setCredentials(classCode, userID);\n        // return Promise.all([\n        // this.saveValue(\"classCode\", classCode),\n        // this.saveValue(\"userID\", userID),\n        // ]).then(([result1, result2]) => { });\n    }\n\n    getUserData() {\n        console.count(\"getUserData() called\");\n        let data = {};\n        return Promise.all([\n            this.getTextValue(\"classCode\"),\n            this.getTextValue(\"userID\"),\n            this.getActivityData(\"rqted\"),\n            this.getCurrHypoTask(),\n            this.getIntialHypoData(),\n            this.getFinalHypoData()\n        ]).then(([ccRes, uidRes, rqRes, chtRes, ihRes, fhRes]) => {\n            data.classCode = ccRes;\n            data.userID = uidRes;\n            data.rqted = rqRes;\n            if (chtRes) {\n                data.currHypoTaskIdx = chtRes\n            }\n            if (ihRes) {\n                data.firstPrediction = ihRes.firstPrediction;\n                data.initialHypo = ihRes.initialHypo;\n            }\n            if (fhRes) {\n                data.secondPrediction = fhRes.secondPrediction;\n                data.finalHypo = fhRes.finalHypo;\n            }\n            return data;\n        });\n    }\n\n    getActivityData(activityKey, decodeJSON = true) {\n        return this.getJSONValue(activityKey)\n        .then((data) => {\n            if (data && !decodeJSON) {\n                return JSON.stringify(data);\n            } else {\n                return data;\n            }\n        });\n    }\n\n    setActivityData(activityKey, object) {\n        return this.saveJSONValue(activityKey, object);\n    }\n\n    getRQData() {\n        let retVal = null;\n        return this.getActivityData(\"rqted\")\n        .then((rqted) => {\n            // console.log(rqted);\n            if (rqted) {\n                retVal = rqted;\n            } else {\n                // if the rq isn't selected hard-code to crystal growth\n                retVal = {\n                    moduleState: {\n                        selectedArea: { index: 1 },\n                        selectedTopic: { index: 1 },\n                        selectedVariable: { index: 1 },\n                        selectedRQ: { index: 1 }\n                    }\n                };\n            }\n            // console.log(retVal);\n            return retVal;\n        })\n        .catch((err) => {\n            console.error(err);\n            return retVal;\n        });\n    }\n\n    getCurrHypoTask() {\n        return this.getIntValue(\"currHypoTaskIdx\")\n    }\n\n    getIntialHypoData() {\n        let data = {};\n        return this.getTextValue(\"firstPrediction\")\n            .then((pred1) => {\n                // console.log(`getInitialHypoData():firstPrediction ${pred1}`);\n                if (null !== pred1) {\n                    data.firstPrediction = pred1;\n                    return this.getJSONValue(\"initialHypo\");\n                } else {\n                    data.firstPrediction = null;\n                    return null;\n                }\n            })\n            .then((initHypo) => {\n                // console.log(`getInitialHypoData():initHypo ${initHypo}`);\n                data.initialHypo = initHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    getFinalHypoData() {\n        let data = {};\n        return this.getTextValue(\"secondPrediction\")\n            .then((pred2) => {\n                // console.log(`getFinalHypoData():secondPrediction ${pred2}`)\n                if (null !== pred2) {\n                    data.secondPrediction = pred2;\n                    return this.getJSONValue(\"finalHypo\");\n                } else {\n                    data.secondPrediction = null;\n                    return null\n                }\n            })\n            .then((finalHypo) => {\n                // console.log(`getFinalHypoData():finalHypo ${finalHypo}`);\n                data.finalHypo = finalHypo;\n                return data;\n            })\n            .catch((err) => {\n                console.error(err);\n                return data;\n            });\n    }\n\n    setValues(object, overwrite=false) {\n        // overwrite param is ignored, as it is specific to firestore\n        return new Promise((resolve, reject) => {\n            try {\n                for (let [key, value] of Object.items(object)) {\n                    localStorage.setItem(key, value);\n                }\n                resolve(true);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    saveValue(varName, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        })\n    }\n\n    saveJSONValue(varName, object) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = JSON.stringify(object);\n                resolve(localStorage.setItem(varName, value));\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getBoolValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (undefined === value) {\n                    resolve(value);\n                }\n                if (\"true\" === value) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getIntValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n               let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseInt(value, 10);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getFloatValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = parseFloat(value);\n                }\n                resolve(retVal);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n\n    getTextValue(varName) {\n        let retVal;\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    retVal = value;\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    };\n\n    getJSONValue(varName) {\n        return new Promise((resolve, reject) => {\n            try {\n                let value = localStorage.getItem(varName);\n                if (value) {\n                    value = JSON.parse(value);\n                }\n                resolve(value);\n            } catch(err) {\n                reject(err);\n            }\n        });\n    }\n};\n\n// let db = new Database(\"BOGUS_CLASS\", \"BOGUS_STUDENT\");\n\n","import { STUDY3, Database } from \"./database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7zIk-8V20QqJNSs0cAV0uNL3qjeqLMdM\",\n    authDomain: \"isptutor.firebaseapp.com\",\n    projectId: \"isptutor\"\n};\n\nexport class FirestoreDB extends Database {\n\n    constructor() {\n        super(\"firestore\");\n        firebase.initializeApp(firebaseConfig);\n        this.store = firebase.firestore();\n    }\n\n    setCredentials(userID) {\n        super.setCredentials(userID);\n        this.userRef = this.store.collection(\"STUDY_3\").doc(userID);\n    }\n\n    getNextUserNum() {\n        return this.store.collection(\"STUDY_3\").doc(\"study_data\").update({\n            usernum: firebase.firestore.FieldValue.increment(1)\n        }).then(() => this.store.collection(\"STUDY_3\").doc(\"study_data\").get())\n        .then((doc) => {\n            return doc.data().usernum;\n        })\n        .catch((error) => console.error(error));\n    }\n\n    // loginUser(classCode, userID) {\n    //     let retVal;\n    //     return this.store.collection(\"STUDY_3\")\n    //         .where(\"classCode\", \"==\", classCode)\n    //         .where(\"userID\", \"==\", userID)\n    //         .get()\n    //         .then((snapshot) => {\n    //             if (1 !== snapshot.size) {\n    //                 return false;\n    //             }\n    //             this.userRef = snapshot.docs[0];\n    //             return true;\n    //         })\n    // }\n\n    loginUser(userID) {\n        let docRef = this.store.collection(\"STUDY_3\").doc(userID);\n        return docRef.get()\n        .then((doc) => {\n            if (!doc.exists) {\n                return false;\n            } else {\n                this.userRef = docRef;\n                return this.getUserData()\n            }\n        });\n    }\n\n    lookupUserID(formData) {\n        // returns userID (truthy) or false\n        return this.store.collection(\"STUDY_3\")\n            .where(\"classCode\", \"==\", formData.classCode)\n            .where(\"FN\",        \"==\", formData.FN)\n            .where(\"LN\",        \"==\", formData.LN)\n            .where(\"MON\",       \"==\", formData.MON)\n            .where(\"DAY\",       \"==\", formData.DAY)\n            .get()\n            .then((snapshot) => {\n                // console.log(snapshot);\n                if (1 !== snapshot.size) {\n                    return false;\n                } else {\n                    console.log('record found');\n                    let userID = false;\n                    let data = snapshot.docs[0].data();\n                    if (data.userID) {\n                        userID = data.userID;\n                    } else {\n                        console.log(\"no userID field\", data);\n                    }\n                    return userID;\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                return false;\n            });\n    }\n\n    registerUser(formData) {\n        let userID = false;\n        console.log('registering user');\n        return this.getNextUserNum()\n        .then((userNum) => {\n            // if even cond1 if odd cond2\n            let conditionNum = (userNum % 2) + 1;\n            let conditionStr = `${conditionNum}`;\n            userID = `USER${userNum}_${conditionNum}`;\n            let activityList = STUDY3.conditionActivities[conditionStr];\n            let data = Object.assign(formData, {\n                userID: userID,\n                condition: conditionStr,\n                completedAssignments: JSON.stringify([])\n            });\n            // assignments: JSON.stringify(activityList),\n            return this.store.collection(\"STUDY_3\").doc(userID).set(data)\n        })\n        .then(() => {\n            return userID;\n        })\n        .catch((error) => {\n            console.error(error);\n            return false;\n        })\n    }\n\n    getUserData() {\n        // returns promise with 'doc' if it exists, false otherwise\n        let userData = false;\n        return this.userRef.get()\n        .then((doc) => {\n            if (doc.exists) {\n                let data = doc.data();\n                userData = {\n                    userID: data.userID,\n                    condition: data.condition,\n                    assignments: STUDY3.conditionActivities[data.condition],\n                    completedAssignments: JSON.parse(data.completedAssignments)\n                }\n            }\n\n            return userData;\n        });\n    }\n\n    markActivityAsCompleted(activityId) {\n        // console.log(`markActivityAsCompleted(${activityId})`);\n        return this.userRef.get()\n        .then((doc) => {\n            let data = doc.data();\n            return JSON.parse(data.completedAssignments)\n        })\n        .then((completedAssignments) => {\n            // console.log(\"BEFORE:\", completedAssignments);\n            if (!completedAssignments.includes(activityId)) {\n                completedAssignments.push(activityId);\n            }\n            // console.log(\"AFTER\", completedAssignments)\n            return this.userRef.update({\n                completedAssignments: JSON.stringify(completedAssignments)\n            });\n        });\n    }\n\n    getCurrHypoTask() {\n\n    }\n\n    getActivityData(activityKey, decodeJSON=true) {\n        return this.userRef.get()\n        .then((doc) => doc.data())\n        .then((userData) => {\n            console.log(\"userData\", userData);\n            if (!userData) {\n                return null;\n            }\n            let data = userData[activityKey];\n            if (!data) {\n                return null;\n            }\n            if (data && decodeJSON) {\n                return JSON.parse(data);\n            } else {\n                return data;\n            }\n        }).catch((error) => {\n            console.error(error);\n            return null;\n        });\n    }\n\n    setActivityData(activityKey, state) {\n        let activityState = JSON.stringify(state);\n        return this.userRef.update({\n            [activityKey]: activityState\n        })\n        .then(() => {\n            console.log(\"app data saved successefully\")\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n    // getRQData() {\n    //     return this.getAppData(\"rqted\");\n    // }\n\n\n    // getInitialHypoData() {\n    //     return this.getAppData(\"initialHypo\")\n    //     .then((strData))\n    // }\n\n    // getFinalHypoData() {\n    //     return this.getAppData(\"finalHypo\")\n    // }\n\n    setValues(object, overwrite=false) {\n        // default to {merge: true} option for safety\n        return this.userRef.set(object, {merge: !overwrite});\n    }\n\n    updateValues(object) {\n        return this.userRef.update(object);\n    }\n\n    deleteValue(varName) {\n        return this.userRef.update({\n            [varName]: firebase.firestore.FieldValue.delete()\n        });\n    }\n\n    // saveJSONValue(varName, value) {\n    //     return this.userRef.set({\n    //         [varName]: JSON.stringify(value)\n    //     });\n    // }\n\n    // getBoolValue(varName) {\n\n    // }\n\n    // getIntValue(varName) {\n\n    // }\n\n    // getFloatValue(varName) {\n\n    // }\n\n    // getTextValue(varName) {\n\n    // }\n\n    // getJSONValue(varName) {\n\n    // }\n};","export const activities = [\n    {\n        id: \"matsPreTest\",\n        label: \"\\\"MATS\\\" Science Survey (pre)\",\n        phase: \"pre-training\",\n        storageInfo: {\n            id: \"matsPreTest\",\n            key: \"mats\",\n            features: \"FTR_WEB:FTR_PRE\"\n        },\n        url: \"\",\n        implemented: false\n    },\n    {\n        id: \"diPreTest\",\n        label: \"Data Interpretation Questions - Initial\",\n        phase: \"pre-training\",\n        storageInfo: {\n            id: \"diPreTest\",\n            key: \"diPreTest\",\n            features: \"\"\n        },\n        url: \"/apps/di-prepost/pretest.html\",\n        implemented: true\n    },\n    {\n        id: \"rqSelectBL\",\n        label: \"Crystal Growth Experiment Intro\",\n        phase: \"rqSelect\",\n        storageInfo: {\n            id: \"rqSelectBL\",\n            key: \"rqted\",\n            features: \"FTR_WEB:FTR_BASELINE:FTR_NCCRYSTAL\"\n        },\n        url: \"/edforge/rq_bl.html\",\n        implemented: true\n    },\n    {\n        id: \"rqSelectNC\",\n        label: \"Research Question Selection (No Choice Crystal)\",\n        phase: \"rqSelect\",\n        storageInfo: {\n            id: \"rqSelectNC\",\n            key: \"rqted\",\n            features: \"FTR_WEB:FTR_NOCHOICE:FTR_NCCRYSTAL\"\n        },\n        url: \"/edforge/rqSelect.html\",\n        implemented: false\n    },\n    {\n        id: \"rqSelectC\",\n        label: \"Research Question Selection (Choice)\",\n        phase: \"rqSelect\",\n        storageInfo: {\n            id: \"rqSelectC\",\n            key:\"rqted\",\n            features: \"FTR_WEB:FTR_CHOICE\"\n        },\n        url: \"/edforge/rqSelect.html\",\n        implemented: false\n    },\n    {\n        id: \"hypoDefs\",\n        label: \"Hypothesis (definition pages only)\",\n        phase: \"reference\",\n        storageInfo: {\n            id: \"hypoDefs\",\n            key: \"hypoDefs\",\n            features: \"FTR_WEB:FTR_DEFS_ONLY\"\n        },\n        url: \"/apps/hypo-gr/\",\n        implemented: false\n    },\n    {\n        id: \"hypoGRinitialHypoNoCptMap\",\n        label: \"Hypothesis (Initial Hypo w/o CptMap)\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoGRinitialHypoNoCptMap\",\n            key: \"initialHypo\",\n            features: \"FTR_WEB:FTR_INITIAL_HYP:FTR_NOCPTMAP\"\n        },\n        url: \"/apps/hypo-gr/\",\n        implemented: false\n    },\n    {\n        id: \"hypoGRinitialHypoCptMap\",\n        label: \"Hypothesis (Initial Hypo with CptMap)\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoGRinitialHypoCptMap\",\n            key: \"initialHypo\",\n            features: \"FTR_WEB:FTR_INITIAL_HYP\"\n        },\n        url: \"/apps/hypo-gr/\",\n        implemented: false\n    },\n    {\n        id: \"hypoGRinitialHypoBiDir\",\n        label: \"Hypothesis (Initial Hypo Bi-Directional)\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoGRinitialHypoBiDir\",\n            key: \"initialHypo\",\n            features: \"FTR_WEB:FTR_INITIAL_HYP:FTR_BI_DIR\"\n        },\n        url: \"/apps/hypo-gr/\",\n        implemented: false\n    },\n    {\n        id: \"hypoGRfinalHypo\",\n        label: \"Hypothesis (final hypothesis)\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoGRfinalHypo\",\n            key: \"finalHypo\",\n            features: \"FTR_WEB:FTR_FINAL_HYP:FTR_NO_DEFS\"\n        },\n        url: \"/apps/hypo-gr/\",\n        implemented: false\n    },\n    {\n        id: \"hypoWEoneDir\",\n        label: \"Hypothesis Lesson\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoWEoneDir\",\n            key: \"hypoWE\",\n            features: \"FTR_ONE_DIRECTIONAL\"\n        },\n        url: \"/apps/hypo-we/\",\n        implemented: true\n    },\n    {\n        id: \"hypoWEbiDir\",\n        label: \"Hypothesis Lesson\",\n        phase: \"hypo\",\n        storageInfo: {\n            id: \"hypoWEbiDir\",\n            key: \"hypoWE\",\n            features: \"FTR_BI_DIRECTIONAL\"\n        },\n        url: \"/apps/hypo-we/\",\n        implemented: true\n    },\n    {\n        id: \"diInstrGR\",\n        label: \"Data Interpretation Instruction\",\n        phase: \"data-interpretation\",\n        storageInfo: {\n            id: \"diInstrGR\",\n            key: \"diInstruction\",\n            features: \"\"\n        },\n        url: \"/apps/di-instr/\",\n        implemented: true\n    },\n    {\n        id: \"diCrystalGrowthTest\",\n        label: \"Interpret final crystal growth results\",\n        phase: \"post-training\",\n        storageInfo: {\n            id: \"diCrystalGrowthTest\",\n            key: \"diCrystalGrowthTest\",\n            features: \"\"\n        },\n        url: \"/apps/di-prepost/crystal.html\",\n        implemented: true\n    },\n    {\n        id: \"diPostTest\",\n        label: \"Data Interpretation Questions - Final\",\n        phase: \"post-training\",\n        storageInfo: {\n            id: \"diPostTest\",\n            key: \"diPostTest\",\n            features: \"\"\n        },\n        url: \"/apps/di-prepost/posttest.html\",\n        implemented: true\n    },\n    {\n        id: \"matsPostTest\",\n        label: \"\\\"MATS\\\" Science Survey (post)\",\n        phase: \"post-training\",\n        storageInfo: {\n            id: \"matsPostTest\",\n            key: \"mats\",\n            features: \"FTR_WEB:FTR_POST\"\n        },\n        url: \"\",\n        implemented: false\n    }\n];\n","import \"./styles/index.scss\";\n\nimport { NavBar } from \"@isptutorproject/navbar\";\nimport { SnackBar } from \"@isptutorproject/snackbar\";\nimport { getDBConnection } from \"@isptutorproject/isp-database\";\nimport { activities } from \"../data/homePageData\";\n\n\n// convenience function so I don't have to constantly type document.getElementById()\nfunction getEleById(eleID) {\n    return document.getElementById(eleID);\n}\n\nlet userID, db, navbar, snackbar;\n\n// page elements\nconst loginBtn          = getEleById(\"login_button\");\nconst registerBtn       = getEleById(\"register_button\");\nconst loginBackBtn      = getEleById(\"l-back-button\");\nconst registerBackBtn   = getEleById(\"r-back-button\");\nconst loginForm         = getEleById(\"login_form\");\nconst loginSubmitBtn    = getEleById(\"login_submit\");\nconst registrationForm  = getEleById(\"registration_form\");\nconst registerSubmitBtn = getEleById(\"registration_submit\");\nconst activityBtnsList  = getEleById(\"activity_btns_list\");\n\nfunction activatePage(pageID) {\n    for (let page of document.querySelectorAll(\".page\")) {\n        if (page.id === pageID) {\n            page.classList.add(\"active\")\n        } else {\n            page.classList.remove(\"active\");\n        }\n    }\n}\n\nfunction getUserIDFromLocalStorage() {\n    userID = localStorage.getItem(\"userID\");\n}\n\nfunction setUserID(uid) {\n    userID = uid;\n    localStorage.setItem(\"userID\", uid);\n}\n\nfunction parseActivityLinkData(e) {\n    return {\n        url: e.target.getAttribute(\"data-url\"),\n        currentActivity: JSON.parse(e.target.getAttribute(\"data-activity\"))\n    };\n}\n\nfunction handleActivityHover(e) {\n    // e.preventDefault();\n    let data = parseActivityLinkData(e);\n    console.log(`\n    hovering over: ${e.target}\n    url: ${data.url}\n    currentActivity: ${JSON.stringify(data.currentActivity, null, 4)}\n    `);\n}\n\nfunction handleActivityClick(e) {\n    e.preventDefault();\n    let linkData = parseActivityLinkData(e);\n    localStorage.setItem(\"currentActivity\", JSON.stringify(linkData.currentActivity));\n    window.location.href = linkData.url;\n}\n\nfunction indexPage(e) {\n    if (e) {\n        e.preventDefault();\n    }\n    activatePage(\"index_page\");\n}\n\nfunction registrationPage(e) {\n    if (e) {\n        e.preventDefault();\n    }\n    activatePage(\"registration_page\");\n    registrationForm.reset();\n}\n\nfunction loginPage(e) {\n    if (e) {\n        e.preventDefault();\n    }\n    activatePage(\"login_page\");\n    loginForm.reset();\n}\n\nconst isImplemented = (activity) => activity.implemented;\nconst setAsActive   = (activity) => Object.assign({}, activity, { active: true });\nconst setAsInactive = (activity) => Object.assign({}, activity, { active: false });\n\nfunction markFirstIncompleteAsActive(activities) {\n    let allInactive = activities.map(setAsInactive);\n    let idx = allInactive.findIndex((i) => !i.completed);\n    if (-1 === idx) {\n        return allInactive;\n    }\n    return [\n        ...allInactive.slice(0, idx),\n        setAsActive(allInactive[idx]),\n        ...allInactive.slice(idx + 1, allInactive.length)\n    ];\n}\n\nfunction homePage(userData) {\n    activatePage(\"home_page\");\n    navbar.displayUser(userID);\n    console.log(userData);\n    // refresh activity btns\n    activityBtnsList.innerHTML = \"\";\n    let implemented = activities.filter(isImplemented);\n    let assigned = implemented\n                    .filter((act) => userData.assignments.includes(act.id));\n\n    let annotated = assigned.map((act) => Object.assign({}, act, {\n            completed: userData.completedAssignments.includes(act.id)\n        }));\n    let acts;\n    if (true) {\n        acts = markFirstIncompleteAsActive(annotated);\n    } else {\n        acts = annotated.map(setAsActive);\n    }\n\n    console.log(activities);\n    console.log(implemented);\n    console.log(assigned);\n    console.log(annotated);\n    console.log(\"acts\", acts);\n    for (let act of acts) {\n        let url;\n        let li = document.createElement(\"li\");\n        let btn = document.createElement(\"button\");\n        if (!act.active) {\n            btn.classList.add(\"disabled\")\n        }\n        btn.classList.add(\"activity-button\");\n        btn.classList.add(\"btn\");\n        btn.type = \"button\";\n        btn.innerHTML = act.label;\n        if (act.url.startsWith(\"http\")) {\n            url = act.url;\n        } else {\n            // homepage url can be at a random path, and may end with index.html\n            // localstorage retains all of this so we can simply redirect back.\n            // strip off index.html and/or trailing slash if exist and append\n            // relative path\n            let tmp = localStorage.getItem(\"homepage\");\n            tmp = tmp.replace(\"index.html\", \"\");\n            if (tmp.endsWith(\"/\")) {\n                tmp = tmp.slice(0, -1);\n            }\n            url = `${tmp}${act.url}`;\n        }\n        btn.setAttribute(\"data-activity\", JSON.stringify(act.storageInfo));\n        btn.setAttribute(\"data-url\", url);\n        btn.addEventListener(\"click\", handleActivityClick);\n        // for debugging\n        btn.addEventListener(\"mouseover\", handleActivityHover);\n        li.appendChild(btn);\n        activityBtnsList.appendChild(li);\n    }\n}\n\n\n// =============================================================================\n// ======================= userForm related functions ==========================\n// =============================================================================\n\nfunction isValidInput(input) {\n    let regex = /^[A-Za-z]+$/\n    if (regex.test(input)) {\n        return true;\n    }\n    else {\n        snackbar.show(\"Please do not enter any numbers, spaces, or special characters in your input.\");\n        return false;\n    }\n}\n\nfunction ensureLength2(value, fldName) {\n    if (value.length !== 2) {\n        snackbar.show(`Please enter exactly two letters for your ${fldName}`)\n        return false;\n    }\n    return true;\n}\n\n// simple parameterized wrapper which handles the otherwise duplicate login and\n// registration form parsing.\nfunction parseUserForm(prefix, form) {\n    let fldNames = ['classcode', 'fname', 'lname', 'bmonth', 'bday'];\n    // create a map of fldNames to prefixed ('r-' or 's-') field names\n    let flds = {};\n    fldNames.forEach((fld) => flds[fld] = `${prefix}_${fld}`);\n    let classCode = getEleById(flds.classcode).value.trim().toUpperCase();\n    if (\"\" === classCode) {\n        classCode = \"STUDY3\";\n    }\n    let retVal = {\n        \"classCode\": classCode,\n        \"FN\":  getEleById(flds.fname).value.trim().toUpperCase(),\n        \"LN\": getEleById(flds.lname).value.trim().toUpperCase(),\n        \"MON\": getEleById(flds.bmonth).value.toUpperCase(),\n        \"DAY\": getEleById(flds.bday).value\n    };\n    // console.log(retVal);\n    return retVal;\n}\n\n// =============================================================================\n// ================================= Event Listeners ===========================\n// =============================================================================\n\n\nloginBtn.addEventListener(\"click\", loginPage);\nregisterBtn.addEventListener(\"click\", registrationPage);\nloginBackBtn.addEventListener(\"click\", indexPage);\nregisterBackBtn.addEventListener(\"click\", indexPage);\n\n\nloginSubmitBtn.addEventListener(\"click\", e => {\n    e.preventDefault();\n    if (loginForm.reportValidity()) {\n        let formData = parseUserForm(\"login\", loginForm);\n        // console.log(formData);\n        db.lookupUserID(formData)\n        .then((uid) => {\n            if (!!uid) {\n                console.log(`account exists: ${uid}`);\n                setUserID(uid);\n                return db.loginUser(userID);\n            }\n            return false;\n        })\n        .then((userData) => {\n            if (userData) {\n                homePage(userData);\n            } else {\n                console.error(\"loginError\");\n                snackbar.show(\"login error\");\n            }\n        });\n    }\n});\n\nregisterSubmitBtn.addEventListener(\"click\", e => {\n    e.preventDefault();\n    if (registrationForm.reportValidity()) {\n        let formData = parseUserForm(\"register\", registrationForm);\n        // console.log(formData);\n        db.lookupUserID(formData)\n        .then((uid) => {\n            // uid should be false if we're registering a new user\n            if (!!uid) {\n                snackbar.show(\"Account already exists!\");\n                console.log(`account \"${uid}\" already exists`);\n                return false;\n            } else {\n                return db.registerUser(formData);\n            }\n        })\n        .then((uid) => {\n            if (uid) {\n                setUserID(uid);\n                // classCode = formData.classCode;\n                return db.loginUser(userID);\n            } else {\n                snackbar.show(\"error creating account\");\n                return false;\n            }\n        }).then((userData) => {\n            if (userData) {\n                homePage(userData);\n            } else {\n                snackbar.show(\"login error\");\n            }\n        });\n    }\n\n});\n\nfunction initApp() {\n    navbar = new NavBar();\n    snackbar = new SnackBar();\n    // let DB = \"localstorage\";\n    let DB = \"firestore\";\n    let schema = \"study3\";\n    let homePageURL = window.location.href;\n    localStorage.setItem(\"homepage\", homePageURL);\n    localStorage.setItem(\"database\", DB);\n    db = getDBConnection(DB, schema);\n    console.log(db);\n    window.db = db;\n    getUserIDFromLocalStorage();\n    if (userID) {\n        db.loginUser(userID)\n        .then((userData) => {\n            if (userData) {\n                homePage(userData);\n            } else {\n                snackbar.show(\"login error\");\n            }\n        })\n    } else {\n        indexPage();\n    }\n}\n\ninitApp();","import { LocalStorageDB } from \"./localStorageDB\";\nimport { FirestoreDB } from \"./firestoreDB\";\n\nexport function getDBConnection(dbType, schema) {\n    let db;\n    switch(dbType) {\n        case \"firestore\":\n            db = new FirestoreDB();\n            break;\n        default:\n            db = new LocalStorageDB();\n    }\n    return db;\n}\n"],"sourceRoot":""}